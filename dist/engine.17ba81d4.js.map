{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","hexy.js","contrastV2.js","../node_modules/process/browser.js","../node_modules/path-browserify/index.js","../node_modules/os-browserify/browser.js","../node_modules/safe-buffer/index.js","../node_modules/randombytes/browser.js","../node_modules/inherits/inherits_browser.js","../node_modules/events/events.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/hash-base/node_modules/readable-stream/errors-browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/util-deprecate/browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/hash-base/node_modules/readable-stream/readable-browser.js","../node_modules/hash-base/index.js","../node_modules/md5.js/index.js","../node_modules/ripemd160/index.js","../node_modules/sha.js/hash.js","../node_modules/sha.js/sha.js","../node_modules/sha.js/sha1.js","../node_modules/sha.js/sha256.js","../node_modules/sha.js/sha224.js","../node_modules/sha.js/sha512.js","../node_modules/sha.js/sha384.js","../node_modules/sha.js/index.js","../node_modules/process-nextick-args/index.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/readable-stream/node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/writable-browser.js","../node_modules/readable-stream/duplex-browser.js","../node_modules/readable-stream/transform.js","../node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","../node_modules/cipher-base/index.js","../node_modules/create-hash/browser.js","../node_modules/create-hmac/legacy.js","../node_modules/create-hash/md5.js","../node_modules/create-hmac/browser.js","../node_modules/browserify-sign/browser/algorithms.json","../node_modules/browserify-sign/algos.js","../node_modules/pbkdf2/lib/precondition.js","../node_modules/pbkdf2/lib/default-encoding.js","../node_modules/pbkdf2/lib/to-buffer.js","../node_modules/pbkdf2/lib/sync-browser.js","../node_modules/pbkdf2/lib/async.js","../node_modules/pbkdf2/browser.js","../node_modules/des.js/lib/des/utils.js","../node_modules/minimalistic-assert/index.js","../node_modules/des.js/lib/des/cipher.js","../node_modules/des.js/lib/des/des.js","../node_modules/des.js/lib/des/cbc.js","../node_modules/des.js/lib/des/ede.js","../node_modules/des.js/lib/des.js","../node_modules/browserify-des/index.js","../node_modules/browserify-aes/modes/ecb.js","../node_modules/buffer-xor/index.js","../node_modules/browserify-aes/modes/cbc.js","../node_modules/browserify-aes/modes/cfb.js","../node_modules/browserify-aes/modes/cfb8.js","../node_modules/browserify-aes/modes/cfb1.js","../node_modules/browserify-aes/modes/ofb.js","../node_modules/browserify-aes/incr32.js","../node_modules/browserify-aes/modes/ctr.js","../node_modules/browserify-aes/modes/list.json","../node_modules/browserify-aes/modes/index.js","../node_modules/browserify-aes/aes.js","../node_modules/browserify-aes/ghash.js","../node_modules/browserify-aes/authCipher.js","../node_modules/browserify-aes/streamCipher.js","../node_modules/evp_bytestokey/index.js","../node_modules/browserify-aes/encrypter.js","../node_modules/browserify-aes/decrypter.js","../node_modules/browserify-aes/browser.js","../node_modules/browserify-des/modes.js","../node_modules/browserify-cipher/browser.js","../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","../node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","../node_modules/brorand/index.js","../node_modules/miller-rabin/lib/mr.js","../node_modules/diffie-hellman/lib/generatePrime.js","../node_modules/diffie-hellman/lib/primes.json","../node_modules/diffie-hellman/lib/dh.js","../node_modules/diffie-hellman/browser.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js","../node_modules/bn.js/lib/bn.js","../node_modules/browserify-rsa/index.js","../node_modules/elliptic/package.json","../node_modules/elliptic/node_modules/bn.js/lib/bn.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/asn1.js/node_modules/bn.js/lib/bn.js","../node_modules/safer-buffer/safer.js","../node_modules/asn1.js/lib/asn1/base/reporter.js","../node_modules/asn1.js/lib/asn1/base/buffer.js","../node_modules/asn1.js/lib/asn1/base/node.js","../node_modules/asn1.js/lib/asn1/constants/der.js","../node_modules/asn1.js/lib/asn1/encoders/der.js","../node_modules/asn1.js/lib/asn1/encoders/pem.js","../node_modules/asn1.js/lib/asn1/encoders/index.js","../node_modules/asn1.js/lib/asn1/decoders/der.js","../node_modules/asn1.js/lib/asn1/decoders/pem.js","../node_modules/asn1.js/lib/asn1/decoders/index.js","../node_modules/asn1.js/lib/asn1/api.js","../node_modules/asn1.js/lib/asn1/base/index.js","../node_modules/asn1.js/lib/asn1/constants/index.js","../node_modules/asn1.js/lib/asn1.js","../node_modules/parse-asn1/certificate.js","../node_modules/parse-asn1/asn1.js","../node_modules/parse-asn1/aesid.json","../node_modules/parse-asn1/fixProc.js","../node_modules/parse-asn1/index.js","../node_modules/browserify-sign/browser/curves.json","../node_modules/browserify-sign/browser/sign.js","../node_modules/browserify-sign/browser/verify.js","../node_modules/browserify-sign/browser/index.js","../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","../node_modules/create-ecdh/browser.js","../node_modules/public-encrypt/mgf.js","../node_modules/public-encrypt/xor.js","../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","../node_modules/public-encrypt/withPublic.js","../node_modules/public-encrypt/publicEncrypt.js","../node_modules/public-encrypt/privateDecrypt.js","../node_modules/public-encrypt/browser.js","../node_modules/randomfill/browser.js","../node_modules/crypto-browserify/index.js","../node_modules/dotenv/package.json","../node_modules/dotenv/lib/main.js","engine.js"],"names":["Hexy","constructor","input","hex","arr_1","arr_2","color_1","color_2","count","color_array","output","category","stringToHex","_input","encoded","Buffer","from","toString","original_hex","splitHex","_hex","undefined","length","padEnd","slice","getData","reset","getforeGround","foreground","getBackGround","background","getOriginalText","original_string","setOriginalHex","getRelativeLuminance","color","red","parseInt","substring","green","blue","percentRed","percentGreen","percentBlue","redLum","Math","pow","greenLum","blueLum","e","console","log","getContrastRatio","lumFore","lumBack","max","min","getRatioCategory","_ratio","cRatio","l_AAA","n_AAA","l_AA","n_AA","module","exports","Contrast_V2","contrastRatio","hexColor","increaseBrightness","_color","_factor","hslColor","hexToHSL","hslToHex","decreaseBrightness","replace","r","g","b","l","h","s","d","round","_ref","hue2rgb","p","q","t","toHex","x","calculateCompliantColors","_foreground","_background","result","toFixed","checkCompliance","_level","L1","getLuminance","L2","_hexColor","sRGB","map","channel","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","R","Reflect","ReflectApply","target","receiver","Function","ReflectOwnKeys","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","ProcessEmitWarning","warning","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","n","_getMaxListeners","that","getMaxListeners","type","doError","events","error","er","err","message","context","handler","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","emitter","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","list","position","originalListener","shift","spliceOne","keys","key","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","index","pop","ret","Promise","resolve","reject","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","require","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_toPrimitive","hint","prim","Symbol","toPrimitive","res","_require","_require2","inspect","custom","copyBuffer","src","offset","BufferList","head","tail","v","entry","data","next","clear","join","alloc","allocUnsafe","consume","hasStrings","_getString","_getBuffer","first","c","str","nb","buf","_","options","depth","customInspect","destroy","cb","_this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","emitErrorNT","errorEmitted","_destroy","emitErrorAndCloseNT","emitCloseNT","self","emitClose","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","stream","rState","wState","autoDestroy","_inheritsLoose","subClass","superClass","__proto__","codes","createErrorType","code","Base","getMessage","arg1","arg2","arg3","NodeError","_Base","oneOf","expected","thing","isArray","startsWith","search","pos","substr","endsWith","this_len","includes","start","indexOf","actual","determiner","msg","ERR_INVALID_OPT_VALUE","highWaterMarkFrom","isDuplex","duplexKey","highWaterMark","getHighWaterMark","hwm","isFinite","floor","objectMode","Writable","WriteReq","chunk","encoding","callback","CorkedRequest","finish","onCorkedFinish","Duplex","WritableState","internalUtil","deprecate","Stream","OurUint8Array","global","window","Uint8Array","_uint8ArrayToBuffer","_isUint8Array","isBuffer","destroyImpl","_require$codes","ERR_INVALID_ARG_TYPE","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","needDrain","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","bufferedRequestCount","corkedRequestsFree","getBuffer","current","out","writableStateBufferGetter","realHasInstance","hasInstance","write","_write","writev","_writev","final","_final","pipe","writeAfterEnd","validChunk","isBuf","writeOrBuffer","cork","uncork","clearBuffer","setDefaultEncoding","toLowerCase","decodeChunk","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","afterWrite","onwriteDrain","buffer","holder","allBuffers","end","endWritable","callFinal","prefinish","need","corkReq","_undestroy","objectKeys","Readable","method","allowHalfOpen","readable","onend","onEndNT","ERR_STREAM_PREMATURE_CLOSE","called","_len","_key","isRequest","setHeader","abort","eos","opts","onlegacyfinish","onfinish","writableEnded","readableEnded","onerror","onclose","onrequest","req","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","done","readAndResolve","iter","read","onReadable","wrapForNext","lastPromise","then","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","asyncIterator","_return","_this2","createReadableStreamAsyncIterator","_Object$create","iterator","ReadableState","EE","EElistenerCount","debugUtil","debug","debuglog","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","StringDecoder","kProxyEvents","event","fn","readableObjectMode","pipes","pipesCount","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","_read","skipChunkCheck","readableAddChunk","addToFront","onEofChunk","chunkInvalid","addChunk","maybeReadMore","emitReadable","isPaused","setEncoding","enc","content","MAX_HWM","computeNewHighWaterMark","howMuchToRead","nOrig","endReadable","doRead","fromList","emitReadable_","flow","maybeReadMore_","dest","pipeOpts","doEnd","stdout","stderr","endFn","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanup","ondrain","pipeOnDrain","cleanedUp","ondata","pause","resume","pipeOnDrainFunctionResult","dests","splice","ev","nReadingNextTick","updateReadableListening","resume_","wrap","methodWrap","methodWrapReturnFunction","_fromList","endReadableNT","iterable","xs","Transform","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","err2","PassThrough","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pipeline","destroys","reduce","inherits","throwIfNotStringOrBuffer","val","prefix","HashBase","blockSize","_block","_blockSize","_blockOffset","_length","_finalized","update","digest","block","_update","j","carry","_digest","fill","pna","asyncWrite","setImmediate","util","writableHwm","writableHighWaterMark","defaultHwm","valid","MAX_ALLOC","iterations","keylen","browser","pVersionMajor","split","ArrayBuffer","isView","md5","RIPEMD160","sha","checkParameters","toBuffer","ZEROS","sizes","sha1","sha224","sha256","sha384","sha512","rmd160","ripemd160","Hmac","alg","saltLen","hash","getDigest","blocksize","ipad","opad","ipad1","ipad2","size","shaFunc","rmd160Func","pbkdf2","password","salt","hmac","DK","block1","destPos","hLen","ceil","writeUInt32BE","T","U","k","ZERO_BUF","subtle","crypto","toBrowser","checks","checkNative","algo","importKey","deriveBits","prom","browserPbkdf2","catch","getNextTick","queueMicrotask","resolvePromise","resp","pbkdf2Sync","createHmac","crt","EC","ec","BN","parseKeys","curves","RSA_PKCS1_PADDING","sign","hashType","signType","tag","priv","curve","ecSign","dsaSign","padding","modulus","byteLength","pad","curveId","keyFromPrivate","privateKey","toDER","params","priv_key","H","bits2int","mod","kv","getKey","makeKey","makeR","invm","imul","add","mul","cmpn","toArray","total","zeros","hlen","hbits","bits2octets","obits","bits","bitLength","ishrn","cmp","toRed","mont","redPow","fromRed","verify","sig","pub","ecVerify","dsaVerify","padNum","publicExponent","algorithm","pubkey","subjectPrivateKey","y","pub_key","unpacked","signature","decode","checkValue","montp","createHash","algorithms","id","Sign","_hashType","_hash","_tag","_signType","signMethod","Verify","verifyMethod","sigBuffer","createSign","createVerify","oldBrowser","safeBuffer","randombytes","kBufferMaxLength","kMaxLength","msCrypto","kMaxUint32","assertOffset","assertSize","getRandomValues","randomFill","randomFillSync","actualFill","ourBuf","uint","bytes","fs","path","os","packageJson","LINE","parse","lines","match","exec","trim","maybeQuote","_parseVault","vaultPath","_vaultPath","DotenvModule","configDotenv","parsed","_dotenvKey","decrypted","attrs","_instructions","decrypt","ciphertext","_log","_warn","_debug","DOTENV_KEY","dotenvKey","uri","URL","environment","searchParams","environmentKey","toUpperCase","dotenvPath","_resolveHome","envPath","homedir","_configVault","processEnv","populate","Boolean","readFileSync","config","existsSync","encrypted","keyStr","nonce","authTag","aesgcm","createDecipheriv","setAuthTag","isRange","invalidKeyLength","decryptionFailed","override","hasOwnProperty","document","getElementById","treeLevels","querySelectorAll","treeMain","div1","div2","div3","div4","btn1","btn2","btn3","btn4","container","socket","io","sendData","Contrast","contrast","style","borderBottomColor","insertTextIntoDivs","innerHTML","div","createElement","innerText","appendChild","arrayItem","arrayItemDiv","JSON","stringify","textDiv"],"mappings":"A4KAA,AHAA,ACAA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,AHAA,ADAA,ApKAA,AuGAA,ALAA,AXAA,ALAA,AFAA,AUAA,ADAA,AWAA,ADAA,AlCAA,ADAAgE,AkHAAA,AlEAA,ASAA,ADAA,AJAA,AEAAA,AIAA,ATAA,AJAAA,AcAAC,A/EAA,AgBAA,AEAA,AkIAA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AiCAA,ACAA,AuFAAD,ArCAA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AHAA,AlHAA,AIAA,AWAA,ADAA,AJAA,AEAAA,AIAA,AXAA,AJAAA,AgBAAC,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,ATAA,AsGAA,A/BAA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AtGAAA,ALAA,A4HAA,ALAA,AlIAA,APAA,AIAA,ADAA,ALAA,AJAA,AeAA,AJAA,AGAA,AFAA,AdAA,AkBAA,ArDAA,A8LAA,IjIAIolB,AiIAArpB,EnIAE,AkHAA,A5DAA,ATAA,AoFAA,AzKAA,AXAA,ARAAkE,C2DACD,AkHAAA,A5DAAA,ATAAA,AcAA,AsEAAA,AzKAAA,AXAAA,AgBAA,A0CAA,CAACunB,A4HAA,ExEAExnB,A9FAAA,CsKACkM,ClIAC,A+CAA,ACAA,AjGAA,ACAA,CiDAC,CFAC,AkHAA,A5DAA,ATAA,AoFAA,AzKAA,AXAA,A0DAA,EoDAE,A9FAA,AqCAArN,CFAC,AkHAA,A5DAA,ATAAqN,AcAAjM,AsEAA,AzKAA,AXAAiM,AgBAAjM,A0CAAiM,AlEAA,CAAC,A8LAA,CAAC,CjIAC,CAACpN,G2CAG,AcAA,A9GAA,AgBAA,A0CAA,ALAA,C2CAC,AhGAA,A0DAA,ALAA,CAAC,CyDACoN,A9FAAA,AsKAA,CjIAC,AiIAA,C7EAC,A9FAA,C0CAC,CAAC,E2CAE,AhGAA,CgGAC,AcAA,A9GAA,AgBAA,AqCAA,C2CAC/E,AcAA,A9GAAA,AgBAA,AqCAA,EAAC,CKAE,CAAC,QsCAQ,AhGAA,e8GAe,A9FAA,C8FAC,A9FAA;A+IC/D,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDAA,AFAA,ACAA,AjEAA,AMCA,ADAA,AHDA,APAA,ACAA,AKCA,AMAA,ACAAlH,A1CDA,AtBAA,AfCA,A2IDA,ADAA,A1HCA,AEAA,ACDA,AFAA,AmICA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AuDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEAA,AVAA,AOCA,ADAA,AHDA,ATAA,ACAA,AOCA,AMAA,ACAAA,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,ATAA,A6BDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,AgECAA,AFDA,ADAA,A3BAA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AlIAA,APAA,AIAA,ADAA,ANDA,ACCA,AJAA,ACDA,AMAA,AQCA,AJAA,AGAA,AFAA,AtBDA,AvBAA,AwBAA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,A/LDA,E4DCE,AkHAA,A5DAA,A2EAA,AzKAA,AnBCFhE,EgEFI4pB,ADAA9oB,A+HCAmD,E/LDElE,CuHCC,A9FAA,A0CAA,AFDA,CiDCC,AKAAiZ,AsEAA,AzKAA,AKAAA,A0CAAoU,E0HAE,A5HDAnd,ADAA,AhEAA,CAAC,CiLAC,AFAA,ACAA,A/DAA,APAA,ACAA,AOCApJ,AxFDA,APAA,ATAA,ACAA,ASCAA,C4CDCoJ,A/DEFjQ,CsHDG,A9FAA,AxBCH,C8LDI,CjBAC,A7KCD,CiHDE,AKAAgE,AnGAA,AKAAA,AwCDA,C6GCC,A5DAA,A2EAA,AzKAA,A+CAA,AFDA,A8HCAiM,E/HDE,CGCCA,AHDA,GuDCG,A9FAA,CsKAC,CAAC,CnIAC,COAC,CPAC,AkHAA,A3GAA,KHDK,CCAC,ADAA,CCAC,ADAAnP,I+HCI,C5HAC,A4HAA,C5HAC,AHDA,uBkDCuB,A9FAA,C8FAC,A9FAA;AoJClE,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,A5DCAiD,A+CAA,AGDA,AMCA,ADAA,AFAA,ALAA,AUAAC,A1CDA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AEAA,ACDA,AFAA,AmICA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FDA,AtCEA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A/ECA,AIDA,AOCA,ADAA,AFAA,APAA,AYAAA,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,ATAA,A6BDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DDA,AHAA,ADEAD,AGDA,ADCAA,A3BDA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AzIAA,AIAA,ADAA,ANDA,ACCA,AHDA,AMAA,AICA,ArBDA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,C7EAC,A9FAA,C0JAC,AeAA,A7LDE/D,E4DCA,AiDAA0X,AhGAAA,AqDFA5W,AHAAyZ,AECAsP,A/DAApjB,ADEF,E4DDI,AiIFAgtB,AhIEA,AEAA,CHACzvB,A0DAA,A9FAA,AqCAAA,AEAAA,CuDAC+Z,AuEFA,ArKEAA,AxBCF,C2GDGnI,AhGAAA,AXCF1R,C2DDG,AMFA,C4HAC+L,ADEA,A3LDA,C0DCC,CiIAC,A3HFAA,ADCA,AjEAEjQ,C6DCD,ACAA,AEAA,A9DDA+D,AFAC,E8KCC,AvDAA,A9FAA,AwCDAkM,AjEAE,C6DCDA,ADAA,AEAA,AEAA,C8GAC,AgBFA,CvEECjM,AuEFA,ArKEAA,AsCFA,CGAC,AhECA,C2LCC,A3HFA,AhECAA,CDED,C2GDG4R,AkFFA,AlLEAA,AqDDA,CJCC,AiHAA,AlEAAC,AkFFA,AlLEAA,AqDDA,CJCC,AgDAA,AhGAA,C0GAC,A9FAA,CqCACwT,AEAAzS,C6CAC3G,AhGAAA,AXDA,GAAG,C0GCC,AhGAA,AoDAA,A9DDA,CAAC,C0GCC6F,AhGAAA,AsDFA,AFEAyC,C6CAC,AhGAA,AqDFA,ADCA,C4CCC,AhGAA,AqDFAzX,ADCA,CHCC,EAAEwoB,GIFG,AFEA,E4CAE,AhGAA,AoDAA5f,CFAC,C8CAC,AhGAA,CkDAC,CEAC,EAAE,EHAE,CAAC,AgDAA,AhGAA,CgGAC,AhGAA,CgGACsM,AhGAAA,KgGAK,AhGAA,CgGAC0B,AhGAAA,qBgGAqB,AhGAA;A2JClF,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDAA,AFAA,ACAA,AjEAA,AMCA,AFHA,ACGA,ANHA,AGEA,APAA,ACAA,AKCA,AMAA,ATAA,AUAA1T,A1CDA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AEAA,ACDA,AFAA,AmICA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FDA,AtCEA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEDA,AVCA,AOCA,AFHA,ACGA,APHA,AIEA,ATAA,ACAA,AOCA,AMAA,AXAA,AYAAA,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,ATAA,A6BDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DAA,AHDA,AECA,A5BAA,AqJCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,A/KHA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AICA,ArBDA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EjBAE,AlED8C6R,AiFC9C,AjLD8CA,AkDC9C,AEAA,EJAE,AqHDA/U,AhEAAwe,AvFDAxe,APCAwe,A+CAAyK,ADAAD,AhEEF,ADFK,E8LDD4J,AhIEA,AEAA5yB,CuDAC,A9FAA,AwCDA,CsDCCsX,A9FAAA,AxBCF,ADFK,C0GAF7N,AGCAoN,AnGDApN,AGCAoN,AZCFhW,ADFK1B,C4DCF,AqHDA,ArEA8C,AkFD9C,ApKAA,AdC8C,AqDA9CgQ,C2CA+CzH,AhGAAA,CgDC7C,AoDAA,AMAA,ApGAA,AMAA,AwCAA,A2HHA,CVECyH,AaDAA,ApKAAA,AoCEAoZ,AEAA9P,ChEDI,C6LCF,CnFDChP,AaCA,A7GDAA,AeCA,CiFDC2F,AmFCA,AnLDAA,AuDAA,AjEAG,CiEAF,CsDCCD,A9FAAA,AyCDA,AjEEF,ADFK,C4DCF,AqHDA,ArEA8C,AkFD9C,ApKAA,AdC8C,CqKA7C,AaDA,ApKAA,AsCEA,CEDCA,AFCA2G,C8GAC,AlED8CpM,AFA9C,A9FA8CA,AFA9C,AoDCA,EgHAE,A7DDA,APAA2F,AvFAA,ATAAA,CmGCCwH,AUAA,A1GAAA,AYAA,AwCDA,C4CCC9D,AUAA,AuEFA,AjLEAA,AYAA,AwCDA,ADCA,C8HFC,AhIEA,AEAA,C4CD+C,AhGAA,AsDA9C,C0CA+C3H,AhGAAA,AsDA9C,AFCA,C8GAC,GGDG,ApECA,AnFFA,AbEA,CoKDC,AvJDA,CuJCCpL,ArEA8C,ACC9C8W,AnFFA9W,AdC8C,ACC9C8W,AiDAA,C8CD+C9B,AhGAAA,CkDC7C,C4CDC,AhGAA,EgGAE,AhGAA,CuKAC,AvJDA,EmFEE,AhGAA,EgGAE+B,AhGAAA,AqDDA,C0CA+C,AhGAA,AsDA9C,C0CA+CrP,AhGAAA,M2GCxC,A9FAA,CoFAC,AUAA,A1GAA,AYAA,EmFDgD,ACC9C,AjGD8C,ACC9C,C+FD+C,AhGAA,GiLC3C;ArBC7D,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDAA,AFAA,ACAA,AjEAA,AMCA,AFHA,ACGA,ANHA,AGEA,ANAA,AYCAxE,A1CDA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AEAA,ACDA,AFAA,AmICA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FDA,AtCEA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEDA,AVCA,AOCA,AFHA,ACGA,APHA,AIEA,ARAA,AcCAA,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,ATAA,A6BDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DAA,AHDA,AECA,A5BAA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,A/KHA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AICA,ArBDA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EjBAE,AlEFwG6R,AFA/D,AGEzC,AgFAA,AjLFwGA,AFA/D,AGEzC,E+CAE,AqHDA8b,AFAA7wB,ACAAA,AtJDAilB,AwCCAxL,AHDArB,ADEA,AGDApY,ADCA,A/DCF,ADFK,E0GDwC0N,AoFAzCmlB,ApLAyCnlB,C6GExC,A9FAA,CmCAC,A2DAAoK,AuEFA,ADEA,ApKAAA,AxBCF,ADFK,CiHAFjI,ANAAqD,AECAH,A1FDAlD,ARAAqD,AECAH,AZCFhS,ADFK3B,C4DCF,AmHDA,ACAA,ApEDwG,AFA/D,AmFEzC,AjLFwG,AFA/D,AqDAzC,ADEA,AGDA,C2CDyGsI,AkFAxGyH,AlLAwGzH,AmDAxG/B,ACEAmQ,ChEDI,C+KAF3G,ACAAA,AtEDyCzF,AhFAzC,AhBAyCA,AuDCzCyF,CgHAC,A1DCA,A9FAA,AqCAAvE,C9DDE,C2GAAsI,AECA,AnFFA/D,AfCA+D,AECA,AmDAA,CiHDC/D,AtEAApD,AECAiL,AUAA7H,A5GDApD,AECAiL,AYAA7H,AzBDC,C8LDA,A/HAA,C2CA0C,AoFAzC,ApLAyC,AwDCzC,AjEEF,C8KFG,ACAA,ApEDwG,AFA/DzB,ACCzC,A/FDwG,AFA/DA,ACCzC,AsDAA,C8GAC,ACAA,ApEDwGxO,AhGAAA,AqDCxG,C0CACiU,AhGAAA,AuDAAhE,AHDAiJ,C+GEC,AgBFA,ADEA,AnKFA,AoCEA,CmHDC,AhEAAvI,APDyC,ACCzC,AYCA,AuEFA,ApKAA,APCAA,ATDyC,ACCzC,AcCA,AqCAA,CgHAC,AGDA,AhEAAG,APDyCZ,AaEzC,ApGDAY,ATDyCZ,AeEzC,CkFDC,AhGAA,EsGAE,A9FAA,A4CDA,CGCC,AHDAzJ,CkDCCgI,AJCA,A1FDAA,ANCA,AqDDA,C4GCC,ApEFyC,AhGAA,CkGAgE,AFA/D,A9FA+D,AFA/D,CuGCxC,A9FAA,C4JAC,ACAA,AnECA,AhGAA,AoDDA,C8GAC,ACAA,ApEDwGoH,AKCxG5K,ArGDwG4K,AOCxG5K,A8CAA,C8GACnK,ACAAA,AjHDA,AECAA,CFDCyoB,CkHCC,ApECA,AhGAA,CoKDC,ChEAC,A9FAA,C0FCC1V,AnFFA,AbEAA,CkKDC,ACAA,A/DAA,AvFDA,APCA,A8CAA,C2CDyG,AlFAxGkS,AdAwG,CmDAvG,EAAE,E8CEE,AhGAA,CgGACjO,AhGAAA,AiDAA,CyDAC,A9FAA,AyCDA,AJCA,CyDAC,A9FAA,AyCDA,CxCDC,UmFEU,AhGAA,GgGAGF,AhGAAA,QgGAQ,AhGAA,GgGAG/D,AhGAAA,OgGAO,AhGAA,CgGACgE,AhGAAA,SgGAS,AhGAA,CgGAC,AhGAA,GgGAG,AhGAA,IgGAI,AhGAA;A2JCrG,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDAA,AFAA,ACAA,AjEAA,AMCA,AFHA,ACGA,ANHA,AEGA,AMAA,ATAA,AUAA7T,A1CDA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AEAA,ACDA,AFAA,AmICA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FDA,AtCEA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEDA,AVCA,AOCA,AFHA,ACGA,APHA,AGGA,AMAA,AXAA,AYAAA,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,ATAA,A6BDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DAA,ADCA,A5BDA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,A/KHA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AICA,ArBDA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCAiM,EnIAE,AkHAA,AlEHmJ4F,AKCzGpH,APD+B,ACEzE,AkFCA,AjLHmJoH,AOCzGpH,ATD+B,ACEzE,AoDDA8L,ADEA,AEAA,CJAC,AIAA,CiHDC/E,AFAA6X,ACAAI,AhECApP,AMAAO,A5FFA6I,AREApJ,AMAAO,A0CDAlE,ADCAqP,AhECF,ADFK,CiHDwC,A9FAA,C6JCzC,AtEFyEvf,ACEzE0J,AmFDAoY,ApLDyE9hB,ACEzE0J,C2GCC,ACAA,A/FAA,ACAA,AsKAA,C9EF2CnD,AME1CgV,ApGF0ChV,AME1CgV,AyCDA,AjEEF,A8LDE,A/LDG,CgLAF9V,AaCA,A7HAA,A2HHAwiB,A1LIFtuB,ADFKhE,CiLAF,ArEFmJ,AhGAA,CgGAC4V,ADEnJ,AkFCA,AjLHmJA,ADEnJ,AuDAA9F,CwCF0E,AoFCzE,ApKAA,AhBDyE,CuKExEA,AvEFyExF,AhGAAA,AsDGzE,C+GDC,ApEAA,AhGAA,AXAG,C8LDFwF,ApKAAA,CoJEC,AEDA,AeCA,ChBDCA,ACAA,AzDCA,A9FAA,AsCFA,A9DGF,A8LDE,A/LDG,C8KCF,AnEDA,AhGAA,AuDAA,A6HCAmmB,C7HDC,ADCA,A0HHA3D,A3LEG,CiLAF,ArEFmJ,AWGnJxiB,A3GHmJ,AaGnJA,AsCFA,ACEA2G,A2HHD,A1LIH,CgLFK,ChED2C,A6EA1C,ApKAA,APA0C,A8CE1C3G,A0HHC,C/EAmJ6F,AKCzGrH,A6EA1C,ApKAA,AdDmJqH,AOCzGrH,C2JEzC,ACDA,ACAA,AeCA,ChBDC,ACAA,AhHCA,A+HAA,C9EF2C,A4EE1C,A1KF0C,A4KE1C,C9EF2C,AME1C,ApGF0C,AME1C,AyCDA,AHDA,CwDEC,A9FAA,AyCDA,CDCC,AhECJ,C+GDK,A9FAA,A+CAA,ADAA,C8HFC,CAAC,ClFDoJ,AIGnJwB,AtFFA,AdDmJ,AMGnJA,CwFH0E,AhFCzE,AhBDyE,EgGAE,AhGAA,EuKEvE,AFAA,A/GCA,CiHDC,AFAA,C/DCC,A9FAA,A8CAA,CgDAC,A9FAA,K+CAK,CAAC,SsDAS,A9FAA,C8FAC,A9FAA,CuFAC,A9FAA,C8FAC,A9FAA,C8FAC+F,A9FAAA,K8FAK,A9FAA,C8FACqI,A9FAAA,0B8FA0B,A9FAA;AsJC5F,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDAA,AFAA,ACAA,ApEHsL,AGGtL,AMCA,AFHA,ACGA,ANHA,AEGA,AMAA,ATAA,AUAAra,A1CDA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FDA,AtCEA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEAA,AdHsL,AIGtL,AOCA,AFHA,ACGA,APHA,AGGA,AMAA,AXAA,AYAAA,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DAA,AHDA,AEEA,A5BDA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,A/KHA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AICA,ArBDA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,ChIFC,CHEC,AkHAA,A7DHqE,ANErE,AkFCA,A1KHqE,ARErE,AmDEA,A6HJA,A1LIF,EgLFIyjB,AFAA6F,ACAAC,AtEH2G,AhGAA,AwDG3GvD,ADCAzP,ADAA,AhEDG,EgLAD,A/DFqE9L,ANErE0F,AmFDAyf,A3KDqEnlB,ARErE0F,AmDEAkV,CiHFC,AxDCA,A9FAA,AsCFA,C2CF4GjZ,AaI3G2W,A7GJ2G3W,AeI3G2W,AkKHA,A3LEG,CgLAF9W,A/DFqE,ADGrE/G,AMAAA,ATAA6O,AnFDA2P,APFqE,ADGrExe,AMAAA,AXAA6O,AbDG3X,C+KAF6P,CcCC,A9HFAiJ,ACEApY,CiHDC,A/GAA,AyHFA+F,C1EAsEiK,ADGrE5H,AMAAA,AuEAA,A1KHqE4H,ADGrE5H,AMAAA,CoCAC,AoDAAsP,AMAAA,ApGAAA,AMAAA,AxBDG,CiLAFvI,AvEH2G,AhGAA,AwDG3GA,CNCC,AkHAA,AEDA,A/DFqE,A9FAA,A2CIrE,CiHFC,ACAA,AcDA,A/HAA,ACEA,A2HHA,A3LEG,C8KCF,ACDA,A9DFqE,APDsCzF,AvFCtC,ATDsCA,AqDE3G/D,ACEA1F,A2HHA,CpEGC,A9FAA,AqCCA,AGDA,AjEDG,C8LDFkP,AhIGA,EmHFE,AjECA,AMAA,ACAAA,ArGAA,AMAA,ACAAA,AyCDA,AJEA,AGDAA,ADAA,CiHDC,AtEAA,AhGAA,AuDAA,AFCA2G,C0CJ4G,AMI3G,AMAA,A5GJ2G,AQI3G,AMAA,CkFJ4GnM,AGI3GsN,AnGJ2GtN,AGI3GsN,AkDFA,C4CCC,AECA/J,AlGDA,AECAA,CmKDC,AcDA,CdCC,AcDA,A9HEA,CgHDCwf,AzDCA,A9FAA,AsCFAtU,AEEA,C0CDC,AYCA,A5GDA,AcCA,AwCAA,ADAAX,CgHDC,ArEAAnE,AECA,AlGDAA,AECA,EoKDE,ApECAP,AnFDA6T,AbCA7T,CoKDC,AFAA,ArJAC8T,CqJAA,AhHDA,CGCC,AHDAlhB,CrCCE,AwCAD,CFCC,CtCDEmhB,AsCCD,C6CAC,AhGAA,EgGAE/P,AhGAAA,CkDFC,CAAChP,C4CCC,AmFDA,ApKCC,AfAD,C+FH4G,AoFE3G,ApLF2G,CgGACqH,AhFG1G,AhBH0GA,EiGGzG,AhGAA,CsDCC,C4CAC,AhGAA,AkDFA,AEEA,EyCJ6G,ACG3G,AECA0H,AnGJ2G,ACG3G,AECAA,AkDFA,C2CF4G,ACG3GxD,AjGH2G,ACG3GA,M4GCM,A9FAA,CoFAC,AUAA,A1GAA,AYAA,EoFAE,AhGAA,K8FDK,AhGAA,CgGACC,AhGAAA,SgGAS,AhGAA,gDgLFgD,CAAC;AnBI/H,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AqDCA,AGDA,AFAA,ACAA,ApEFA,AGEA,AMCA,AFHA,ACGA,ANHA,ASGArQ,A1CDA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,AlHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FAA,AtCCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A/EFA,AIEA,AOCA,AFHA,ACGA,APHA,AUGAA,AqHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DCA,ADAA,A5BDA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,A/KHA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AICA,ArBDA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CjBAC,CnEDC,AKCA,AMAA,ATAA,AnFDA,AfAA,AOCA,AMAA,AXAA,AkDFA,ACEA,A/DCF,C+DDG,CJAC,AqHDA6pB,AFAAN,ACAAG,ApEFA1X,AKDqFxL,APD0E2F,AmFK/J,AjLHA6F,AODqFxL,ATD0E2F,AwDK/Jic,AJCA,AGDApC,A8HAA/pB,A/LDG,E+KAD,ApEAAqU,AKCAgK,AMAAA,ATAAtG,AiFDAnP,ApKAA,AfAAyL,AOCAgK,AMAAA,AXAAtG,AkDFAwR,CwDEC,AsEAA,AnKDA1oB,ADCA,CwJDC,A1DCAwU,A9FAAA,AzBDG,C+KAFrF,AnEFA,ACGA,AgFAA,AjLHA,ACGA,AmDAA,A+HAA,A/LDG5P,C4DCF,AqDJqF,A9FAA,A2CKrF,CmHFC4P,AhEHqFtE,A9FAAA,CyCIpF,AgDHA,AIGA,AMAA,ATAAgM,AjGHA,AMGA,AMAA,AXAAA,AqDAA,ADAA,A8HAAuf,CfDC,ApEFA,AkFEA,ApKAA,AdFA,AoDGAxN,C4CHC,AlFEAnQ,AdFA,AkDIA7N,CkDDC,AMAA,ApGAA,AMAA,AyCAAuE,C8GDC,ACAAA,AzDCA,AuEDA2jB,ArKCA,AzBDG,C+KAF,CEAC,AvEJ+J,AhGAA,CuKI9J,A1DCA3jB,A9FAAA,AsCFA,A/DCG,CgHCF,AMAA,ApGAA,AMAA,AuKAA,CAACknB,A/LDG,C0BAF,AqCDA/0B,AEEA,CLAC,AoHDA,AtEJ+JgO,ACI/J,AjFAAuX,AhBJ+JvX,ACI/J,AmDEA,AGDA,C+GDC,AlHEA,AEDA,CiDJsF,A9FAA,A6CIrFuZ,CiDJsF7Y,ANGrF,AYCA,A7FDA,APHqFA,ARGrF,AcCA,CwJDC,AFAA,AxDCA,AuEDA,ApKAA,ADCA,CwJDC,AFAA,AeAAjI,CfAC2kB,A9DHqF,AJIrF,A1FJqF,ANIrF,C6FLgK,ACI/J,AECA3Z,AnGL+J,ACI/J,AECAA,AkDFA,CgHCC,A9DHqFpF,ANGrF8F,AjFAA,APHqF9F,ARGrF8F,AoDDA9N,ACEA,CAACmQ,C0CLgKxG,AhGAAA,CuGCzE,A9FAA,C2KGpF,ACCA,CfDC,A/DHqF,A9FAA,A8CIrF,A8HAA,CfDC,AnECA,AhGAA,AoDAA,ADAA,CtCDCuX,AqCDA,ACEA,C6CAC/P,AhGAAA,AkDFA/O,C2CHgK,AhGAA,AoDM/J,AEDA,C0CLgKwH,AhFI/J,AhBJ+JA,AoDM/J,I6CFI,AhGAA,CeAC,AqCDA,C2CHgK,AGK/J,AnGL+J,AGK/J,AkDFAoZ,C2CHgK,AhGAA,AqLK/J,CpFDC,AECA5R,AlGDA,AECAA,AkLAA,GhIFG,C4CCC,AhGAA,AoDDA,C4CCCtD,AjFAA,AfAAA,EeAE,AqCDA,CAAC,C2CHgKjE,AGK/J,AnGL+JA,AGK/J,AkDFA,C8CEC,AhGAA,AkDFA,CAAC,C2CHgK,AhGAA,AqDG/J/O,E2CHiK,AhGAA,GqDG5J,CAAC,C4CCC,AYCA,A5GDA,AcCA,AsCFA,C4CCC8S,AYCA,A5GDAA,AcCA,AsCFA,EAAE,EAAE,CAAC,I4CCI,AhGAA;A6JE9E,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDAA,AFAA,ACAA,ApEDA,AGCA,AMCA,AFHA,ACGA,ANHA,ASGArQ,A1CDA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FCA,AtCAA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A/EDA,AICA,AOCA,AFHA,ACGA,APHA,AUGAA,AqHAA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DCA,ADCA,A5BFA,AqJCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,A/KHA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EpFDE,AKCA,AMAA,ATAA,AlGDA,AOCA,AMAA,AXAA,AkDDAuW,ADEA,A7DAEnW,E2DDA,AqHDAssB,AFAAjD,ACAAE,AtJAA,AwCCAtB,ADCApC,ADDA,A2HHAyI,AIGA0E,A/LDG,E+KAD,A9DJqHnsB,APDqG,ACK1NkJ,AECA6D,AiFAA6b,ADAA,A1KLqH5oB,ATDqG,ACK1NkJ,AECA6D,C0GAC,A9FAA,C8FACsP,A9FAAA,AzBDG,C+KAFrX,AnEDAgG,AIEA,AMAA,ATAA,AjGFAA,AMEA,AMAA,AXAA,AoDCA,AjEFG3V,C4DCF,AqHDA,ADAA,AcCA,ApKDA,AwCCA,C+CLsH,A9FAA,A6CKrHQ,CJAC,AKCAA,CgHFCmP,ADAAA,A/DJqHhF,APDqGT,AGM1N,AiFAA,ADAA,A1KLqHS,ATDqGT,AGM1N,AqDAA0O,CxCDCxN,AiKFA,AIGA,CFAC,CdDC,AxDCA,A9FAA,AzBDG,C+KAF,AlECA,AhGAA,AkDDA,ACCA,A2HHAuE,AIGAinB,C9ELsH,A9FAA,A8CMrH,ADDAn2B,C0CN2N,AGM1N,AUAAkP,A7GN0N,AGM1N,AYAAA,AyCAA,ADCAgD,AjEFG,C4DCF,AqHDA,ADAA,AtEL0N1C,AhGAAA,AwDM1N+b,AHDA9C,A9DEEplB,CgLFD,ADAA,AhECA,AMAA,ApGAA,AMAA,AvBCEC,ADFC,CgECF,C2CDC,AjFAA,AfAA,AqDCAuS,C+GDC,AnEDAX,AlFCA2R,AdDA3R,AqDGA,A0HJA,CZEC,AnEDAC,AhGAAA,AqDGA,A0HJA,AIGA,CxEAC,A9FAA,AyCAA,A6HAAmhB,CpFDC/iB,AYCA,A5GDAA,AcCA,AxBCE,CgEAD,ADDA,C4CFC,AhGAA,AqDGA,ADDA8I,A/DCE9Y,CyBFD,AwCCA4U,C+GDC,ArEDApM,AhGAAA,CqKCC,AYCA,CnKDC,AqCAA,ECCE,CgHDC,A9GCA,AFAA,A/DCE,C+KFD,A9GCAwf,AHDA,C6CDC,AhGAA,AmDCA,A4HFA,A1LIE,C0LJD,C/ECCnW,AhGAAA,CmDCC,CgICC,C7HAC,A6HAA,CnFFC,AFJ0N,ACK1N,A/FDA,AFJ0N,ACK1N,AuDCAkW,CwCN2Nnc,AhGAAA,CkGIzN,ADCA,A/FDA,ADCA,EoDAE,EGCE,CwCN2N,AhGAA,AqDK1N,E2CL4NI,AhGAAA,GgGAG,AhGAA,AqLM1N,CrFN2N,AhGAA,AqLM1N,CrFN2N1E,AhGAAA,CqDKzN,IwDCI,A9FAA,C8FAC,A7FDA,ADCA,CCDC,GgFL6N,AhGAA,uFoLMnI;AtBC3J,AHAA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDCA,AFDA,ACCA,AjEDA,AMCA,AFHA,ACGA,ANHA,AjCEA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AuDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,AFHA,ACGA,APHA,A+HGA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A+DCA,AHDA,AEEA,A5BFA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AjLFA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,ChIDC,C6CDC,AlFCA,AdDA,AkDIA,AEFA,CAAC,CJAC,AqHAAgmB,AFDAlE,ArEN4R,ACM5R,AKCA,AMAA,ATAA,AnGP4R,ACM5R,AOCA,AMAA,AXAA,AqDAAnB,ADCArC,A/DFAxjB,AyLFAisB,A1LIF,A8LDE2E,A/LDG,C0GN0R,AhGAA,CkGK3R,AKJmI1rB,APDyJ,AmFO5R,AjLFA,AOJmIA,ATDyJ,AoDS5R,C8CJCuK,AFL4R,A9FK5RA,AFL4R,AqDM5R,CHCC,A+CDAlC,AKCAqK,AMAAA,ATAA,AlGDArK,AOCAqK,AMAAA,AXAA,AbDG,CgLCFoS,AtEP4RliB,AhGAAA,AuDQ5R,ADDA,AhEDGjO,C4DCF,A+CDA,AECA0X,AlGDA,AECAA,C+FFC,AhGAA,C+FCC,AhGAA,AsDEA,A8HDA,ChBDC,AnEDA,AFL4R,A9FK5R,AFL4R,AwDO5R,AJEAqR,CmHFC,AvEP4RjhB,AMO5R,AMAA,A5GP4RA,AQO5R,AMAA,AxBDG,CgLCFqoB,AaAA,AFHA,AIGAwG,ChBDCjnB,ACCA0gB,A/DNmI,ADMnI,AMAA,AnGNmI,ADMnI,AMAA,A0CAA,C+GAC1gB,AYAA,A7LDG,CiHLiI,APDyJ,AGO5R,A1FNmI,ATDyJ,AGO5R,A8KHAA,A3LEG,CgLCF,AtEP4RxH,AGO5RuP,AnGP4RvP,AGO5RuP,AiDEA,C5DHC,C8KCC6S,C/DNoI,AJMnI,A1FNmI,ANMnI,CkKDC,AlECA,AhGAA,AkLAA,CdAC,AFDA,ArEN4R,AhGAA,AoDS5R,AiIFAsM,CdAC,ADAA,AtEP4R3oB,AhGAAA,AiLI5R,CAAC,CXGCC,AnEAA7L,AhGAAA,E6FP8R,AhGAA,CsKO3R,CtEP6RwN,AGO5R,AnGP4RA,AGO5R,CmKAC2d,AnEAA7V,AgFAA,AhLAAA,AiDEA,EAAE,EiHHE,CAAC,AlECA,AhGAA,C6FP6R,AGO5RF,AnGP4R,AGO5RA,AkLAA,CrFP6R,AhGAA,AiLI5R,AIGA,CfAC,AWHA,C9EGC,AhGAA,CmKACgW,AnEAA,AhGAA,EoKAE,CAAC,ADAA,EAAE,AnEAAhW,AhGAAA,GgGAG,AhGAA,AkLAA,ClFAC,AhGAA,AkLAA,IlFAIA,AhGAAA,GgGAG,AhGAA,GgGAG,AhGAA,CgGAC,AhGAA,EgGAE,AhGAA;A2JChE,AHAA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDCAxN,AFDA,AhEAA,AMCA,AFHA,ACGA,ANHA,AjCEA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FCA,AtCAA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEAA,AVAA,AOCA,AFHA,ACGA,APHA,A+HGA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AnCAA,AwLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AjLFA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EnIAE,AoHAA,AtERmU,AhGAA,AwDQnUsf,AHDAvP,AEEAqP,CLDC,CmHDC+D,AnEDAxX,AIEAmI,AMAAA,A1GFAnI,AMEAmI,AMAAA,AsCEA,AEFA,A9DDA3X,AyLFA7F,A1LIF,A8LDEy2B,A/LDG,CkECF,ADCA,CgHDC,ADAA3G,A/DPqJ5f,ANMrJiD,AECA,AgFAA,A1KPqJjD,ARMrJiD,AECA,CoKACzF,A/GAA,ADCA,C2CHC,ADCA,A/FDA,ADCA,AVEFjK,A8LDE,A/LDG,CgLCF,ArEDAsI,AhGAAA,AsDEA,AjEFGrM,C+KAF,A/DCA,AMAA,ATAAkJ,A3FAA,AMAA,AXAAA,AiDEA,AEFA,A2HHA,CVGC,ArEFA7C,AhGAAA,AmLEAqwB,CdACtF,ADAAlE,ArEDA,AhGAA,CoKACzd,ApEAA,AKCA,AMAA,A3GDA,AOCA,AMAA,AmKHAyiB,C9EGC,AhGAA,AqDAA,AJEAhnB,AEFAA,C6HAC,CjFFC,AhGAA,AXGF,C+GDG,AMAA,ATAAkM,AgFAA,A3KAA,AMAA,AXAAA,AkDDA,CkDNsJ,A9FAA,ClBQtJ,A8LDE,ChBDC,A9DNqJ,A9FAA,A4CMrJ,AgICAuf,A/LDG,C+KAF,ACCA,CCAC,ADAA1oB,A9KDA,C+KCC,AnHEA,AEFA,A2HHA,A1LIF,ADFK,CiLCFiC,AhEPqJ,A9FAA,A2CSrJ,AEFAhH,A2HHA5I,A1LIF0D,C+KDG,AnEAA,AhGAA,AbDG,CgLCF,CjHDC,C8CCCqT,AhGAAA,AmDAA,E2HHE,CVGC,AjHAA,CiHAC,AhLCF,CAACxT,C8LDG,CAAC,ChBDC,CAAC,AlECA,AhGAA,EZCA,C4GDG,AhGAA,AZCF,EgLDIoK,GAAG,EAAE,EnHEE,CAAC,AiIFA,CAAC,IlFAI,AhGAA,kCmDAkC,CAAC;AwGC1F,AHAA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AsDCA,AhEDA,AMCA,AFHA,ACGA,ANHA,AjCEA,A9EDA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6FCA,AtCAA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjECA,AVDA,AOCA,AFHA,ACGA,APHA,A+HGA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A7BCA,AuDAA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A4DAA,A1BAA,AnCCA,AkLDA,AEAA,AGAA,ADAA,ADAA,AjLFA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EnIAE,AqHAAmjB,ADAA,ApEFA,AFPqU,A9FOrU,AFPqU,AwDSrU,AJEA,AGDAzH,ADDA,E+GAEyD,ApEDA,AKCA,AMAApV,AuEAA,AlLDA,AOCA,AMAAA,AmKHAoa,AIGA4E,A/LDG,C2GAF,AkFCA,AlLDA,CqKCC5G,A/DRyK3f,AJQzK,A1FRyKA,ANQzK,AoDCA,EAAE,A8HDA,A/LDG,CgLCF,AtETqUzC,AMSrU,A8EAAslB,ApKAAjM,AhBTqUrZ,AQSrU,AgDAA,AhEAA5H,AFDGnG,CgLCF+L,A/GCA,C0CFC,AhGAA,AuDCA,A6HAA0qB,CdAC,A3DAA,ATAA,ArFAA,AXAA,CoKACzoB,AvETqU,AMSrU8P,AMAA9V,A5GTqU,AQSrU8V,AMAA9V,CwJAC,A/DRyK,A6EQzKqrB,A3KRyK,CwFOxKjnB,AmFCCyF,AnLDDzF,AXAG,CiLCF,AhERyK,AJQzK6K,A1FRyK,ANQzKA,CoKAC,AjEAA,AtFAAmQ,ARAA,C+JACgK,AtEDA,AWCA,AwEAC,ApKAA/J,AfDD,AaCA,A0CAA,AlEDG,CgLCF,A1DAA,A9FAA,AuKAA,CdAC,AtEDA,AKCA3f,A8EAC,AnLDD,AOCAA,AyKHA,AIGAgvB,ChBAC,EEAEr2B,ADAA,AWHA4xB,CZGC,AzDAA,A9FAA,CuJAC,ACAA,A1DAA,A9FAA,AtBAA9rB,CAAA,C0DAE,A0DAAuB,A5FAC,AFADA,CtBAC,C0DAC,AqHAA,AjEAA,AtFAC,ARAD,C+JACpH,AjEAAM,A9FAAA,GyKHG,CVGC,AUHAwxB,AIGA,CdACjB,AcAA,C/EAC,AMAA,ApGAA,AMAA,C8FAC,ATAA,ArFAA,AXAA,CmGAC3pB,AHAAyB,A3FAAzB,ALAAyB,ImGAI,AHAA,A3FAA,ALAA,EgGAEsO,AhGAAA,A8KHA,CVGC,AjEAA,A9FAA,C+JACvJ,CpEAC,AhGAA,CgGAC,AhGAA,CoKAC,AjEAAvG,A9FAAA,A6KAA,CdAC,AcAA,CdAC2pB,EAAE,CjEAC,A9FAA,C+JAC,AjEAAtT,A9FAAA,I8FAI,A9FAA,C+JAC,AjEAA,A9FAA,C+JAC,CjEACC,A9FAAA,I8FAI,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,E8FAEA,A9FAAA,I8FAI,A9FAA,G8FAGD,A9FAAA,I8FAI,A9FAA,E8FAEC,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA,E8FAE,A9FAA;AmJC7F,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AsDEA,AhEFA,AMCA,AFHA,ACGA,ANHA,AJPoV,A3GQpV,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AuDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,AFHA,ACGA,APHA,ALPoV,AoIUpV,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AuKAA,ADAA,ADAA,AGDA,ACAA,A1KAA,A4DAAza,ACCA,A3BDA,A+IAA,AEAA,AGAA,ADAA,ADAA,AjLFA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,C/HAC,CiHAC6tB,ArEDA,AUCA,AwEAA,ApKAA7L,AdDA,AYCA,A0CAAoE,AJGA,AGFAC,A/DDE,CoHAD,A9FAA,CoCAC,AoHAA,A/DT0L,AJS1L,AgFAA,A1KT0L,ANS1L,A8KHAkC,A1LIF,A8LDEmL,C9ET2L,A9FAA,C8FAC,ANQ1L,AKCAxvB,A7FT0L,ARQ1L,AOCAA,AgDAA,AHDA,ADIAqhB,A9DLgB,C+DCftlB,C+HCC8M,A5HAA,ADCA,A/DDE,A6LAF,ChBCC+c,CnHDC,A+CDA,AKCA,ArGDA,AOCA,A+CCA,A0HJA,C/EECzX,ADAA,AKCAoI,A8EAA,ApKAA,AdDApI,ADAA,AOCAoI,A6KAA0Y,CnIAC,AqHAA,AvJAA/vB,AoCGA,AGFA,A/DDEN,C+KAD4H,AFCAof,AYJA3U,CZIC2R,AeDA,ADAA,A9HDA,C4CAC,AKCA,A8EAA,AnLDA,AOCA,AgDAA,AJGA,CmHHC,AtEDAtW,AKCA,A8EAA,ADAA,AnKAA,AfDAA,AOCA,A4CGA,CFHC,AqHAAkI,AvJAA,AqCDAlC,A7DCE,C6KCD,A7KDE,AFFc,CgHEfpS,A9FAAA,AyKHA,AIGA,ChBCCsG,AjHEA6a,A6HNAgD,AIGA6K,A/LFgB,C4GCf/gB,AlFCA,AdDAA,CgGACC,AlFCA,AdDAA,CmKEC,C/KHiB,C+KGfyX,A/KHgBztB,C4GCf,AhGAA,AkDIA,A6HNA,EVGE,ArEDAiW,AICA,ApGDAA,AMCA,C+JAC,AjEAAkI,A6EAA,A3KAAA,A4CGA4K,CmHHC,AtEDA,AhGAA,AgLFAlQ,CVGC,CrEDC,ADAA,A/FAA,ADAA,AoDAA,A/DDgB,C+KGf,A/DDA,A9FAA,C+JAC0Y,ArEDArb,AICA,ApGDAA,AMCA,A6KAA,ChBCCwX,AgBDA,CJHC,CAAC+E,C/EEC,AhGAA,AkDIA,E8CJE,AhGAA,EkDIExJ,CiHFC,CEDC,CAAC7a,AFCAuf,AYJA,GVGG,AFCA,AjHEA,CmHHC,CFCC,C7KDG,CAAC,A6LAF,CjIGC1E,AiIHA,MjIGM,EAAE;AuGF7D,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDCA,AlEDA,AMCA,AFHA,ACGA,ANHA,AJPA,AYUA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AuDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,AFHA,ACGA,APHA,ALPA,AcUA,AsHAA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AnCCA,AkLDA,AEAA,AGAA,ADAA,ADAA,AjLFA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CdAC,CAAC,AFCA,A9DXgM,AvFWhM,APXgM,A+CUhMe,ADCAA,CgDXiM,A9FAA,CyCU/L,AoHAA,ApEDA,AICA,AHAA,AgFAA,AjLDA,AMCA,ALAA,AiDE2D,A6HL3D0I,A1LIFxuB,A8LDEmzB,EhBCEzJ,ArJAA,A1BHC,C0BGAlG,CsJDCgG,ApEDA,ADAAtnB,A/FAA,ADAAA,AuDCA,ADCA,A8HDA,C9EViM,APAhM+J,AvFAgM,ATAhMA,CkDUC,AmHCA,A7GDA,ADCA,C4CDC5N,AhGAAA,AkLAAs0B,CnIAC,AKCA,AhEAF,C8KAGxJ,ArJAA,AzBAF,C0LJG,A1LIF,C2GFG5gB,ADAA,AECA,AjGDAA,ADAA,AECA,AZCF,C+KDG,ArEDA9E,AECAkQ,AnFCApX,AfFAkH,AECAkQ,CgLAC,AFHAtV,C3LCE,C6LEA,A3HAA,AjECF0B,A8LDE,CnIAC,AmIAA6yB,A/LFC,CgLEA,AnEAA,AhGAA,A8KHA,CZIC,AnEFA,AFTA3mB,AGUAwH,AnFCA,AdFA,AFTAxH,AGUAwH,A8KHAnV,CZIC4L,ArEXAtE,AhFWA+I,AhBXA/I,CiGSC,AhGAA,AXDC,C2GCAqK,AECA,AlGDAA,AECA,A8KHA,A3LCClU,C+KGA,AlEDA,AhGAA,A8KHA,A1LIF,C8KAG,AnEFA,AhGAA,A+KFA,CXGC,CtEVC,AhGAA,AiLOA,EjFPE,AhGAA,AiLOA,CXGCytB,AaAA,AFHA,A3LCC,E0BGC,AqKDA,CnFDC,AlFEAjG,AdFA,A+KFA,AIGA,CpFDC,AhGAA,AgLFA,C/EEC,AhGAA,C+FAC,AhGAA,EqKCE,ErEDE,AhGAA,EgGAEjb,AjFEA,AfFAA,AoLCA,CfAC,AtJCA,AqKDA,EpFDE,AhGAA,CgGAC,AhGAA,QqKCQ,EAAE;AXC1D,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AwDEA,AlEFA,AMCA,AFHA,ACGA,ANHA,AQGA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,AFHA,ACGA,APHA,ASGA,AsHAA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AnCCA,AkLDA,AEAA,AGAA,ADAA,AlLFA,AqLAA,A/IGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EhBCE,ArEZ+B,AGW/B,AiFAA,ApKCA,AhBZ+B,AGW/B,AqDAA,ADCAyd,ELDE,AqDXuMxZ,ADWvM0H,AMAAiB,AuEAA,A1KXuM3I,ADWvM0H,AMAAiB,AsCEA,AiIFAke,EhBCE1J,ACFsD,ApEAtD,ADAA,AjFEA,AdFA,ADAA,AXDC,CiHTuM,APAxK,ACU/B,AjFEAjG,APZuM,ATAxK,ACU/B,CiDCC,AqDXuMvZ,A9FAAA,A8CYvM,A8HDA,CdCCqjB,A/KDAhrB,AyLHAksB,C/HGC,AmHCA,AjHCA,AGDA,C8GAC9E,A9DZuM,APAxK9lB,AvFAwK,ATAxKA,AwDW/B,A6HAA8uB,CfDuD,A/DViJ,APAxK,AMW/B,A7FXuM,ATAxK,AQW/B,A+CCA,CgHACpF,ArEFAhlB,ADAA,AKCArE,ApGDAqE,ADAA,AOCArE,AgDAA,C+GCCwoB,AnHCAvlB,CmDbwMT,APAxK,AvFAwKA,ATAxK,CqKY9B,ACFsDpE,AtEVvB,AhGAA,CiGU9B,AjFEA,AfFA,CoKEC,ArEZ+BuB,ACU/B,AKCA,AMAA,A5GX+BA,ACU/B,AOCA,AMAA,CkFXgC,AMW/B,AtGX+B,AQW/B,A6KAA,CnFDC,AKVuM,AvFYvM0f,AdFA,AOVuM,A4KWvMqP,A/LFC,CgLCsD,A1DCtDlnB,A9FAAA,AmKHA+iB,CXEuD,AtEVvB7qB,ACU/B,AjGV+BA,ACU/B,AuDCA,AyHHCoK,A3LCA,CiLGA,AtEFAgC,AKCA,A6EAA,AlLDAA,AOCA,A4CEA,CAAC,CmHDC,AjEDAtM,A6EAA,A3KAAA,ClBFE,CAAC/H,CsHEA,A9FAA,AtBAA4G,AyLHC,C3EGA,AMAA,A5FCA,ARDA,AMAA,AtBAD,C8GAE,A9FAA,AyKHCzF,A3LCA,C0GT+B,AhGAA,ARW9B,CwGX+BA,AhGAAA,EqLW7B,CAAC,CJHE,ChFEA,AhGAA,C+FVgC,ACU/BoT,AjGV+B,ACU/BA,AgLFC,EjFRgCrM,AhGAAA,AoDa/B,C4CbgC,AhGAA,AoDa/B,E4CbiC,AhGAA,EsKUyB,AtEVvB,AhGAA,CsKUwB,A1DCtD,A9FAA,C8FAC,AuEAA,ArKAA,C8FAC4N,A9FAAA,AuKAA,CAAC,CpFDC,AhGAA,EgGAE,AhGAA,C2GCC,A9FAA;A6ICrD,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AMCA,AFHA,ACGA,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,AFHA,ACGA,APHA,A+HGA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,A+IAA,AEAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EnIAE,AqHCAR,AhEb2N,ADY3N,AMAAwR,AwEAA,ApKCA,APb2N,ADY3N,AMAAA,A0CAAsD,AJEA,AGDAC,A/DDE,AyLHF,C/HGC,AoDAA,A9FAA,C6JCC,ACHkG,ApEClG,AFX0E,AmFY1E,AjLDA,AFX0E,ATa5E,A8LDEqN,CnFDC,AhGAA,CkLCC7D,ApKCA,AiKJA,A3LCC,C0BGA9L,CuJAC,AvEb0ExX,ACW1E,AjGX0EA,ACW1E,AuDCA,ADCA,A/DDE,A6LAF,CdCC2H,C/GDC,ADCA,C2CFC,AkFCA,AlLDA,AmLCA8e,CpFDC,AhGAA,AsDEA,A/DDErwB,CyGDD0N,AhGAAA,AgLFAhC,CjFT2E,AoFY1ED,ApLZ0E,GuKavE,AvEb0E,AoFY1E,ApLZ0E,ARYxE,C+KCDnL,A3DDA,AwEAAnG,AtKAA,AtBAE,CwBCD,AwCDA,AyHHA,AIGA,CAACm2B,CrFZ2E,AYY1E1d,A5GZ0E,AcY1EA,CyJCC,AvJAA,CuJAC,AvJAA,A1BHC,C2LDA,CjFT2EtR,AhGAAA,AVUzE,C8LEA,ADAA,CZCC,AtEFA,AmFCA,AnLDA,CsKEC,AtEFAsM,AmFCA,ADAA,AlLDAA,IgLFI,EjFT4E,AhGAA,AqLY1E,CrFZ2ErM,AYY1E,A5GZ0EA,AcY1E,AuKAA,CrFZ2E,AYY1E4e,A5GZ0E,AcY1EA,AmKHAzU,CjFT2E,AhGAA,GgGAGpK,ACW1E,AjGX0EA,ACW1E,EgLFE,ChFEC,AhGAA,GoLCG,CpFDC,AhGAA,AgLFAoK,AIGA,ErFZ4E,AhGAA,CgGACnK,AmFY1E,AnLZ0EA,CgGAC,AhGAA,CgGAC,AYY1E,A5GZ0E,AcY1E,CtBAG,AyLHF,CzLGG,CwGZyE,AhGAA,AiLS1E,CjFT2E,AhGAA,CgGAC,AhGAA;A2JanI,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AVCA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AMCA,AFHA,ACGA,ANHA,AEGA,AjHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,AFHA,ACGA,APHA,AGGA,AkHAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,A2DGA,AzBHA,AnCCA,AkLDA,AEAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CjIEC,CFFC,AqHEA,AhEf6N,AKa7N0R,ATAA,AnFCA,APd6N,AKa7NA,AXAA,AqDAA,ADCA0Q,E8GAE,ACHA,AtEXiIpiB,AmFajI,AnLbiIA,AiLS5E,A1LKvD7D,A8LDEszB,A/LHwB,C0GV0G,AhGAA,AVUzG,CiLKvBhlB,ArEHA,AlFEA,AdFA,CcECqV,CqJAC6F,ArEdiI,ACYjItnB,AjGZiI,ACYjIA,AsDEA,A8HDA,C9Eb8NqK,APA5F,AvFA4FA,ATA5F,CuKehI,AhHDA,C+GHC+f,A9GEA,A6HAAqG,C9Eb8N,APA5F3sB,AvFA4F,ATA5FA,AuDcjI,AhEAF,CgLCGqnB,ArEHA9kB,AhGAAA,AsDCA,AjECF,C2DDG,AlCCA,AzBAF,C0GFG,AhGAA,AVEF,C2DDG,AmHCA,ApEFA9E,AhGAAA,CeEC,CAAC,AzBAFpF,C+KHG,AtEXiI,AhFcjI,AhBdiI,AqLajI,CfFC+tB,ApECA,AFZiInmB,A9FYjI,AFZiIA,AqLajI2sB,ChBCC,AnEFA9gB,AlFEA,AdFAA,C0GCC,A5FCA,AFDA,A0CAA,AjECF,CgLCG,ADJA,AaEA,A5LCF9S,CgLCG0tB,AtEHA,AjFEA,AfFA,CqKDCpG,ApECA,ADAArW,AWCAiF,AuEAA,AnKCA,AdFA,ADAAjF,AaCAiF,CkFbkI,AhGAA,ATcnI,C2GFGnD,AFZiI7F,AhFcjI,AdFA6F,AFZiI7F,ATcnI,C8KAG,ArJAA,CsJHC,AtJGA,AzBAF,E+KHImgB,ApECA,AhGAA,AXEFrsB,C8KAGwpB,CECC,ArEHAxX,AFZiI,A9FYjIA,AFZiI,CuKehI,ADJA,AtEXiI,AhGAA,AqLajI,CfFC,AeEA,CrFbkI,ACYjI,AjGZiI,ACYjI,CiGAC,AFZiI,A9FYjI,AFZiI,CkGYhI,AFZiI,ACYjI,A/FAA,AFZiI,ACYjI,C+FZkI,AYajI,A5GbiI,AcajI,AvBCF,C8KAG,ArEdiI7F,AYajIoJ,A5GbiIpJ,AcajIoJ,AvBCF,CAAC,C0GFG,AhGAA,AVEF,CAAC,C0GFGjN,AhGAAA,CoKEC,ErEdmI,ACYjI,AkFCA,AnLbiI,ACYjI,C+FZkI,ACYjI,AjGZiI,ACYjI,CoLCC,CAAC,MhBCM,EAAE,ArEdiI4B,AhGAAA,E4Ga/H,A9FAA,CkFbkI,AhGAA,EgGAE,AhGAA;A2JchM,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AVCA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AMCA,AFHA,ACGA,ANHA,AGX2O,ADc3O,AMAA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,AFHA,ACGA,APHA,AIX2O,ADc3O,AMAA,A4GAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AnCCC,AkLDD,AEAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EdEE,ADJA,AnEEA,AiFAA,ApKEA,AbFA,AqDAA,ADCAgc,C+GHC,CpHEC,AgDDA,AiFCA,AjLDA,A+KHA,AIIAqN,A/LHG,EiLKD,AFFsD,ArEdsInnB,ACa5L,AjFGA,AhBhB4LA,ACa5L,CsKGCkC,AvJAAsV,CqKFC,A/LHG,CgLCF,AhEEApf,AMAAA,ATAAiF,A3FAAjF,AMAAA,AXAAiF,AbHGtN,C4DGF,A+HJA,CVMC,A/GFA,ADCA,A8HDAw2B,CnIAC,AmHAsD,CEErD,ADJAtG,AhEEA7nB,AMAAA,ApGAAA,AMAAA,A0CAA,ADCA,A/DDA,C8GAA,AMAC8D,ATAA,A3FAD,AMACA,AXAA,A8KJAnB,C9EICyM,AhGAAA,CkKAuDtR,ACFtD,AhEEA,A9FAA,C8JFC2F,AhEEA,AMAA,A5FEA,ARFA,AMAA,AxBHG,EsHGD,A9FAA,AuKAA,CrKEC,AqKFA2qB,A/LHG,C+KGoD,ACFtD,AtEZ4L,AhGAA,CqKcrI,ArEdsIhtB,AhGAAA,AwDc5L,CNAC,A+HJA,CAAC,C9EIC,AnFEA,AbFA,CmKFC,AaEA,EnFd8L,AGc5L,AgFAA,AnLd4L,AGc5L,E6Fd8LsE,AGc5L,AnGd4LA,AGc5L,CmKFC,EAAE,AtEZ4L,AGc5L,AnGd4L,AGc5L,CkLAC,CrFd6LgC,AGc5L,AnGd4LA,AGc5L,AkLAA,GlFAG,AhGAA,G6Fd+L,AhGAA,CgGAChC,AGc5L,AnGd4LA,AGc5L,G6Fd+L,AhGAA,CqKcrI,ArEdsI,AhGAA,CqKcrI,ArEdsI,AhGAA,AqLc5L,CAAC,CJJC,CEIC,AFJA;AtBKlD,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,AECA,ADAA,AKDA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AMCA,AFHA,ACGA,ANHA,AGXA,ADcA,AHAA,A9GFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEGA,AVHA,AOCA,AFHA,ACGA,APHA,AIXA,ADcA,ALAA,AuHAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,A8DEA,A5BFA,A+IAA,AEAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,C9HCC,C2CFC,AUCA,AwEAAslB,AlLDA,AYCA,A0CAAxJ,AhEAE,AyLJF,E/HIE,AqHCW,AFFwF,ACDnG,AtEbyO,ACczO,AkFCA,AnLfyO,ACczO,AVEF,A8LDEwN,CrFf0O,AhGAA,CgGAC,AhGAA,ARevO,AFHA,C8LGD,CdFChK,A9GEA,C+CdChd,APDyOvG,AMezOiU,A7FdA1N,ATDyOvG,AQezOiU,C0CAC,AqHCW,AaDXsV,A5HAA,ENAE,CmIAC,CdCYltB,CvEhB+N,AoFezO,ApLfyO,CsKaxO,AtEbyO+J,AoFezOjM,ApLfyOiM,AqLezOsmB,C/LHG,CgHGDzY,A9FAAA,C+JCY,AjEDXjJ,A9FAAA,AlBHE,C4DGD,AqHCW,AYDX,CbFC,CaEC,C5EdCzE,A6EcA,A3KdAA,C8FAChF,A6EcA,A3KdAA,A4KcA,A/LHE,CgHGD,A9FAA,A6KAAorB,CfFC,C/DZC,ADcA,A7FdA,ADcA,C8JFC,C/DZC,A9FAA,I2KcI,EAAE,IAAI,ACAA,CDAC,ACAA,CrFf0O,AhGAA,GuKgB3N,AvEhB8N3sB,AhGAAA,CuKgB7N,KvEhBmO,AhGAA,CgGACqG,AhGAAA,KqLepO,CAAC,UrFfmP,AhGAA,CgGAC1G,AhGAAA,MgGAM,AhGAA,EgGAEK,AhGAAA,MgGAM,AhGAA,CgGACoG,AhGAAA,yBgGAyB,AhGAA,CgGACH,AhGAAA,MgGAM,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,GgGAGlG,AhGAAA,OgGAO,AhGAA,CgGACC,AhGAAA,MgGAM,AhGAA,CgGACiG,AhGAAA,MgGAM,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGACC,AhGAAA,OgGAO,AhGAA,CgGAC,AhGAA,UgGAUjC,AhGAAA,GgGAG,AhGAA,EgGAE,AhGAA;A2JgBhZ,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AMCA,AFHA,ACGA,ANHA,ADGA1K,A9GFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,AjEIA0jB,AVJA,AOCA,AFHA,ACGA,APHA,AFGA1jB,AuHAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,A+DCA,ADEA,A5BHA,A+IAA,AEAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,C7HAC,C+GAyD,ArEAxD,AKf6B,ADe7B,AMAA,AwECA,ADDA,AjLAA,AOf6B,ADe7B,AMAA,AmKHA,CEGC,CjIAC,AmHDA,ApEAA,AhGAA,ATCI,ADCN,E+KJ4B,ApEGxByS,AKf6B/H,APD+WjE,AYgB5YqC,ATAA,AiFCAmnB,AlLDAxd,AOf6B/H,ATD+WjE,AcgB5YqC,AXAA,A8KHA0F,A3LAE,C6GGDvO,AhGAAA,C+CAC,AlCGA,AxBHI,C+Gf0B,ADe7BwR,AMAA,A5FGAqS,APlB6B,ADe7BrS,AMAA,AyCEAkV,CLFC,CmHDCyD,ApEAA,AWCA,AwECA,AnLFA,AaCA,AvBCF,C+KJ2B,A/DZKxc,APD+W,AvFC/WA,ATD+W,AiLa5Y,CjFb6YhG,AhGAAA,AuDkB5Y+e,C4CFC,AhGAA,AoDECC,C2CFA,ADDA,AKCA,ApGAA,ADDA,AOCA,AhBAI5jB,AyLHJgsB,A1LIF,C+KJ2BlsB,AhEGxB6X,A9FAAA,AjBCFja,C8KFG,AzDCAoI,ATAA,AnFGA,AFHAA,AXAA,AoDEC,C8GHAge,AnEEhB,AhGAA,AZJkB,C0BMD9E,AuCDCtX,CqDFA,A9FAA,AxBHE,CgLAuB,CDEvB,ACFwB,A/GKvB,E8GHCwf,A9Dd6B,A9FAA,A8CiB5BrD,AhEDH,CgHhBgC7e,ADe7B,A7Ff6BA,ADe7B,AhBAI,AyLHJ,A1LIFxH,ADJI,E0Gb4Y,AhGAA,CqKe3Y,A9Dd6B,APD+W4F,AhFmB5Y,APlB6B,ATD+WA,CqKe3Y,A/DCA,AtFGA,ARHA,AyKHAoI,C1EZ8B,A9FAA,AjBezB,C+DEF,EAAE,AhEDH,CyGjB+Y,AhGAA,ATiB9Y,C0LJG,CjFb6Y9D,AMgB5Y+G,AtGhB4Y/G,AQgB5Y+G,E+Ff+B,A9FAA,AwKY7B,C1EZ8B,APD+W,AvFC/W,ATD+W,AiLa5Y,CzLGK,CwGhByYhL,AhGAAA,AiLa5Y,C3EGC,A9FAA,AhBAI,C8GAHmU,A9FAAA,E8JH0B,CAAC,CtEbqX,AhGAA,CgGACpO,AMgB5Y,AtGhB4YA,AQgB5Y,K8FAK,A9FAA,U8FAU,A9FAA,SwFhBqZ,AhGAA,CgGACE,AhGAAA,MgGAM,AhGAA,EgGAEhC,AhGAAA,GgGAG,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA;A2JiBle,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AIFA,ALAA,AEGA,AMAA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,AjEKAoZ,AVLA,AKFA,ANAA,AGGA,AMAA,A4GAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,A+DCA,A7BDA,A+IAA,AEAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EnIAE,AqHCA,AFFA,AnEEA,AKjBoE,ANepE,AECA9P,AiFCA,ADDA,AjLCA,AOjBoE,ARepE,AECAA,AoDEA,AhEDA,C2DDC,AmHDA,CCHqE,AtEb4Z,AhGAA,AwDiBheyU,AyHHA,CjFdie,AhGAA,CuKkB/d,AvElBge,AhGAA,AuDmBhe3B,A/DFMnkB,AFHJ,CiLIDqrB,CvJGC,CqJLC,A9DfoE,A6EiBpE,ApKGAvpB,APpBoE,C2KiBnEwrB,A5HDA,ADEA,A0HLA,CEGC,CjFCCvd,AhGAAA,CmKFCwX,AcCA,A3HAA,ADEAnD,C0HLCpf,CGIC,A5HDA,C+GCC,AhEjBoE+C,A9FAAA,AnBalE,C+KED,AnEEA,AhGAA,CmKFCjC,AlECA,AiFCAqnB,ApKGA,AbJA,AbHE,CiLIDhhB,ArEAA,AKjBoE,AvFoBpE8T,AdHA,AOjBoE,C0FgBnE5O,AhGAAA,EkKDE,AeEA,A7HCA,A/DFM,C+KCL,AaAAkc,A7HCAtJ,A0HLA,A3LAE,CiLIDE,AhEjBoE,A9FAA,AwKapE,CzLGO9jB,C+DEL,C8GHC,AeEA,A7HCA,CgHDC,AaAAgtB,CpKGC,GqJLG,A9DfoE,AvFoBpE,APpBoE,C2KiBnE,CfFC,AeEA,C7EjBqEtlB,A9FAAA,AjBgB9D,G+GhBiE,A9FAA,C2KiBnE,E7EjBsEf,A9FAAA,COoBnE4K,CoKHC,EAAE,E7EjBsE,AvFoBpE,APpBoE,C8FAC7J,A9FAAA,COoBnE8J,AiKPA,CAAC,C1EbqE,A9FAA,C8FAC,A9FAA,KOoB/D,EAAEC,QAAQ,EAAE;A2IHrE,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A0BDA,AJCA,AFHA,ACGA,ANHA,AGd0H,ADiB1H,AMAA,ATAA,A9GFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,ApECA,AFHA,ACGA,APHA,AId0H,ADiB1H,AMAA,AXAA,AuHAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,A+DCA,A7BDA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,ClFAC,AhGAA,C+CAC,AqHCA,AvEnBse,AhFsBte,AhBtBse,AuDoBte,A0HLA,A1LIF,E8KFI,ACHA,ApEKA5C,AkFAA,ADDA,AjLCAA,AVDI,CAAC,C+KCH,AvJGAjJ,AuCFAoe,A8HFAiN,A/LHE,CiLIDhG,CFFCjE,C/DCCnP,AMAAH,ApGAAG,AMAAH,A0CAAgO,C4HCChe,CdLCqiB,AtJQA,AxBJI,C+KCH,AjEDAlS,AxGAA,AUAAA,A6KAA,C/EACpJ,A8ECA,A5KDAA,CQIC,CuJHCmc,AYDA,A5HEA,A8HFAsG,ChBDC,AeEAjE,CDDC,AEAA,A/LHE,C4GID,AUDAvV,A5FIA,AdHA,AYDAA,AyCECkM,C2CDAnU,AIDA,AMAAhB,A1GCAgB,AMDA,AMAAhB,AxBHE,CgLDD,A9GIAiX,C6GDC,ACHAkE,AhEIA9R,A8ECA,A5KDAA,AgDAC6N,ADEA,C6HDA,CAAC,CdLC,AcKA,A9LJE,CiLID,AjEDA,AMAA,ApGAA,AMAA,A0CAC,C+GCA7Z,AFFA,ACHAgY,A/GMC,CLFA,AoDAArS,AMAA,ApGAAA,AMAA,A0CAC,C6GDA,AnEEA,AhGAA,CgDDC,CqHCC,ADLA,ApEKA/B,AhGAAA,CqKACoU,CDLC+F,E/GMG,CgHDA,ADLA,ApEKA,AIDA,ApGCA,AMDA,C+JCC,ADLA,ApEKA,AhGAA,CoGDC,A9FAA,C+CEEjG,GAAG,A8HFD,CAAC,I9HEK,QAAQ,GAAI,C4HFD,E5HEI,GAAG,EAAE;AoGDnE,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AMCA,AFHA,ACGA,ANHA,AGdA,AlHeA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,A3EAA,AOCA,AFHA,ACGA,APHA,AIdA,AiHiBA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCAqN,EdCE,ADLA,AtEfwe,ACkBxe,AKCA,AMAA,A5FIA,AhBvBwe,ACkBxe,AOCA,AMAA,A0CAA,ADGA,A0HLA,A1LGEtzB,E2DDA,AgDEA,AiFFA,AjLEA,EqKDE,AFHwB,A/DExB,AtFIA,ARJA,AgDAAwU,ADGAzK,A/DHM/H,AyLFN6L,AIEA,A/LHE,CiLID0f,AcDAjpB,E9EjBE2I,APFwexH,AYmBxeqL,AnGjBA7D,ATFwexH,AcmBxeqL,AyCGA,A8HHA,CnIAC,AiIAA,A5HGAnU,A8HHA,CdCC,CrHDC,AmHFwB,AcExB,A3HAA,AyHFA,C/EICmV,AIFAqI,ApGEArI,AMFAqI,AgDAApY,C+GCCoM,CvEpBye,AYmBxe,A5GnBwe,AcmBxe,AmKFA+f,CZAyB/rB,AzDExB6X,A9FAAA,AyCGA,CLHC,AoDAA,A9FAA,C+JCC,CAACmT,AhHEA9G,A8HHA,C7HAC,AjECErmB,CgLAD,AFHwB,A9DfxBiN,A9FAAA,AlBkBEtN,A8LDF,ChBFyB,AnEIxBmS,AKnBAvW,ADiBA,A6EAA,AjLEAuW,AOnBAvW,ADiBA,AhBAM,AFHJ,C4GKDoW,AhGAAA,CsDFC,AlEHE,CsHGD,A9FAA,A0CAA6C,AhEAMtS,E0GEJ,AKnBA,ArGmBA,AOnBA,AlBkBE,A8LDH,C9HGE,C2CDC0P,AKnBA1E,AKiBA,A1GEA0E,AOnBA1E,AKiBA,AvBCEtN,CgEED,CCHC,AyHFA,C3EEC,A9FAA,AgDAAmC,C0CEC,AKnBA,ArGmBA,AOnBA,C6FiBC,A9FAA,C0FEC8P,AKnBA,ArGmBAA,AOnBA,AwKeAhE,CrEECiD,A9FAAA,AvBCE,EAAE,C2GCD,AhGAA,AsDFA,CAAC+T,C0CEC,AIFA3K,ApGEA,AMFAA,AhBAM,AyLFN,CrEEC,A9FAA,C8FACD,A9FAAA,CwFAC,A9FAA,AyKFAtd,C3EECmU,A9FAAA,C6JFyB,CAAC,A7GExB,CoDAC,A9FAA,C0CAC,CyHFC,C3EEC,A9FAA,CyKFC,C3EEC,AMAA,ApGAA,AMAA,IwFAI,A9FAA,E8FAEqJ,A9FAAA,I8FAI,AMAA,ApGAA,AMAA,CwFAC,A9FAA;AmJChE,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ACCA,APDA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A0BDA,AVAA,AMCA,ADAA,AVpByf,AYoBzf,AvHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AOCA,ADAA,AZpByf,AcoBzf,A4GAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,EmKEE,ADLA,A/DdmC,ANiBnC,AKCA,A7FlBmC,ARiBnC,AOCA,A6KAE5b,EnIAA,AmHHqE,AeIrE,ADDA,ArLAA+G,AkBIA,AwCJA,ADGAyE,A/DHI,AyLFJ,A1LGA,ADJG,CQGF,ARHG,CiLIF,ADLAsf,ApEMA,AKpBmC,ADkBnC,ApGEA,AOpBmC,ADkBnC,C+JCCmE,AjEDArT,A9FAAA,A+CGA,CzDHC,AkBIA,CAACuJ,AqKJE,CnIAD,AKGAyC,A0HLA,AIEE3nB,C/EAD,A9FAA,AgDAAoM,CNAC,CgDECmH,AKpBmCxW,ADkBnC4e,ApGEApI,AOpBmCxW,ADkBnC4e,A6KAE,CfJD,A/GOA,A0HLA7S,AIEE,CvLAD/B,AkBIA,AuCDAwE,CgHFC,AvJGA6J,CsFJC,A6EAA,A3KAA,C0FEC,AKpBmC,ArGoBnC,AOpBmC,A+CkBnC,ADGA,CgHFCzF,ADLA,ApEMA1L,AiFFA,AjLEAA,AsDFAoI,ADGA,CLHC,AoDAA,A9FAA,C8FAC,AtFIA,ARJA,C8FAC,AxGAA,AUAA,C+JCC,ArECA,AKpBmC,AvFsBnCgJ,AdFA,AOpBmC,C8JmBlCsV,ADLA,ApEMA,AhGAA,A+KJA,CAAC,CzHEC,C1DAC,A0DAA,C+GCC,ADLAE,ApEMA,AhGAA,EgGAE3X,AhGAAA,CqGpBoC,AvFsBnC,APtBmC,COsBlC,AwCJA,CAAC,E+ClBqCnW,AzGkBnC,AWlBmCA,C6JclC,EaIE,ArLAAgK,CuLAG,CnFED,AKpBmC,ArGoBnC,AOpBmC,C6JclC,ApEMAoM,AhGAAA,CmLFG2hB,GnFEC,AKpBmC,AzGkBnC,AIEA,AOpBmC,CwKgBlC,C/EIC1hB,AhGAAA,A+KJA,CnLEC,AuLAE,C9ElBkC,A9FAA,A4KkBjCub,EnFEA,AKpBmC,ArGoBnC,AOpBmC,A4KkBjC,CfJD,AxKIA,AuLAE,CnFEDtb,AhGAAA,CoKNC,GpEMG,AhGAA,CgGAC,AKpBmCtW,ArGoBnC,AOpBmCA,CyFoBlC,AhGAA,IgGAI,AKpBmC,ArGoBnC,AOpBmC,IyFoB/B,AhGAA;AyJDnE,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A0BDA,AwDEA,AlEFA,AIFA,ACGA,ANHA,AJjBA,AYoBA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHAA,AmFDA,A3EAA,AKFA,ACGA,APHA,ALjBA,AcoBA,A4GAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CAAC,C9EnBmG,ADmBlGuY,AtFIA,APvBkG,ADmBlGA,AgDAA,ADGA,A/DHE,AyLFF,AIEA,A/LHE,C0BOD,AuCDA,A/DHE,C0DAD,AmHHA,ACFoD,ApEOpD,AkFDA,ADDA,ArLAAtO,AkBIA,AdFA,AVFE,ADCF,EgHpBoG2H,A9FAAA,EyCmBhG,AkICA5G,CpFrBC0F,AYoBAsW,A5GpBAtW,AcoBAsW,AyCGA,CLHC,AoHLoD,A/Dd8C,ADmBlG,A7FnBkG,ADmBlG,AjBCA1iB,C8KJC6pB,ArJOAvhB,AxBJE7J,CiHHD,A9FAA,AnBGE,C+GnBiG/C,ADmBlGiJ,A8ECA,ADDA,A1KnBkGjJ,ADmBlGiJ,A+CGAuF,C+GRqD5H,AtJSpD,AxBJE,C2LAD,CCCEmtB,AtLDD,AkBIA,AuCDA,C+CHC,A9FAA,A+CGA3yB,C8GNC,A9DhBkG,ADmBlGmX,AMAAyO,AnGnBkG,ADmBlGzO,AMAAyO,AvBCA,C8KJC4D,ACFoD,A/Dd8C/Y,AKmBlG0D,A9GAAxL,AWnBkG8H,AKmBlG0D,CwJLqD,AxKKpD,CsLCE,A7LAD,C6LAE,CfJA,AeIC,A7HED,CyCvBC7E,AoFqBC,AtLDD,AEpBAA,CqKiBCsd,A9DhBkG,APDlGnd,AYoBA,AnGnBkG,ATDlGA,AcoBA,AvBCA,CgHpBmGiB,ADmBlG,A7FnBkGA,ADmBlG,A+CGAgZ,AhEFAvmB,CqHDCwQ,A9FAAA,CkFpBC,AoFqBC,ApLrBD,CqKiBC,CrEjBCvG,AMoBA1F,A8ECE,ApLrBF0F,AQoBA1F,C6JHC+kB,AvKGA9jB,CAAC,CkGpBC,AlGoBAvB,AEpBA,CsGoBC,AMAA,ApGAA,AMAA,AvBCA,CyGrBCwC,AMoBA,AtGpBAA,AQoBA,A+CGA,AhEFA5G,CqHDCmW,A9FAAA,CyFnBmG,A9FAA,A8CsBlG,CgDtBmG,AzGmBlG,AWnBkG,C4JgBjG,CAAC,ArEjBA,AhGAA,CTqBC,CyGrBC,AhGAA,ATqBA,C+KNqD,A1DKpD,A9GAA,AgBAA,CwJLqD,C1DKnDhC,A9FAAA,KqKAK,GvEAG,A9GAA,AgBAA,E8FAE,A9FAA,ChBCnDxO,CAAC,CAACvB,KAAK,GACP,SAASyB,YAAYA,CAACC,MAAM,EAAEC,QAAQ,EAAEnC,IAAI,EAAE;A6JDlD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,A8CAA,AwDEAwf,AlEFA,AMCA,ADAA,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,A3EAA,AOCA,ADAA,APHA,AqHGA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AqLCA,A/IEA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EnIAE,AmHHA,ACHgG,A/DdwC,APD9FhZ,ACoB1C,AKCA,AMAA+J,A9GEE,AWtBsI,ATD9F/J,ACoB1C,AOCA,AMAA+J,A0CAA,AlEHE,C4DGD,CgDGC,AiFHA,AnKIA7L,AdDA,AqDAA8B,A/DHI/H,CwGrBuC,AhGAA,CuGC+FmL,ANmBxI,AKCAqM,A7FpBwIrM,ARmBxI,AOCAqM,AgDAA,CAACmO,ADGA,CgHFC,AvEtB0Ctb,AhGAAA,CuKsBzC+gB,AzKCEznB,AkBEF,CuFxByI,ANmBxI,AWCA,AuEAA,A1KpBwI,ARmBxI,AaCA,AyCGAvJ,C2CAC0V,ADJApC,A/FIAoC,ADJApC,C0GCC,AwEAA,AnKIAvH,AHJA,C0JCC,A3DDA3D,A9FAAA,A0CAA,C8CAC,A9FAA,C+JCCsM,AhErBwIpU,AvFwBxI,APxBwIA,C8CuBvI,C+CHCyd,AMAA,A9GEE,AUFFA,AMAA,A0CAA,ADGAlX,CqDHC6Q,A9GEEhQ,AgBFFgQ,A0CAA6T,E0CGE,AhGAA,AVHI,C+KCH,AjEDA,A9FAA,C+JCCjU,AvEtB0C,AMqB1C8F,AtGrB0C,AQqB1CA,CwFrB2CzP,AhGAAA,AuDwB1C,A/DHI7H,C+GpBqI,A9FAA,A+CoBxI,ADGA,C0CJC,AhGAA,AuDCA+lB,ADGAle,CgDvByI,APD9F,AYqB1C,AnGpBwI,ATD9F,AcqB1C,CkFrB2C,ACoB1C,AWCA,A9GEE,AEvBwC,ACoB1C,AaCA,ChBEGhG,AyDCF,EgHFE,AjEDA,A9FAA,A+CGAwhB,CgHFC,EzKCI,CwGFDpL,AxGEE1X,AUFF0X,AgDAA,CDGC,CAAC,E+CHE,AxGEE,AUFF,AgDAA,ADGAkM,C+CHC7M,AxGEE/T,AUFF+T,AgDAAmO,AhEAI,E2LAF,IrLEM,A0DFF,CAACO,C8CAC,AxGEExiB,AUFF,A+CGA,CAAC,I+CHI,A9FAA,GVEK,C0DFD,C8CAC,AxGEEnC,AUFF,CgDAC,G8CAGuN,AxGEE,AUFFA,CVEG,KwGFG,A9FAA,C8FAC0I,A9FAAA,Q8FAQ,A9FAA;AmJC5E,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,A8CAA,AwDGA4T,A9DLA/tB,ACGA,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHEE,AmFHF,AtEFAA,ACGA,APHA,AqHGA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AqLEA,A/ICA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CvLEG,CoDFD,AmHHA,ACFA8mB,ApEQA,AFzBqE,AMsBrE,AMAA,A5FIA,AdDA,AFzBqE,AQsBrE,AMAA,AyCGA,A/DHE,AFHAlqB,C4GMD,AhGAA,CqKDC,ArECAwV,AKxBgK,ANoBhK,AmFEA,ADDA,AjLGAA,AOxBgK,ARoBhK,AuDCA,AjECA,CgLCC3N,CFLCulB,ACFA,A7DEA,ATnBqEtf,AMsBrEwC,AMAAiW,AjGHA,AXnBqEzY,AQsBrEwC,AMAAiW,C2FHCljB,A9FAAA,CuFMC,AKxBgKgO,ANoBhK,A/FIA,AOxBgKA,ARoBhK,CqKJClR,ApEQA,AFzBqE,ACqBrEsT,A/FIA,AFzBqE,ACqBrEA,AgLAA6e,E1EpBkK,A9FAA,A+CqBhK3jB,CoDAC,A9FAA,CkFtBsEwB,AhGAAA,AVmBnEnQ,C4DGD,AqHEA,AFLA,A5DAA,AFlBgKkR,ADqBhK,A3FHA,AFlBgKA,ADqBhK,AlBHGjR,CiLKF+a,ADPA,A1DKA,A9FAA,CoCAC,AoHLAhU,AtEjBqE,AmFsBrE,AnLtBqE,CyGmBpEoW,AHGAc,A3FHAd,AHGAc,C+FrBiK,APD3F,AmFsBrE,A1KrBgK,ATD3F,AwDsBrE,C6GHC,A9DlBgK1X,A9FAAA,A+CqBhKoI,AyHDA0jB,CrECC,A9FAA,AmKDC7H,A3LFE,CiLKF,AjEFA,A9FAA,C8JLC,AhEKAna,A9FAAA,AlBHG,CgLFF,A/DhBgK,ANoBhK,AxFpBgK,ARoBhK,CsKGC,AFLA,ACFA+c,A/DhBgK/tB,ANoBhKoU,AxFpBgKpU,ARoBhKoU,AgLAC,CxEFA,A9FAA,C6CGC,AyHDC9B,CXJA,A9GKA,C6GHCwb,AcGA,CbLClD,A/DhBgK,A9FAA,C6FqB/J,A9FAA,C+FrBiKjZ,A9FAAA,C+CqB/J,AyHDC,CVGA+J,ADPA,ArEIA,AhGAA,AuDCA,C8GLC,AhEKAkD,A9FAAA,AyKDCxd,CXJA,A/DhBgK,A9FAA,C4JkB/J,ApEEA,AhGAA,EqGCE,A9FAA,C+JECsa,AhEvBgK,ADqBhK1K,A7FrBgK,ADqBhKA,C+JEC4B,AtEHA,AhGAA,AgLAC,CZFA,CYEE,EVGC,EAAEe,CAAC,AjEFA,A9FAA,C+FrBiK,A9FAA,C8JuB/JmM,AhEvBgK,A9FAA,G4JkB7J,A/DGA,A9FAA,C+JEC,CFLC,CEKC,EjEFE,A9FAA,I8FAIvK,A9FAAA,M8FAM,A9FAA,C8FACvE,A9FAAA,Q8FAQ,A9FAA;AmJC5E,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AKDA,AMCA,ArBDA,A8CAA,AVAA,AMCAlN,ADAA,ArHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHGA,AmFJA,A3EAA,AOCAA,ADAA,A8GAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,AUAA,AoBDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EdEE,ADPA,ApESAyS,ADLA,AKCA,AMAAhB,A5FKAgD,AdDAhC,ADLA,AOCA,AMAAhB,A0CAA,ADIA,A/DJE,AyLDF,E/HCE,AmHJoD,A9DlB2J,APD1HhL,AoFwBrFS,ADDA,ArLGAX,AWzB+M,ATD1HE,AVoBjF,EiLKF,ADPA1C,A3DKA,ALAAgX,AzFAA,ALAAA,A+CIAkM,A/DJE,AyLDF,CVGCgH,A5DFAhuB,A9FAAA,C0FtBgN,AKsB/M,AnGtB+M,AKsB/M,CwJLC,A1DKAgF,AwECA,AtKDAA,AuKAAkvB,CnIAC,AmHJoD,ArEnBiC,AhF4BrF,AhB5BqF,AuD2BrF,AjEPIr3B,C4GOH,AF3BqF8K,AYuBrF,A5FKAgB,AdDA,AF3BqFhB,AcuBrF,CoCAC,AqHEA,ADPAilB,ApESApoB,AGLA,AOCA,AwECAyC,AlLGAzC,AILA,AQCA,CyJEC4f,AYFA,A5HIAtnB,A0HLAsqB,CZHqDvkB,A1DIpD,A9FAA,CyJLC,A/DjB+MmL,A4EsB/M,A1KtB+MA,C6JiB9Msc,AtJUA,C2FLCvH,AyECA,ApKIA,AHLAA,AoKDA,AICAmR,A/LHI,CiHnB4M,A6EuB/MhE,AtLEA,AWzB+M,A4KsBhN,CdEE,AFNoD,AzDIpD,A9FAA,AyCIA,CgHFCrhB,AFNoD,A/DIpD,A9FAA,A+CIAK,A8HJA,A/LHIpS,C4GOH,AUJA,A1GIA,AYJA,CoFIC4I,AkFHA,AlLGAA,A+KLA,C/HCC,AoHLA,A/DjB+M,ADsB/M,A8ECA,A3KvB+M,ADsB/M,C+JEC,ADPA6kB,AcMA,CbCC,AvEzBqF,AhGAA,CkG2BpF,AF3BqFzd,A9F2BrF,AF3BqFA,AVoBjF,CAAC/P,CqHGH,A9FAA,CqFICoV,AF3BqF,A9F2BrFA,AF3BqF,CiLsBpF,C1ErBgN,APD1H1H,AvFC0H,ATD1HA,AuD2BrF,AjEPI,CgHGHqQ,A9FAAA,A+CIAiM,AjEPInqB,C4GOH,AK1B+M,AKsB/M,A1GIA,AO1B+M,AKsB/M,CwJLC,ApESA8I,AF3BqF,A9F2BrFA,AF3BqF,AiLsBrF0hB,CXJC,CAAC,AtElBqF,AhGAA,EkG2BnF,AhGAA,A+KLA,A3LFI,CAAC,CiHnB4MpZ,A9FAAA,AnBmB3MhR,CiEOH,EgD1BiN,A9FAA,AwKqB/MoqB,CZHqD,A9GQpDlB,C8GRqD,C/DInDpL,A9FAAA,C8FAA,A9FAA,AyKDC,C3LFK,CgHGH,A9FAA,A+CIA,A0HLA,A3LFI,CiEOH6L,GAAG,CAAC,AjEPI,CiEOH,AjEPI;AqKI3D,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AKDA,AMCA,ArBDA,A8CAA,AJCA,AFHA,ACGA,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHGA,AmFJA,AjEMA,AHLA,AFHA,ACGA,APHA,AqHGA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,CYMC,CuJHC5K,AFPiG,ACAjG,ApESAvJ,AiFJA,AjLIAA,AsDJA,ADIA,A8HJEvW,CFAD,CjIAC,AyDAA8lB,AJvBwP,ADuBxP,AMAAmB,A9GGAld,AeHA+b,AJvBwP,ADuBxP,AMAAmB,AtBAI,AyLF2C,A1LG/C3iB,ADJI,CQMH,CyKDC,ADPAiqB,AtEnBqHvjB,AhGAAA,AwDwBrHuhB,ADIAvB,CgHFC,AcFE,CdED,AjEFA,A9FAA,AhBAI,A6LAFnb,A/LHE,CgLFH,AhEKA0F,AxGGA,AUHAA,AlBHItV,C4DGH,AqDvBwP,AKuBxP,AnGvBwP,AKuBxP,AyCIA,C2CAC,AF5BqH,A9F4BrH,AF5BqH,CkDwBpH,AoHLA,ApESAsI,AEPA,AlGOAA,AGPA,AmDGA,AvBHA,A1CIA,ADJI,CgLFH,A3DKA,AXxBqHyC,AYwBrH,A/FAA,AbxBqHA,AcwBrH,A0CAAyhB,ADIA5rB,AhEHA,C+KNC,A/DlBwP4K,A9FAAA,AlBwBxP,C+KNC,AhEKA,A9FAA,AhBAI1E,ADCJ,ADJEnG,CqHGDoP,ALAAgB,AxGGAjH,AeHAiG,ALAAgB,CoGAC,A9GGA,AgBHA,A0CAA,CwCxBsH,AlG2BrH1G,AE3BqH,AwDwBrH,CDIC,AhEHAjG,C2DDC,AKIA4O,C2CAC,AhGAA,CgGACgD,AhGAAA,AZPE,CqHGD,AJvBwP,A1FuBxP,AJvBwP,A+CuBxP9U,CmDAC,AJvBwP,ADuBxP,AzFAA,AJvBwP,ADuBxP,A6KAE,CvLGD,AuLHE,CnFID,AIJA2d,ApGIA,AMJAA,AjBCA,CCDK,E0GIF7I,AhGAAA,CJDC,CyDCC,CCJC,ADIA6U,A/DJI,A6LAF,CnFID,AhGAA,CoGJC,A9FAA,AgDAA,A6HAE,C/EAD,A9FAA,C8FAC,A9FAA,IVGI,CyDCC,CzDDC,ANHI,E+DIFb,A/DJI,A6LAHvI,C1EAA,A9FAA,C8FAC,A9FAA,G0CIG,A8HJC,C9HIAgJ,C8HJE,E9HIC,CAAC,CAAC,egD3BuQ,A9FAA,C8FAC,A9FAA;AkJwB/T,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AWAA,ArBDA,A8CAA,AwDGA,AlEHA,AMCA1a,AFHA,ACGA,ArHFA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,AjEOA4X,AVPA,AOCA5X,AFHA,ACGA,A8GAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,CmKGC,CFPC,ACAA,ApESA+F,AK5B+T,ANuB/T,AKCA,AMAA,AuEAA,ArLGA1L,AICA0L,AO5B+T,ARuB/T,AOCA,AMAA,AyCIA,C+CJC,AMAA,ApGAA,AMAA,CoCAC,AuDHA4C,AGGA,AwECA,AzKJAA,AGGA,A0CAA,AyHFA,A1LGA,A8LDIof,A/LHA,E+KFFvpB,ACAAsiB,AtEpBmInlB,AhGAAA,ARyB7HjF,C0GIL,ASJA,AzGIA,AWJA,A0CIA,CLJC,AgDIAuP,ASJA,A3FMA,AdFAA,AWJA,AvBHI,C+KFH,ArJWA1N,A1BTI/H,C4DGH,AmHLA4tB,A5DEA,A9FAA,AsKCA,AIEI,C7HAH7B,ADIApkB,A8HJIkB,CfLH,ApESA,AhGAA,AqDAA,C2CAC,AhGAA,CiLJC,AFFAoC,CXHC,A/GSA,A8HJI,A/LHA,CgLFH,ApESA8K,AF7BmI,AmFyBnI,ArLGA,AICAA,AF7BmI,AuD6BnI,A8HJI,A/LHAvV,C+KFH,A7GKA,CmDAC,AXzBmI,AhF+BnI,AHNA,AbzBmI,AwDyBnIyrB,ADIAtkB,CoDJC,A7GGA4B,AkBGA6c,AHNA,A0CIA,CoDJCE,A7GGA,AeHAA,CfGCxc,CuKRCnJ,ArEpBmI,AhGAA,AwDyBnI,ADIA2pB,CCJC,AyHFA,AIEI,C7LAG,AyLFN,C/EMC,AlFEA,AdFA,AmLJIpJ,E7LAI3a,CMGL,AkBGA,A1BTI,E+LGE,ChBLH,A1DKA,A9FAA,A0CIA,A8HJImD,A/LHAtJ,EqHGFklB,A9FAAA,A0CIA3d,CAAC,C8GTCqG,C9GSC,C8HJK,ChBLH,ArJWA+J,AuCFA,A8HJIvN,A/LHA,C+KFHojB,A7KKM,GmHAH,A9FAA,C8FAC,A9FAA,AwKAI,CAAC,EhBLF,ArJWA,CiKRC,CjKQC,AiKRA,GZHGT,iBAAiB,EAAE;AVMtE,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AWAA,ArBDA,A8CAA,AwDIAkE,ArECA,AGLA,AMCA,AFHA,ACGA,ANHA/tB,A/GCA,AwDCA,AfCA,A2IDA,ADAA,A1HCA,AGDA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHGA,AmFJA,A/EKA,AILA,AOCA,AFHA,ACGA,APHAA,AqHGA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJHA,AFEA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,C8FKC,ApGDA,AICA,CgDJC,AoHLA,ApESA,AK7BiU,ANwBjU,AKCA,AMAA,A5FMA,AdFA,AO7BiU,ARwBjU,AOCA,AMAA,A0CAA,AyHFA,AIEI,CnIAH,AmIAI,CdGH,AFToE,AhEKpE+Z,A+EEA,ADDA,A7KDAA,AiDKAkN,A/DJI,ADCJzmB,A8LDI,A/LHA,CiLMHiE,A/KHI,C4GHH,AJvBqJwI,ACyBrJ,AKCAgO,AMAAJ,A5FMAjS,AXTA,ALvBqJqE,ACyBrJ,AOCAgO,AMAAJ,CsFHC5a,AtGMA,AONAA,CkDOC,AjEPI,CgLFH6mB,A3DKA9D,AJzBiU,AKyBjU,A/FAAA,AJzBiU,AKyBjU,AyCIA3e,AjEPInI,C+KHiE,A9DnB6P2R,ANwBjU,AmFEAuiB,ADDA,A1KzBiUviB,ARwBjU,AsDKA,C0CLC2C,AnGIA/J,AkBGA,AfPA+J,AsDKA,A/DJI,C2LAH,A5LCA,C+KNC,A/KMA,CgLEC,AFToE1N,ACCpExF,AjEIA,ADFA,AGtBiU,AKyBjUD,A5FMA,AVPA,ADFA,AItBiU,AKyBjUA,AyCIAqN,AhEHA,ADJI,CiLMH2Z,AhLFA,E8GFE5d,ADFA4N,A+EGA,ArLGA,AQJA5N,ADFA4N,AkDOA,AjEPIxX,C0GvBkJ,AlG6BrJ6J,AkBGA,AhBhCqJ,AuD8BrJrC,AhEHAxF,C8KPqE,A9DnB6P,ADyBjU,A7FzBiU,ADyBjU,A+CIA,C8GVqE,ACCpE,A3DKAmkB,AX1BqJ,AoF2BrJ,AvKDAA,Ab1BqJ,AuD8BrJ,CgHDC,A5DHAlT,A9FAAA,CyFAC2B,A9FAAA,AjBCA,C+KNCgZ,AjEIA,AOCA,AwECAvjB,A9KFA,AQCA,AyCIA,AhEHA3H,ADJI,CiLMH,AlEJAkL,ALzBqJ,A1FyBrJA,ANzBqJ,CoGuBpJ,AHEA,AWCAoQ,AvGHA,AJEA,AaCAA,CwJLC,A/KMA,C+KNCvd,A/DpBiU,ANwBjU,AxFxBiU,ARwBjU,AsDKA,AhEHA,C8GFC,AMCA,ALAA,AMAA,AwECA,A9KFA,AOCA,ALAA,AMAA,AvBCA,C+GDCkT,A8ECA,A5KDAA,CmGAC,AJzBiU7G,A6E0BjU,AvKDA,AJzBiUA,AlB0BjUnJ,CqHDC0L,AwECA,AtKDAA,CuFDC,A/FAA,CiKICmY,ADRA,GAAG,A/DpBiU,A9FAA,C6JoBhU,C1DKC,A9FAA,AvBCA,CgLECA,AhE5BiUrd,AKyBjU,A9GGA,AW5BiUA,AKyBjU,AvBCA,CgLEC8H,ADRA/K,A/KMA,COEC,APFA,C8GFCgJ,A/FAAA,AfEA,C+KNC,AhEKA,A9FAA,C+JGC,CDRC,AjEIA,AExBiU,AjGwBjU,AGxBiU,C8J4BhUsS,ClEJC,AExBiUnjB,ADyBjUuV,AhGDA,AGxBiUvV,ADyBjUuV,E+JGE,EAAE,ChE5BkU,A9FAA,C8FAC,ADyBjU,A7FzBiU,ADyBjU,C8FACjB,A9FAAA,EoGAE,A9FAA,CuJNqE,AzDMpE,A9FAA,CuJNqE,U/DM1D,A9FAA,C8FACe,A9FAAA,Q8FAQ,A9FAA;AmJC7E,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AWAA,ArBDA,A8CAA,ALCA,AH1BwX,AlHwBxX,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,ArECA,AH1BwX,AiH0BxX,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EnIAE,AqHGA,AFV8H,AhEM9H,AMCA,ALAA,AMAAsJ,A9GGAtU,AkBGA,AVPA,AOCA,ALAA,AMAAsU,A0CAAwN,AyHDA,EXJEoC,ArEIA,AkFCA,AlLDA,AsDKAvD,AtBNArC,A3CDI,CsHGH,A9FAA,CyJGC,AlEJApa,AMCA,AX3ByKyC,AM2BzK8N,AMAAvJ,A5FMA,AVPAhH,AOCA,Ab3ByKyC,AQ2BzK8N,AMAAvJ,AtBAM7O,AyLDNykB,CVIC4G,ADRA,ArIGA,CqIHC3pB,A3DKA,AVDA,ApFCA,AZDA,AsDKA,C0CLCkM,AkFCA,AlLDAA,AsDKAnM,C8CLC,A/FAA,AkDCA,ADIA,A0HLA,AhJDA6H,CkJEC,A5HIA,AjEPIpP,CiLMH,ADRA,A3DKA,ACAA,A/FAA,ACAA,CyJGCunB,ADRA,AjEIA,A/FAA,AkDCAgE,AyHDA2G,CjF1B0K,AM2BzK,AMAA,A5G3ByK,AQ2BzK,AMAA,AyCIAtkB,C8CLC,A/FAA,C0F1B0K,AlG8BzK,AE9ByK,CsKsBxK,AhEKA,A9FAA,A+CIA,AtBNA,CqIHC,A/GSArG,AtBNA,A3CDI,CiLMH,AzKAA,AyDCA,CgHDC,AhHCA,CCJC,EyCDE,AhGAA,AsDKA,A0HLA,CtECC2e,AVDA1S,ApFCA0S,AZDA1S,ATCM,CgEALvT,C8CACie,A9FAAA,C0CAC,AqHGAlM,AhHCA,A/DJM/L,AyLDNskB,CnLIC9gB,CoDHC,EqHGE,A/GHA,AyHDA,CzHCC2I,CyCDC,AhGAA,CqGCC8L,A9FAAA,AyKDA,CtECC,ALAD,AzFAC,ALAD,AyKDC,CVIC,A5DHA,AVDA,ApFCA,AZDA,CqGCC,A9FAA,AgDAA,AyHDA,CtECC,A9FAA,A2CAA,CAAC,CyCDC,AhGAA,AuDCA,AvBFA,CAAC,CnCKCzU,CAACH,CyKAC,C5DHC,A9FAA,CrBAO,C+KGLrJ,E5DHEimB,A7GGA,AeHAA,EfGE,EyKAE,CAAChmB,IAAI,CAAC8R,C5DHC,A9FAA,C8FACgB,A9FAAA,E0JGE,EAAEuP,GAAG,A5DHA,A9FAA,C0JGC,A5DHA,A9FAA,G0JGGvQ,IAAI,CAAC;AZF7E,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AICA,AWAA,ArBDA,A8CAA,AbMA,AORAkL,ACGA,ANHA,AGvBA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,A/EMA,ASRAA,ACGA,APHA,AIvBA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AGDA,ACAA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EdIE,AFVA8M,AhEKA,AMCA9E,AVDA,AkFCA,A7KDA,AOCAA,AZDA,AuDCA,ADIA,AjEPI,C6LGH,CjIAC,AoHLAgL,A/DrBAzb,APF0L,AM4B1LrE,AMAAiN,AwECA,AtLEA,AkBGA,APhCA5I,ATF0L,AQ4B1LrE,AMAAiN,AtBAI,AyLDJ,A1LEA,CyG7B2L,AhGAA,CqKsBzL,ArEtB0L,AhGAA,AwD4B1L2O,C6CDC,A/FAA,CmGFC,AzFSA,ALTA,C4JOC,AFVA/rB,AnEWA4V,AORAuK,AzFSA5Y,AdDAqO,ASRAuK,CuCGC,AoHLA,A9GKA,AyHDA,C5EACxS,AMCA,A7GGAjE,AQJAiE,AOCA,CqCAC,AyDAAtH,AJ1BA,AD0BA,AMAA,A/FAAA,AJ1BA,AD0BA,AMAA,CyJIC,AvJEA,AwCNA2lB,C8GLC,ApEUApW,AGNA,AOCA1B,A5FMA,AdDA0B,AINA,AQCA1B,AmKDAtJ,CZLC,ACCA,ApEUAiL,AK/BA1G,AD0BA,ApGKA0G,AO/BA1G,AD0BA,C6JNCtI,A1DMA,A9FAA,CqCAC,AyDAA,A7GGA,AeHA,CwFDCmJ,AvGIApG,AkBGA,AVPAoG,CUOCuX,CsFNC,A9FAA,C6FDC,AMCA,ACAA,AtGDA,AOCA,ACAA,CuJNC,A5DGA,AFvBA,A5FuBA,AFvBA,C4JoBC,AnEWA,AGNA7Z,AMCAqF,AJ1BA,ArG+BA,AINArF,AOCAqF,AJ1BA,AwKyBA,CZLCma,AYKA,C/EMCpX,AORAqK,AzFSA,AdDArK,ASRAqK,CKSC,AwCNA,C6GNC,AhEKA,ArFOA,AVPA,AkDCAmL,C6CDC/jB,ArFOA,AVPAA,C+JLCwiB,CnEWC,ASLA,AzGKA,AWLA,C8FAC,A9FAA,CqFKC,AGNA,AnGMA,AINA,C+JLC,AhEKApc,A/FAAA,C+JLC,CAAC,A7GMA,C6CDC,A/FAA,C+FAC,AvGIA,AQJA,AkDCA2d,CiDHC,A3GMAjiB,AaNA,E4FvBE,A9FAA,C8FAC,A9FAA,GX6BG,CAAC,A0DHA,C1DItCxC,C0DJwC,AyHDA,CAAC,CzHCC,EAAE,C1DItC,CAAC6C,C0DJwC,EAAEkiB,G1DIpC,CAACjiB,A0DJuC,CAAC,CACxD6V,IAAI,CAAC,YAAY,E1DGoB,CAACnW,MAAM,CAAC,CAAC;A6JHnD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AICA,AWAA,ArBDA,A8CAA,AwDKA,A5DJA,ADAA,ANHA,AGvBA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,ApECA,ADAA,APHA,AIvBA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CdIC,CFVC,ACCA,ApEUA,AGNA,AL5BgM,AC4BhM,AkFCA,ArLIA,AkBEA,AdDA,AINA,AN5BgM,AC4BhM,AsDMA,A/DLE,AyLDF,CjF5BiM,AlGiChM,AkBEA,AhBnCgM,AR6B9L,C0DAD,AqD1BAoV,AD0BAP,AMAA/N,AwECAhG,ApKKA,APhCAsU,AD0BAP,AMAA/N,A0CCE,AhEDA,ADCF,E8KPEnJ,AnEWAI,ADNA,A/FMAA,ADNA,AsDMAgjB,C0CNCxW,AhGAAA,EoKLE,AhEKAlG,ADFA6J,AJ1BgM,AoF8BhM,A9KFA7J,ADFA6J,AL1BgM,CkD6B/L,CgDKC,AiFLA,AnKMAxL,AdDA,AsDJE,ADIF,A/DLE7J,ADCF,C2DDC,AmHNAirB,AnEWApX,AULA,AwECA5L,AlLIA4L,AYLA,AtBAE,C6GDD,A8ECA,A7KDA,CsGCC2D,A5FMA,AFNAA,AyCKA1Z,A/DLE,CyGDD,AhGAA,AuDEE,AjEAF,C8KPC,A9DpBA,ANyBA+L,AjFOA,APhCA,ARyBAA,AVEApI,C8KPC6pB,AjEGAjW,AEGA,A8ECA,A/KJAA,AGGA,C4FHCC,AgFIA3T,A/KJA2T,C6FQC,AK/BAxG,ANyBA,A/FMA,AO/BAA,ARyBA,CiDCC,AgDKA6E,AILA,ApGKAA,AMLA,A+CKA,CAACzD,E6CRE,AHEA,A5FFA,AJEA,CoKLC,A/DMA,A9FAA,AjBCA,C8KPCqb,AjEGAhW,AGvBA,A6E2BA,A/KJAA,AIvBA,AlB2BAhU,CgH3BC,A6E2BA,A3K3BA,CwFyBC,AhGAA,CiGMC,AhGAA,CgGAC,ADNA,A/FMA,ADNA,EiGME,AhGAA,CqDAC,C6CRC,A/FAA,AkDQAwmB,AhEJA,CAAC,C8KPC,AjEGA9W,A/FAAA,CgKHC,CAAC,AjEGA,A/FAA,E+FAE,AGvBA,ANyBApH,A5FFA,AIvBA,ARyBAA,CsGzBC,A9FAA,EwFyBE,AhGAA,AsDMA,E0CNE,AhGAA,CsDMC+d,K6HJK,EAAE,A7HIA,GAAG,C6HJC,A7HIA,C6HJC,A7HIA,E4HLE;AxBC3D,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AICA,AWAA,ArBDA,A8CAA,AwDMAkH,AlENA,AMCA/K,AFHA,ACGA,AH1BA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHIA,AmFLA,A3EAA,AOCAA,AFHA,ACGA,AH1BA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJFAhjB,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCAhE,ChFDC,AvGKA,AQLA,C+JLC,ACCAyuB,AlEEA,AQGA,AuEAA,A9KHA,ASGA,A0CCE,ADIFxD,A0HLA,A1LCA,ADJE,CsHGD,A9FAA,A0CCE,CNDD,AqHKA,ArEAA,AK/BAxL,APJuM1O,AC6BvM,AKCA,AtFMAnE,AdDA,AO/BA6S,ATJuM1O,AC6BvM,AOCA,AgDCE,AhEDEnK,A6LAJ,CdKC6B,ADVA,A1DKA,A9FAA,A0CCEukB,C6GPDyB,ACCAnmB,AlEEA,A/FAA,AkDQA,A0HLA+iB,AhJFA,CmEDC9S,AJ3BuM,AlGkCvM,AOPAA,AL3BuM,AuDmCvMpJ,AtBPAlL,AoJEA,CnIAC,AgDKA8D,AFnCuM2G,AC6BvM,AKCA,ApGKA3G,AFnCuM2G,AC6BvM,AOCA,C6JNC,ApEKAwF,AKCAiK,AtFMA,AfPAjK,AOCAiK,C0CAC,AoHLA,A9GME,AyHDF,CXLC,ApEUA,ASLA,AX9BuM,AC6BvM,A/FMA,AWLA,Ab9BuM,AC6BvM,AuDEE,ADIF,A8HLAne,ChBNC,A1DMAyI,APHA,AJ3BuM,AmF8BvM,AnKMAqE,AHNArE,ARHA,AL3BuM,AuDmCvM0iB,C8GXC,AYMA3Y,CVKC,AFXA,AnEWAoE,AiFLA,AjLKAA,A+BPA,CsIOCkX,ADVA,AlEEAvV,AGvBA,APJuMrN,AC6BvM4B,AWCAA,AuECX,AnKKW,AXTAyL,AIvBA,ATJuMrN,AC6BvM4B,AaCAA,AuKAA,ChBNC,ACCA,AeKA,ChBNC,A/DMA,A9FAA,A+CKA,AtBPAuL,AoJEA,ChBNC,A9DpBAtG,ANyBA,AWCA,AnG1BAA,ARyBA,AaCA,CyJKC,AjELA0G,A9FAAA,A+CKA,A0HLA,C7EHC,AJ3BuM,AC6BvM,AWCA,AvGHA,AL3BuM,AC6BvM,AaCA,AyCKA,CoDLC,A9FAA,C0JKC,ArEAA,ASLAmO,AzGKA,AWLAA,A0CKA,A/DLI,AyLAJtlB,C/EKCA,AiFJX,AjLIWA,AsDJE,ADIF,CgD/BC,A9FAA,C8FAC,A4E4BrB,A1K5BqB,A8C+BA0pB,A/DLIjkB,AyCFJ,EqEEE,A9FAA,C8FACK,A9FAAA,AyKAA,C/EKC,AhGAA,CiLHpB,CZGsBgrB,C5DLC,ALAA,A6EG5B,AtKH4B,ALAA,AyKAA/G,C3EAC5V,A9FAAA,C+CKC,CoDLC,A9FAA,A0CKA,C0HLC,C1E1BC,A9FAA,C8FAC,A4E6B5B,A1K7B4B,C6F0BC,A9FAA,AyKAAod,C3EAC,A6EIpC,A3KJoC,C+JKCT,CAAC1jB,E/KLM,C+KKH,A5DLA6J,A9FAAA,E0JKE8K,GAAG,A5DLA,A9FAA,E0JKE,A5DLA7K,A9FAAA,CsKInC,EACb,AFLmD,EAAE,GtEAG,A9FAA,E8FAEtE,A9FAAA,E8FAE,A9FAA,E8FAE,AwEKnD,AtKLmD,EsKM9D,QAAQ,EACR,UAAU,CACX;AxBPH,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A8CAA,AVAA,AIFA,ACGA,AH1BA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,A3EAA,AKFA,ACGA,AH1BA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCAkkB,EnIAE,AqHKA,AFXA,ACCA,A3DKAlkB,APHA,AJ5B2N,AM+B3N,A6EQA,ArLJA3J,AkBEA,AHNA2J,ARHA,AL5B2N,AQ+B3N,A+CKA,A/DLE,ADCJ,ADJG/S,C4DGA,AoDAA,A9FAA,C0FKCyV,ASLA,AFHAuK,AFvBAzB,AK0BA,AwECA,AlLIA9I,AWLA,AFHAuK,AFvBAzB,AK0BA,A0CCE,AyHDF,CtEAC,A9FAA,C0JKC,ADVArX,A7DEA,ALAA,AHEA,AtFFA,ANAA,AJEA,AsDMA,CgHACmV,ADVA,AlEEAhF,A/FAAA,AkDQA2S,CqDLCre,A9FAAA,AuKAA,ChBNCge,A1DMA,AFHA5a,A5FGA,AFHAA,C4JQC,ADVA,A/DrBA,ANyBA,AxFzBA,ARyBA,AgLCA,A3LHC/O,CiLQA,ADVA,A3DKAoX,AVDApE,AWCA,A/FAAoE,AZDApE,AaCA,A0CCE,A6HDF,A/LHE/S,CiLQD,ADVA,ApEUA,AhGAA,AqDAA,C8GXC,A9DpBA2Q,AK0BA,AnG1BAA,AK0BA,CuJNCzQ,AYMA2K,C/EKC2K,AERA,AlGQAA,AGRA,AkDQAuU,A8HLAjnB,A/LHE,CqHGD,AFHA,AREA,AnGKA,AeJA,AFHA,AVEA,AuDEE,CmDDD,AFHA,AREAsQ,ApFCA,AFHA,AVEAA,AXFE,C8GADgE,A+EWA,A9KXAA,CkGvBC,AzG8BA,AW9BA,C4JoBC,A9DpBA,AK0BAC,AuEQA,A1KlCA,AK0BAA,AyCKA,G8GXGgW,AnEWA,AhGAA,CgGACjoB,AhGAAA,A+KLA,CxEHC,A9FAA,AsKGA,CZNC,A5DGA,ALAA,AzFAA,ANAA,AgLGA,ChBNClF,AnEWA,AORA6J,AFvBA,ArG+BA,ASRAA,AFvBA,A4K0BA,CnFKC,AK/BA,AK0BA,A9GIAZ,AICA,AO/BA,AK0BA,AuKAA,CzEACuC,A9FAAA,EmFDE,AkFSA,AlLTA,C2GCC,A9FAA,CuJNC,ApEKA,AWCA,A3GDA,AaCA,GuJNG,CAAC,CnEWCzE,AhGAAA,CgGAC,AORA,AvGQA,ASRA,C0JHCN,CnEWC,AhGAA,CJDCwC,CuKVC,AvKUAH,AmLJA,CAAC,CZNC,IvKUI,EAAE;A6JHnD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A8CAA,AJCA,AFHA,ACGA,AH1BA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,ApECA,AFHA,ACGA,AH1BA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AnCCA,AoLDA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,C1EAC,A9FAA,ArBAA,C0DAC,AqHKA,ADVA,AlEEA,AJ7B6N,AMgC7N,A6EQA,AnKDAqO,AXVA,AL7B6N,AQgC7N,AgDCE,ADIF,A0HLA,A1LCF,CiEAK,AhEDF,C6KP4CgW,A5DI3CrN,AFvBAzB,AK0BAwH,AwECA,AtLGA,AaPA/F,AFvBAzB,AK0BAwH,A0CCE,AhEDF,A6LAAvlB,A/LHE,EiLQAkpB,ArEAA,AERA,AEGA5L,ApGKA,AGRA,AGGAA,A+CKA,C8GZ4C,AjEI3CzG,A/FAAA,AkDQA2S,C8GZ4C9iB,ApEM3C5B,AmFEA0tB,AnLFA1tB,AXFEtF,CgLFD,AtE3B6N2P,AhGAAA,CuKqC5N,AhE/BA,AK0BA,A5FOA,APjCA,AK0BA,CwJLC1I,AaaA,ArLJAoC,AkBGAmC,CqJd4C,ACE3C,AtE3B6N,AhGAA,AuDqC7N,AjERE,CiLQD,AFZ2C,AnEY3Ce,AK/BAoE,AK0BA,AuEQA,AjLHApE,AO/BAoE,AK0BA,CoCAC,AmIAA,CfLC+Y,AlEEA,AHEA,A5FFA,AJEA,AsDMAG,CLLC,A+CDAhjB,AjFQA,AfRAA,AXFE5G,CiLQD,AFZ2C,AzDO3C,A9GIA,AkBGA,AFPA,CyJKC4wB,AFZ2C,AjEI3C/d,AgFIA,AtLGAvJ,AOPAuJ,CiKFC,ApEUA,AORA,AFvBA,AD0BA,ApGKA,ASRA,AFvBA,AD0BA,A+CKA,C+GVC5S,ApEUA+G,AERA,AGvBA,ArG+BAA,AGRA,AIvBA,CyF+BC,AhGAA,CgGAC,AORA,AHGAoN,ApGKA,ASRA,AHGAA,C+JKC,AaJA,CbIC6S,AtENA,AhGAA,CgGAC1T,AhGAAA,AXFE,CgLFD,AcMA,C7E3BC,A4EkCA,A1KlCA,C6JqBC,A/DrBA,AD0BA,A8ECA,A3K3BA,AD0BA,C8FACP,A9FAAA,AlBHEjT,CiLQD,CAAC,A9DRAggB,A9FAAA,C4JQC,CjLRG,IQOE,ARPE,CQODhX,GRPK,EgHGA,A9FAA,CyFDC,AnGKA,AGLA,CHKC,ARPEhJ,CmHADggB,AREAjN,AtFFAiN,AVEAjN,CwGFCvG,AHGA6H,A3FHA7H,AHGA6H,ElBHI,E2GEA,AhGAA,EgGAE3I,AKCA,ArGDAA,AOCA,AlBHE,CmHAD,AHGAuH,A3FHA,AHGAA,ClBHG,CmHAD5H,AREA,AtFFAA,AVEA,CgGAC,AhGAA,AXFE,GmHAC,A9FAA,E8FAE,A9FAA,M2FGM,A9FAA,C8FAC0I,A9FAAA,U8FAU,A9FAA;AmJC/E,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,AoCAAnR,AKCA,AH1BA,APP2O,A3G+B3O,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,AjEQA,AVRAA,AMCA,AH1BA,ATP2O,A0HiC3O,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AnCCA,AoLDA,AGAA,ADAA,AlLFA,AqLGA,A/IAA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CrKOC,CuJFC,AFb6D,A5DK7D,ALAA,AEGA,A6EQA,ArLJA,AaPA,ANAA,AGGA,AgDCAyoB,ADIA,AhEJChoB,COGA,CoDJC,AoHLAgqB,ApEUA,AK/BA7O,AK0BAnH,A1GKA,AO/BAmH,AK0BAnH,AuKAA3W,CnFKC,AhGAA,CqKAC8uB,ArEAA,AGNA,ADFA,AHEA,AKCAxS,A8ECAlT,AlLIA,AINA,ADFA,AJEA,AOCAkT,A+CKA,AjERI,CgLFH,AjEIAna,ADFA8O,AHEA,A3FAA9O,ADFA8O,AJEA,AsDMAmY,C+GVC5iB,A9GMA,C+GIC,A9DRAsF,A9FAAA,A6CIA+e,AhEDAzlB,AyCFAoR,CiBEC,A3DCC7T,C6GJA,AEGA,A8ECA,A/KJA,AGGA,A+CKA,AhEJCrD,C2DDA,AqHKA0sB,ADVA,A1DKA,A9FAA,CwJLChD,ArEIA,AWCA,A3GDA,AaCA,A0CCA,AlEJI,C+GEH,ADFA,AEGA,AMAA,AwECA5f,A9KFA,ADFA,AGGA,AMAA,A0CCA,ADIAggB,A8HLA,C9LCE,CgLIA,A9DRA,AFvBA,A5FuBA,AFvBA,C8J+BCJ,ADVA,AjEIAjS,AIFAnP,AREA,A3FAAmP,AKFAnP,AVEA,AuDEAojB,AvBHAxU,A1CGC,C+KNAjQ,AlEEA,AHEA8L,A5FFA,AJEAA,AsDMA,AtBPAoE,CqIHC,A/DrBAxG,A6E2BA,ADOA,A1KlCAA,AjB0BA7K,C8KLC,AcMAtC,A5LDAuC,C+KKC,ADVA,AaaA,A3HPA,ENDE,AqHKAuH,AlENA,AJAA,AKCA0P,AhGDA,ALAA,AOCAA,AhBAA,AyCFA,CgECC5J,AhGAAA,CsGzBC,A9FAA,AjB0BA,AyCFAgE,CsIOC,A9DRA,AFvBA,A5FuBA,AFvBA,CgGuBC/L,A2EIA,AzKJAA,C4JQC,AjELA2R,A8ECA,A5KDAA,C8FAA,A9FAA,EiGHG,AHGA,A3FHA,AHGA,C+JKC,A9DRA,A9FAA,C4JQC4T,A9DRA1wB,A9FAAA,AsBCA,CmJGC,CnJHC4S,CmJGC,CnJHC,CgECC,AhGAA,CwGFC,AFvBA,ANyBAQ,AtFFA,AFvBA,ARyBAA,AgCDA,CsExBC,A6E2BA,A3K3BA,AnBuBI,C8LIH,CbIC,EAAE,IAAI,CAACyd,EtENE,AhGAA,EgGAE,AhGAA,KsKMK,EAAE,IAAI,CAACD,IAAI,CAAC;AZJtE,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,AoCAA,AIFA,ACGA,ANHA,AGvBA,APPA,A3G+BA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHIA,AmFLA,AjESApK,AVTA,AKFA,ACGA,APHA,AIvBA,ATPA,A0HiCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AqLGA,A/IAA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,C5EHC,A9FAA,C4JSC,AFdA2G,ACGA,A1DKA,A9FAA,A0CCA,ADIA,A/DLE,AyCFF,C2EEC,A9FAA,CoCAC,AgDMA,AGPAzQ,AEzBA6B,AD0BA1B,AMAA,AuEQA,AjLFA,AIPAH,AGzBA6B,AD0BA1B,AMAA,AmKACoO,A1LCD,A8LDA8L,A/LHE,C+KLD,CAAC/vB,AeSA4C,A7HIA,A/DLEvE,AyCFF,CsBOCikB,AtBPArS,CiEQCxQ,ADPAoM,AjFSA,AdFApM,ADPAoM,AVEAhU,CgLKCkjB,AvEvCAlS,AhFyCA1I,AhBzCA0I,AwDkCA2b,CNDC,AmHRA,A9GaA,A0HLC,CZRA,AnEcA,AkFLA,AlLKA,AXLA,C2DDC,AqHMA,AlEPA,ACCA,AhGDA,AECA,AyBFA,AoJEA,CpFDC,AhGAA,AuDEA,ADIAlC,C2CCC,ADPApW,AmFEAtJ,AlLKA,ADPAsJ,AgLCC+X,A1LCDnrB,CgLKCwvB,AFdA,AnEcA,AGPA1gB,ACCA,ApGMA,AIPAA,AECA,AyBFAqI,CoINC,A9GaA,C2CCC,AhGAA,CqKAC,AhEhCA,AvFkCA,APlCA,AlB2BA,CgLKCtX,AaLA,ApKOAonB,CkCRC,AoDAA,A8ECAzjB,A5KDA,AyKAC,AhJFD,CsExBCmN,A9FAAA,AwK0BCohB,C5EDA,A/FAA,AdCE,C6GDD,A/FAA,C0FhCChiB,AhGAAA,CgGACC,AhFyCA,AhBzCAA,EuKuCE,AhEhCA,A6E2BA,A3K3BA,AjB0BEpK,C+KMDqc,AhEhCA,ANyBA,AmFEA,ApKOA,APlCA,ARyBA,CgGAC3O,AhGAAA,CkLSC,CZFC,CAAC,AYEA,CnFzCC,AhGAA,CoLkCC,CbKCkc,AvEvCAvf,AhGAAA,CoLkCC,AHDC,CzLAE,C+KMD,AvJEAyB,CxBRG,C4LCD,AHDE,ChFDD,AmFEA,AnLFA,CkLSC,AnKAA,CqFTC,AEzBA,AjGyBA,AGzBA,C4FyBC,AEzBA,ANyBA,AjFSA0F,AVTA,AGzBA,ARyBA,CgLCc,CjFjCZ,AhGAA,CiLiCc,CjFjCZ,ACgCA,AjGhCA,ACgCA,IeSI,EAAE;A2IPtD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,AsGOA,AlEPA,AIFA,ACGA,AH1BA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHKA,AmFNA,A3EAA,AKFA,ACGA,AH1BA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,A+DEA,A7BFA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CdMC,CFdC,ACGAiW,AtE7BgD,AYkChD,A5FQA9G,AhB1CgD,AckChD,AyCKA,A0HLA1jB,AhJFA,EiBEE,AmDDAoU,AEzBAyH,AD0BAZ,A8ECA,ADOA,A7KTA7G,AGzBAyH,AD0BAZ,AhBAI,ADCJ,A8LDAve,A/LHE,CgLFD,CDHC0H,AnEcA,AFxCgD,AYkChDiM,A1GMA,AFxCgD,AckChDA,AyCKA,AtBPA,CoINC,A9GaA0W,AtBPAxS,CiBEC,AoHLAzX,AtE7BgDqQ,ACiChD1K,AjGjCgD0K,ACiChD1K,AXFEtF,CQQDwJ,AmLLA,C/HAC,AmHRA,AYQAwoB,CZRC,A9DlBA,A9FAA,C4JkBC,AhEOA,A/FAA,A+KCA,A/LHE,C4GSD,AhGAA,AZTE9xB,CgLFD,A/DrBAyQ,A9FAAA,C6JqBC/Q,AjEIAkP,AJAA,AWCA,AtGDAA,ALAA,AaCA,AmBFA,C+DhCiD,ACiChDjI,AjGjCgD,ACiChDA,AsDMA,C+CLC,A6EQA,A3KRA,CoGAC,A9FAA,AmBFAuQ,CqIHC,AaaA,A5HHAwS,AjERE,CgLFDyD,A/DrBA,AD0BA,A7F1BA,AD0BA,AyKAA,C1E1BC,A9FAA,CyFgCC,AGPA,AnGOA,AIPA,AhBFE,CgLFD,ApEWA7mB,AGPA,AOCA,A1GMAA,AIPA,AQCA,AmKAAwrB,A3LHE,CgLFD,ArEIA,AKCA,ArGDA,AOCA,CyFDCxe,AhGAAA,AXFE,C0BWD,AiBVA,CnCOChK,AkBGAkI,CgF1CiDzB,AlGuChDxG,AEvCgDwG,AuDuChD,C2CCC,AKhCA,A4EkCA,AjLFA,AOhCA,CyFgCCwF,AKhCA,ArGgCAA,AOhCA,COkCC,EAAE,AiKRA,E/EME,ApGDA,AICA,EgGAE,ApGDA,AICA,E8FxCkD,AhF0ChD,AhB1CgD,CkGwC/C,AFxCgD,AhF0ChD,AdFA,AFxCgD,CkGwC/C,AhGAA,CgGACjP,AFxCgD,A9FwChDA,AFxCgD,CqGiC/C,A/FAA,C+FAC,AJAA,A3FAA,ALAA,EgGAEuM,AhGAAA,EiGOE,AhGAA,CgGACyC,AhGAAA,E+FPE,AhGAA,EgGAE9J,AhGAAA,GgGAG,AhGAA,CiGOC,ADPA,A/FOA,ADPA,CiGOCtL,AhGAAA,KgGAK,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,EgGAEuG,AhGAAA,GgGAG,AhGAA,GgGAG,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGACkL,AhGAAA,IgGAI,AhGAA,CgGAC,AhGAA,IgGAI,AhGAA,CgGAC,AhGAA,EgGAE,AhGAA,OgGAO,AhGAA,CgGAC,AhGAA,GgGAG2D,AhGAAA,QgGAQ,AhGAA,CgGAC7O,AhGAAA,GgGAG,AhGAA,GgGAG,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA;AyJLpH,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,AsGQA,AlERAmI,AKCA,ANHA,AGvBA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,A3EAAA,AMCA,APHA,AIvBA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,A+DEA,A7BFA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,EnIAE,AmHRA,ACGA,A1DKA,A9GKA,AkBGA,AFRA,AyCKA,A0HLAjM,AhJFA,CiBEC,CgDMC,AFzCwF,AMmCxF,A6EQA,AjLFA,AFzCwF,AQmCxF,AgDCAgE,AhEDI,ADCJ9H,A8LDAA,CnFMC,AhGAA,CoKXCiC,ArEIA,AnGMAc,AkBGA,AfTA,AsDMA,AtBPA,A3CDI9B,C+GEH,AJAA,A3FAA,ALAA,AsDMA0pB,AtBPArS,A1CGA,A8LDA,ChFDC,ACCA,AhGDA,AECA,C+JOC4Z,AFfA,ACGA,A/DrBAtS,AD0BA7O,AMAA,AnG1BA6O,AD0BA7O,AMAA,AmKAA,CjFnCyF,AhF2CxF,AhB3CwF,AiLmCxFmiB,A1LCAlzB,ADJI,C+KLHkI,AnEcA,AlFEA+f,AdFA,AqDDA,A/DLIphB,C6KRH,ACGA0mB,A9GMA,CyCFC,AkFSA,ArLHA,AGNA,AVEA,ADJItsB,CgLFH,AtE9BwFuK,AhGAAA,AuDwCxFmf,AhEJAlmB,CgLMCytB,AFfAvH,ACGA0F,ApEWAzoB,AiFEA,AjLFAA,A+BRA,CsISCmpB,CjEPC,AxGKAhuB,AULA,AlBHI,C4GSH,AGPA,AnGOA,AIPA,AiDMA,AtBPAgR,A3CDI3S,C+KLH,ACGA,AjEIA,ACCAkX,AMAA3L,AtGDA,AECA2L,AMAA3L,CuJRCxL,ACGAuvB,AjEIAhY,A/FAAA,A2BDA,CjBUC,AxBRI,ADCJ,CqHDC,A9FAA,AtBAI1R,ADCJ,C+KNC,ApEWA,AFzCwF,AmF2CxF,AnKAA,AdFA,AFzCwF,CsK8BvFonB,ApEWA,AFzCwF,AYmCxF,A9GKA,AICA,AFzCwF,AcmCxF,AmKAA,A3LHI,CiLUH,AhEjCAxO,AzG+BAjV,AW/BAiV,AjB0BI,AFHA,C+KLH,AnEcA,AGPA,AEzBA7U,ArGgCA,AIPA,AGzBAA,AlB2BA,ADJI,CiLUH,AjEPA,A9FAA,AhBAI,AyLAJmoB,CZRC,AhEOArV,ACCA5W,AhGDA4W,AECA5W,AhBAI,ADCJ,ADJI,CQQH,AkBGA,AxBRI,CDCH,C+KNC,A/DrBA,AzG+BAlE,AW/BA,AlB2BA,ADJI,CgLFH,AhEKA,A9FAA,AlBHI,CiHvBH8c,AD0BAvK,AtFQA3O,APlCAkZ,AD0BAvK,G6FDG,A/FAA,C+FAC,AEzBA,AjGyBA,AGzBA,CX+BC,AkBGA,CuFlCC,AD0BA,AxGKA3K,AkBGA,APlCA,AD0BA,C8FAC,A9FAA,CyKAC,EnLKE,CAACD,OAAO,CAAC,OkGxC+F,AhGAA,CgGAC,AhGAA,EgB2CtF,CAAC;A2IP/D,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,AoCAA,AIFA,ACGA,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHKA,AmFNA,A3EAA,AKFA,ACGA,APHA,AqHGA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,A+DEA,A7BFA,AiJAA,AGAA,ADAA,AlLFA,AqLGA,A/IAA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCA,CJAC,C/HAC,AqHOA4K,ADZAmb,A/DrBA,APVoJ,AMoCpJ,AtFQA,APlCA,ATVoJ,AQoCpJ,A+CKA,A/DLE,AyCFF,CqEEC,A9FAA,C6JT2BnC,AzDS1B,AwECA,ADOA,ArKRA,AvBCA,A8LDAlT,A/LHE,CgLFD,CpEWC,AlFEA,AdFA,AqDDA,AtBPA,CoIP2B,ArJiB1Bxa,AuCHAsqB,A0HLA,AhJFAtY,AoJEA,CdOC,AFhB0BzK,ACI1B,ArEIA5B,AWCAygB,A3GDAzgB,AaCAygB,CyJOC9O,AhEjCA,A9FAA,A+C2BA4U,CjEACpoB,C4LOC,A5HHA,AtBPA,A1CGA,C2DDC,AmHT0B,ACI1B6oB,CDJ2B5C,AnEe1B,AiFEA,AnKAA,AdFA,CgDNC,AoHLA,A1DKA,A5FQAtR,AFRA,AyCKA2Q,AtBPA,A1CGA9nB,C+KNCuuB,ArEIA,AhGAA,CgGAC3oB,AWCA,A3GDAA,AaCA,CyJOC,AFhB0B,CEgBzBb,AFhB0BiB,ACI1B,ArIGA,CoIP2B,ACI1B,A/GUA,C8Gd2B,ACI1BkoB,A9GMAtD,ADIArC,C8Gd2B,A7GU3B,C+GME,ArEDA,AiFEA,AnKAA,AdFA,AXLA,CgLMC,ArEDAhjB,AlFEAkL,AdFAlL,AsDLC,ADID,AhEJAzH,C0GFC,AhGAA,AsDMA,C+GVC,ArEIA0U,AhGAAA,CqKJCzS,A/KMA,CgLMC,AvJCA,AzBPAZ,CgLMC,AvJCA,CsJbC,ApEWA,AhGAA,CoKXC,ApEWAqV,AlFEA/D,AdFA+D,EXLE,CAAC,CyBOC,AzBPA,C2GKC,AhGAA,C+FPC,AhGAA,AVEA,C2GKC,AlFEA9V,AdFA,AXLA,C0GFCoT,AhGAAA,AVEA,E2GKE,AhGAA,AXLA,C2GKC,AhGAA,CgGACvM,AhGAAA,AXLA,C0GFC,AjFSA,AfTA,AVEA,C0GFC,AjFSA5G,AfTA,EVEE,E2GKE,AlFEA,AdFA,CgGAC4V,AlFEA9D,AdFA8D,AXLA,IyBOI,EAAE4B,EkFFE,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,EgGAE,AhGAA,CcEC,CAAC,IkFFI,AhGAA,CgGAC,AhGAA,CgGAC5Q,AhGAAA,MgGAM,AhGAA,CgGACgP,AhGAAA,QgGAQ,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA;AyJLzF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,AwCFA,ACGA,ANHA,AJlCwJ,A3GmCxJ,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHMA,AmFPA,AtEFA,ACGA,APHA,ALlCwJ,A0HqCxJ,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,A8DMA,A5BNA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,AiLCG1W,EdQD,AFlB+C,ACM/C0wB,AjEGA,ACCA,AhGDA,AECA,AgDCA,AhEDE,AyLAF3sB,E/HAE,AgDMA,AOTAgV,AFvBA/N,AK0BA,AwECA6F,ADOA,ArLFAhG,AIAA,ASTAkO,AFvBA/N,AK0BA,AvBCA,ADJE,CgLDD,ApEUA,AhGAA,AmLNG,CdQF4H,AtETA,AKCAqM,ArGDA,AOCAA,AgDCAlX,A6HDG8H,CDCF,CdLC6gB,A1DIAtc,AwECA5F,AtKDA4F,AxBHElT,C8GADsX,AGvBA,AlGuBAA,AIvBA,AwK0BA,C/HAC,AqHQA,A9DXA,A9FAA,AsKGA0a,A1LCAtuB,C+KLC,ApEUA,AKhCAoG,A6E2BA,AlLKA,AOhCAA,AlB2BA,C2DDC,AoHJAulB,AcKA,A9LJE,CiLWDoB,A9DXA3hB,AHGA,A3FHAA,AHGA,AlBHE5O,C6LWD,A3HPA,AjEAAe,C6LAC6I,AtLKA,CyGhCC,AD0BA,A6EQA,A1KlCA,AD0BA,AgDCA,CNDC,A0DAA,A9FAA,CwJJC,AxKUAF,CwKVC,A1DIA,A9FAA,AxBHE,CmHAD,A2EIA,AzKJA,AsKGA,CxEHC,A9FAA,CyFAC0N,A/FAAA,AdIA,A8LDG,A/LHD,CiLWD,ADZAgV,AlECAzf,A/FAAA,A4KGAykB,A1LCAvyB,A8LDG,CdQF+wB,AzKFA,ARTE,CgLDD,AhEIA/R,A6EQA,ArLFAlU,AUNAkU,C8JJC0R,A/KKA,ADJE,CCIDrvB,C6GJC,A/FAA,CiKDC,CAACyvB,AlECA,AtGSA,AOTA,AgLGG,E/EAD9R,A9FAAA,AjBCA,A8LDG,CdQF,AjERArS,A9FAAA,AyKAA,A1LCA,CgLOC,AzKFA,APLA,E+GDE,A9FAA,AjBCA,CAAC,C+GDC,A9FAA,AjBCA,EAAE,EAAE,A8LDE8U,CvLMD7W,APLA,C+KLC,CAAC,CAAC,A/KKA,C8LDG,C5EHD,A9FAA,C8FAC,A9FAA,ApBIA,A8LDE,KvLMGA,CAACG,KAAK,EAAE;A6JL9D,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,AwCFA,ACGA,AVrCA,A3GmCA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,AtEFA,ACGA,AZrCA,A0HqCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,A8DOAyf,A5BPA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,EmKSE,AFjBA,ACKAiG,AjEGA,ADFA,AgFIA,AtLKA,AkBEA,AVTA,ADFA,AbGE,AyLAF3sB,AICE9D,EnIDA,AqD1BA6f,ANyBA,AKCAvH,AMAAnE,AuEQA,A1KlCA0L,ARyBA,AOCAvH,AMAAnE,A0CCA,ADKA,AhELA,C+KLC,ArEGA,AhGAA,AsDOA7L,A8HLE,CdOD,AFjBA8S,AnEeA,AGPA9M,ADFA0F,AlGSA,AIPA1F,ADFA0F,AbGE,AFHE/S,CiLWH0R,A/KREnM,C8KJD5F,A/DtBA,A9FAA,A4K2BEf,ChBVD,ArE5BAsR,AlG2CApG,AE3CAoG,AiLqCA,C/HAC,AmDDA,AEzBA0O,AjGyBA,AGzBAA,AwK0BAqT,A1LCAtuB,ADJI,CiLWH,AnEXA,AHEA,A5FFA,AJEA,AuDEAkD,AjEAA,C2DDC,AmHTAslB,A/DSA,A9FAA,A6KCE,CdOD,ArEFA,AGPAxP,ACCA3W,AMAA,A1GMA,AIPA2W,AECA3W,AMAA,AuKCExG,A/LJEQ,CgLDH,AlECA,AtGSA,AOTA,AkDSA,AhELAiB,C8KVC,ACKArB,ArEGAkT,AhGAAA,AsDOAlM,C8GfCymB,AzDSA,A9FAA,CmFDC,AKCA,ArGDA,AOCA,AlBHI,C4DGH,AgDMA,AETA,AEGAhZ,ApGMA,AGTA,AGGAA,A+CMA,AjETIlU,C+KNH,ACKA,ApEUAqG,ADPA,AnGOAsD,AIAAtD,ADPA,AuDEA,C8GLCgpB,A1DIA,A9FAA,CuJTC1C,A9GeA,ChELC,C+KLC,AjEGA,A8ESA,A7KTA,AdCE,ADCF/tB,C+KLCuwB,AjEGArY,ACCA,AxGMA,AQPAA,AECA,AyKAA,AICE,A/LJE,C+KNH,AnEeA,AiFEA,AjLFA,AmLLEuJ,A/LJE,C+KNH,AnEeA/K,AF3CAvF,AMqCAxE,ApGMA+J,AF3CAvF,AQqCAxE,AjBCA,CyGtCC1C,AhGAAA,AiLqCAsoB,A1LCAlxB,ADJI,CEGDqF,C8GAD,A9FAA,AlBHIzF,CgHGH,A9FAA,A6KCE,CfLD,ApEUA,AhGAA,AqDAA0R,A8HLE1I,CfLD,AjEGA,A/FAA,AfEA,C+KLC,ApEUA,AGPA3B,ALpCA,AmF6CA,AjLFA,AIPAA,ANpCA,ATsCA,ADJI,CgLDHmnB,A/KKA,ADJIpuB,C0GlCH+P,AhGAAA,AuD2CA,C2CAC,AhGAA,AXLA,C2GKC,AhGAA,AqDAA0Z,A0HNA,A1LCA,A8LAE,CnFKDrjB,AhGAAA,AXLA,A8LAEsD,C/LJG,C0GlCH,AhGAA,ATsCA,ADJI,CgLDH,A/GUA,AjETI,CgLDH,AjEGA,ALpCA,A1FoCA,ANpCA,ATsCA,ADJI,CgLDH,AjEGA,A/FAA,AiDOA,AhELA,A8LAE,A/LJE,CgLDH,ApEUA,AhGAA,AVNE,A6LCA,A/LJE,C4GSH0L,AhGAAA,CXLC,ECDI,CAACjQ,ADCF,I2GKI,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,QVNU,KAAKK,UAAU,EAAE;AmKCpF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AyCCA,ArHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHMA,AmFPA,ArECA,A8GAA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AqLGA,A/IAA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,CNOC,CuKfC,ACKA,AjEGA,ADFA,AGvBA,APZ0C,AMsC1C,A8EEA,ApKMA,AVTA,ADFA,AIvBA,ATZ0C,AQsC1C,AgDCA,ADKA8L,A8HLEyI,C9E3BD,AD0BA,A7F1BA,AD0BA,C0CAC,AqHOW,ArEDX,AiFEA,AjLFA,AVNI5U,ADEJ,ADLE,C+LIC,CfLD4U,AlECA,AHEA7U,AjFSA6hB,AXXA,AJEA7hB,AsDOA,C8CPC,ADFAqM,AJnC0C,A1FqC1C,ADFAA,ALnC0C,AuD4C1C5D,CLNC,AmICEnP,ChBVDub,ACKA,AcMAxK,ClIFC,AqHOW,AhLLXxN,C8GHCqP,ADFA,AJnC0CvK,AhF8C1C,AVTAuK,ADFA,ALnC0CvK,AuD4C1C,C8GfC,ACKA2oB,AjEGA,ALrC0C,AoFwC1C,A9KHA,ANrC0C,AuD4C1C/F,A8HLE,CpFFD,AhGAA,AVGA,A8LDE9pB,CdMU2F,AnEVX,AHEAmB,AjFSA,AXXA,AJEAA,CoGAC,ALrC0C,A1FqC1C,ANrC0C,CqGqCzC,ALrC0C,A1FqC1C,ANrC0C,AuD4C1C,AhEJApF,E+KNE,AjEGA+P,ADFA,AJnC0CvK,AhF8C1C,AVTAuK,ADFA,ALnC0CvK,AuD4C1C,CgHCY,AlERX,ALrC0C,AhF8C1C2f,AVTA,ANrC0C,CuK6C9B,A/KPP,ADEJ,C+KNC,A/KMAzkB,A8LDE,CfLD,AjEGAkL,ALrC0C8C,ACqC1C,AkFSA,A7KTA9C,ANrC0C8C,ACqC1C,AsDOA,A8HLEpR,CpFFD0U,AhGAAA,AsDOAmW,A/DNIhkB,C2LQH,A5LNA,C+KNC,AtJYA,AzBNAnC,A8LDE,CfLD,AjEGA,A/FAA,AfGA,A8LDE,ChFFDvD,ALrC0C,A1FqC1CA,ANrC0C,CgGACA,AhGAAA,ATwC1CwD,C+KNC,A/KMA,C+KNC,C/KMCC,C4LMC,A5HFA,AhEJA,C8GHC,A/FAA,AiDOA,A/DNI,ADEJ,CyGxC2C,ACqC1C,AjGrC0C,ACqC1C,CoGAC6N,A/FAAA,C+FAC,ALrC0CvK,ACqC1C8L,A3FAA,ANrC0C9L,ACqC1C8L,C+FrC2C,AhGAA,CqGqCzC,A/FAA,C0FrC2C,AhGAA,CqGqCzC,A/FAA,C0FrC2C,ACqC1C,AjGrC0C,ACqC1C,CgGAC,AhGAA,EsKQa,CAAC;AZNxD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AoGRA,A5DMA,ACGA,AH1BA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6FGA,AhEFA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHOA,AmFRA,AtEFA,ACGA,AH1BA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AqLGA,A/IAA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,E8CCE,AqHMwD,ADVxDpM,ApEUA,AETA,AEGA,AtFQA,AdFA,AGTA,AGGA,AgDCA,ADKA,A8HLE,CnIDD,AgDMA,AhGAA,CmGPC,AIFAhH,ATpCiF,AYuCjF,AuEQA,A7KTA,AKFAA,AXpCiF,AcuCjF,AtBAI,ADEJ,ADLE,CgLDD,ClECC,AHEAmT,AKCAkL,AtFQA5M,AXXA,AJEA0B,AOCAkL,AgDCAjG,ADKAlU,C6CTC4N,A/FAAA,AkDSA,A8HLE,CfLDhQ,AjEGAob,ALtCiFzM,ACsCjF,A3FAAyM,ANtCiFzM,ACsCjF,AXFE,C4GSD,ADPA1E,AkFSA,ArLDA3B,AIDA,ADPA2B,AgLCAsmB,A3LHE9yB,CmHAD,A9FAA,A4CSA,AhEJAkD,C4LMC,A3LRIwD,A6LCFqB,CfLD,AlECA,AHEA,AjFSA,AXXA,AJEA,AuDEA,A6HAE,CfLD7E,A7DCA0M,AREA,AKCA,A3FHAA,AVEA,AOCA,AgDCAxJ,AjECA,C8GHC,A/FAA,AiDOA,C6CTC,ApFWA,AXXA,AkDSAokB,A8HLE,CfLD,AhEIA,AtFQA,ARRA,AjBEAjoB,A8LDE,A/LJA,CgLDD+tB,AjEGAniB,A/FAAA,C0FtCkF,AhGAA,AqLwC/EpG,CjFJD,A/FAA,AkDSA,A0HNA+qB,AICE,A/LJA,CgLDD,A7DCA,A0EWA,AxKXA,A6CIA,ADKAnI,A0HNCrX,A1LED,C+KNCtS,AjEGA,AIFA,ATpCiFiQ,AlG8CjFpG,AQRA,AKFA,AXpCiFoG,ARuC7E,ADEJ/N,C8GHCoP,AvGQD,AQRCA,AdCIzL,A6LCFkwB,A/LJA,C+GED,A/FAA,A2KCC,C5EDA,AvGQA,AQRA,AkDEAle,ADKA,AhEJA,C+GFCiG,A9FAAA,A+CMA,A/DNI,AyLAH5M,A1LED3N,ADLEzD,C0GpCgF,AhGAA,ATyCjF,C+KNC,AtEnCiFiH,AhGAAA,ARuC7E,CwGvC8E,AhGAA,ARuC7E,ADEJvD,C+KNC2pB,A7DCA,ATpCiF,ArFoCjF,AXpCiF,ARuC7E,ADEJ,ADLE,CmHAD,A9FAA,A6CIA,AlEJEjtB,CmHADT,A9FAAA,A6CIA2F,AyHDC,A1LED3B,C+KNC,AhEIAqa,A9FAAA,AjBEA,A8LDE,CfLD9d,AhEID,A9FAA,AyKAE+pB,A1LED,A8LDE/pB,E/EDA,A9FAA,AlBHE,CAAC,CmHAD,A9FAA,AsKGC,A3LHC,CkEID,C8GLC,A9GKA2G,AyHDCiM,AICC,A/LJA,CgLDD,AhLCE,C2LGA,AICC7L,A/LJA,C+LIC,CJDA,CICE,EAAE,C7HAD,EAAE;AmGAjD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AoGPA,A5DKA,ACGA,AH1BA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6FIA,AhEHA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/BDA,AtEFA,ACGA,AH1BA,AiH0BA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AkCAA,AiJAA,AGAA,ADAA,AlLFA,AsCGA,AIAA,AFHA,ACGA,AJFA,AFCA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,E8CCE,AqHOA,ADXA,AlECA,AtGUA8C,AkBCA,AXXA,AkDSAlG,A/DNE,AyLAF,C1HMC,C2CAC,AGPA,AIFAiU,ATrC4G1H,ACuC5G,AKCA,AMAA,AuEQA,AjLFA,AIPA,AKFA0H,AXrC4G1H,ACuC5G,AOCA,AMAA,A0CCAvJ,ADKAkH,AhEHA,A8LFIkoB,A/LJF,C2GED,AhGAA,CsKQC,ADXAzG,AlECA,A/FAA,A4KGA,CVOCqB,AnEVAtZ,A/FAAA,A4KGA5X,C5EDC,ACCA+L,AMAA4R,AtGDA,AECA5R,AMAA4R,AyCMA,AjETE,C+KLD0P,ACIA,AjEGAvV,AEzBAoH,A6E6BAoU,ADKA,AnKAA,AVTAxb,AGzBAoH,A8CgCA,AtBRAvH,A3CDEnY,CgLDDe,A/KOA0D,C2GGC,ADPA,AKCA,A6EQA,AjLFA,ADPA,AOCA,AjBGA,CgLIC,A/GNA,C4CJC,ApFWA,AXXA,AkDSA,A0HNA,CjFxC6G,AlG+C5G,AkBCAkjB,AhBhD4G,AuD8C5GgD,A0HNA1R,A1LGA,A8LFI,CdMHoY,AFfAxD,AhEOA,ALvC4GviB,AlG+C5GT,AQRA,ANvC4GS,AwDyC5GsN,AjEEA5V,A8LFI8E,ChBTHyiB,ACIA,ApEUA,AGPAriB,ADFA,AlGSA,AIPAA,ADFA,AgLII,A/LJF,C4GSDb,AOTA,AGGA,A1GMAA,ASTA,AGGA,AuKCI,CzEDH6N,A9FAAA,AyCMA,AhEHA,A8LFI6iB,CnIDH,ApDOA,ARVE,C+KLD,A5DKA,A2EMAjE,ADKA,ArLDAjtB,AaVA,A4CSA,CLNC,AoHJAqnB,A7DCA,A2EMC3a,AzKND,A6CIA,AjEEAtQ,C8KXC0qB,A7GSAxnB,AyHDA,AhJFAgS,A3CDE,C4GSD,AKhCAuH,ArGgCA,AOhCAA,AwK0BArM,AhJFA3F,AoJGI,CfLH,ApEUA4I,AKhCAqJ,AK0BA,A9GOA,AIDArJ,AOhCAqJ,AK0BA,AyCMA,AhEHA,A8LFIqY,CdMH,ADXAj3B,AjEGA,ALvC4G,AYwC5G,A9GOA,AQRA,ANvC4G,AcwC5G,AyCMA0pB,AjETE5pB,CiLUD0R,AFfA,AhEOAmL,ArFSA,AVTAA,A2KCA,CrEAC,A9FAA,AmKAA,CZRC,A5DKA9E,ALAA,AGvBA,APd4G3H,AoF2C3G,AzKND2H,ANAA,AIvBA,ATd4G3H,AiCsC5G,A1CKA,C2GGC,ApGCA,AkBCAsB,AdFA,AsDLA,AjEEA,ADNE,CiLUD,AhEjCA,A6E6BC,AtLID,AWjCA,A+C2BA7K,AvBHA,A3CDEzG,CiLUDspB,ADXA,ApEUA,AhGAA,A+KNA,C5EDC,A/FAA,CgKHC,AjEGA,ArFSA,AVTA,A2KCAlX,C/EMC,AOTA,AGGA6B,A5FQAnU,AdFA,ASTA,AGGAmU,AyCMA,CgHCC,ArEDA,AGPAoD,AnGOA,AIPAA,AiDOA,AjETE,CiLUD,ArEDAjR,AhGAAA,A+KNA,A3LHE,CAAC,C0GrC2G,AhGAA,AwDyC5G,AlEJE,CmHAD,ATrC4GiE,ArFqC5G,AXrC4GA,AVqC1G,CsHGD,A5FQA,AFRA,CuFDC,AOCA+S,AtGDA,AQCAA,AuKCI,CnFKH,AGPAnW,AnGOA,AIPAA,C4FOCkF,AlFEA6E,AdFA7E,CmLLK3N,EzEDF,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,AmKAAmZ,AICI,CnFKH,AF9C4G,AhFgD5G,AdFA,AF9C4G,AqLyCxGxX,CnFKHiV,AOTA,AvGSAA,ASTA,C0FEC,A/FAA,C+FACqH,A/FAAA,CmGFC9E,ATrC4G,AhFgD5G,ALXAA,AXrC4G,CiLwC3G,CAACE,EjKQE,CkFFC,AGPA,ALvC4G,AhFgD5G4O,AdFA,AIPA,ANvC4G,CkG8C3G,AGPA,AIFA,AvGSA,AIPA,AKFA,CuFSC,AhGAA,EmGPE5P,AIFA,AnGEAA,AKFA,A0KII,CAAC,CAAC,CJDH,CAAC,EjKQE,AiKRA,CxEHCe,A9FAAA,C0FEC,ArFSA,AVTA,C+FAC3Q,A/FAAA,ImGFI,A9FAA,K0FEK,AIFA,AnGEA,AKFA,C0FECwV,A/FAAA,M+FAM,A/FAA,C+FAC,A/FAA,GmGFG,A9FAA,G8FAG7E,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,O8FAOtE,A9FAAA,I8FAI,A9FAA,K8FAK,A9FAA,W8FAW,A9FAA,G8FAGA,A9FAAA,I8FAI,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,E8FAEuE,A9FAAA,U8FAU,A9FAA,I8FAI,A9FAA,Y8FAY,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AgJI5K,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AwCFA,ACGA,ArHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AFAA,AmICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHOA,AaVA,ACGA,A8GAA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AlLFA,AsCGA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,EmKQE,AFfA,AnEcA,AGPA,AEzBA,A6E6BA,AlLGA,AIPA,AGzBA,A+C2BA,ADKA,A/DNE,AyCFF,AoJGI,C7HAH,CNDC,AoHL+BkC,AlEE/B3C,AJtCoKpH,AMyCpK,AMAA,AuEQA,AnKAA,AXXAoH,ALtCoKpH,AQyCpK,AMAA,AmKAA,A1LIA,ADPE,EiLUA,AFfAkd,A9DlBAlf,ANyBA9I,AxFzBA8I,ARyBA9I,ATCE,AyCFFyN,CsISC+d,ADZ+B,ChEK9B/T,AMAA,AwEGAmW,A5KHAnW,AMAA,AvBIAlZ,ADPE,CmHADqU,AzFWA,ALXAA,A6CIA,ADKA,AhEFA,ADPE5Y,C4DGD,AoHL+B,AWK/B,CVOC,ADZ+B,ArIG/B,A1CMAwE,C2DJC,A3DIA,C8KZC,A9DlBA,ANyBA,AjFSAmD,APlCA,ARyBA,AuDEA8Q,ADKA,CgHCCrG,AvEhDoK,ACwCpK7K,AjFSA,AhBjDoK,ACwCpKA,AsDOA6iB,A0HNAnf,AhJFA,C+DvCqKsF,AYyCpKwE,A5GzCoKxE,AcyCpKwE,AxBHE,C+KLDmY,A9DlBA1N,AD0BA,A6EQA,A1KlCAA,AD0BA,C4KGC,ApKKA,CuJDC,AnEVA,A+EWA,A9KXA,AkDSA,AtBRA,A3CDE,C4DGD,AqHOA4R,AnEVA3d,A/FAAA,AmDIA,ADKA,CgDhCC,AD0BA,A8EGAogB,A3K7BA,AD0BA,AgDCArH,C+GMC,AhEjCA1N,AD0BAN,AMAA,A5FQA,APlCAM,AD0BAN,AMAA,CuJRC,ApEOA,AWCAjL,A5FQAiU,AfTA,AaCAjU,CuJRCia,ApEOArZ,AhGAAA,AsDOA,A0HNA,C7EHC,A/FAA,AkDSAqW,A0HNA,E7EHEjd,A/FAAA,CgKLC,ArEjCoK,AhGAA,CqKiCnKkgB,A5DKA7U,A9FAAA,A4CSA,CkDTCf,AGGA,AjGHAA,AGGA,AyCMA,CyC/CqK,AoF4CpK,ApL5CoK,CoGsCnK,AgFMAzE,A/KNA,C+FAC,A/FAA,CgKLC,A9DlBA,A9FAA,C4JkBCb,A5DKA,AFvBA,APfoK,ACwCpK,AKCA,AMAA,A5FQA,ALXA,AFvBA,ATfoK,ACwCpK,AOCA,AMAA,A0CCA,EiDJE,AREAkB,AKCA,AtFQA9L,ALXA,AVEA8L,AOCA,AgDCA,CxCOC,CqJhBC,AeWA,CfXC,AeWA,CpKKC,CiFTC,AhGAA,CoKPC,ApEOA,AhGAA,CoKPC,CAAC,AzDQA,A5FQA,AFRA,CEQC8T,C4FRC,A9FAA,O8FAOxS,A9FAAA,EEQE,GAAG8S,C4FRC,A9FAA,C8FACtU,A9FAAA,GEQG,CAAC5L,CAAC,E4FRE,A5FQA,AFRA,C8FAC,A5FQA,AFRA,C8FAC,A9FAA,EEQEyK,AiKRA,CAAC,GjKQG,CAACN,MAAM,EAAE,CAAC;A2IPrF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AiCOA,AGPA,AKCA,ArHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHOAxO,AIDA,AIPA,AMCA,A8GAA,AQAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,A8DOA,AqHPA,AGAA,ADAA,AlLFA,AsCGA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,C8FOC,AhGAA,AqDAA,CgHCC,AFfA,ACE0C,ApEY1C,AOTA,ALAA,AGvBA,A4EkCA,AjLFA,ASTA,ANAA,AIvBA,AwK0BA,AhJDA,AoJEEuzB,CjFJD,A+EWA,A9KXA,C6CGC,A8C1CoM,ACyCpM,AWCA9e,A5FQA,AhBlDoM,ACyCpM,AaCAA,A0CCAxQ,AhEDI,ADIJ,EgLGE,AFfA,A9DlBAuH,AD0BA,AxGOA,AWjCAA,AD0BA,AyBDA,A3CFE,CiLUD2iB,AFfAzD,AvKeAzqB,AmCRA8O,C+DzCqM,AhFkDpM,AhBlDoM,AT8CpMxP,CkHPCxC,AzFWAynB,ALXAznB,CuCGC,AoDAA,A9FAA,A6KCE,C/EDD0U,A9FAAA,AyBDA,A1CKA,A8LHE6iB,CnIDD,A0DAA,A9FAA,A0CCA,C+C3BC,AK0BAxrB,AnG1BA,AK0BAA,CuJRC,AvKeA,AmCRA,CwEFC,ATvCoM,ArFuCpM,AXvCoM,AwD2CpMqM,C+GMC,AFfA,A5DKAnY,AGGA,A5FQA,ALXAA,AGGA,AvBIAwC,A8LHE,C/EDD,AxGOA2H,AkBCA,ARRA,A6KCErJ,CnIDD,AqD1BA,AD0BAuS,AtFQA,APlCA,AD0BAA,AyBDA,A3CFE,CiLUDvB,AvEjDoMtB,AhGAAA,AT8CpM,CkHPC,AGGA,AjGHA,AGGA,AxBHE,CmHAD+G,A9FAAA,A6CIA,AjEGA,CgH9BC,A9FAA,A+C2BA2U,C+GMC,CAACY,AhEjCA,AK0BA/T,AnG1BA,AK0BAA,AxBHE,CAACzZ,CmHAD,A9FAA,C8FAC,A9FAA,A0KIE,CdMD,CvEjDqM,AlGiDpM,AEjDoM,CqL2CjMN,CrF3CmMwR,AhGAAA,CsG0CnM,A9FAA,AlBHE,E+LIE,CAAC3P,C/EDD,A9FAA,AgDCA,C8CDC4T,A9FAAA,IwF1CwM,AhGAA,CgGACvE,AhGAAA,CsG0CnM,A9FAA,C8FACmD,AMAA,ApGAAA,AMAA,C8FAC,A9FAA,GuKCK,CAAC,CrF3CmM,AhGAA,AqL2ClM,CzEDD,A9FAA,C8FAC,A9FAA,CkF1CqM,AY0CpM,A5G1CoM,Ac0CpM,IkF1CwM,AhGAA,CsG0CnM,A9FAA,C8FACa,A9FAAA,K8FAK,A9FAA,E8FAEpI,A9FAAA,G8FAG,A9FAA,G8FAG,A9FAA,I8FAIwR,A9FAAA,0B8FA0B,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AmJCxG,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AsGQA,AlERA,AIFA,ACGA,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHOAta,AQRA,AKFA,ACGA,APHA,AqHGA,AQAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,AxHAA,AsKAA,ADAA,AIDA,A1KAA,A8DQA,AqHRA,AGAA,ADAA,AlLFA,AsCGA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,EkKJEqE,ArEIA,AWCA,AwEGA,ADKA,AlLTA,AaCA,A0CCA,AyHAA,AhJFA,AoJEE,CfND,ArEIA,AWCA,A3GDA,AaCA,A0CCA,CNDC,AmHTc,A9DjBd,APjB2PoC,AC0C3P,AjFSA,APlCA,ATjB2PA,AC0C3P,ATCI,E8KLF,AhEKA,AxGOA,AUPA,AyKCA,AhJFA,A1CKAxF,ADPE,CgLFD,AxKYAhB,AmCRA4O,A1CKA,C2DJC,AoHLA,A/DrBAC,AvFkCA,APlCAA,C4FyBC+F,ArFSAqP,AVTArP,AkDEA,ADMAkS,CLPC,AmHTc,ArElC6O,AhGAA,AT+C3P7lB,CyG/C4P0G,AmFmD3P,AnLnD2PA,AR2CvPjF,ADIJ,CgH9BC,A9FAA,AwByBA,CqECC8R,A6EQA,A3KRAA,AgDCAU,AyHAA3G,CZVe1L,AvKgBd,APHA,C8GLC+R,AEzBAqH,AzGiCA/W,AQRA0P,AGzBAqH,AwByBA,A1CKA,C8GLCpM,A/FAAA,AfKA,CAAC,CgEGCiX,AjEVE,C+KNa,A9DjBd,AzGiCA,AWjCA,A+C2BA,ADMCH,A0HND,AhJFA,CoIRe,A9DjBd9K,A9FAAA,A+C2BAiJ,AlEJE,CgHGD,AtFQA,ARRA,C8FAC3hB,AxGOA+B,AUPA/B,A+COC,C8CRA,A/FAA,CUSC,AuCDC,A0HND,A3LJE,C+GED,AL1C2P,AhFmD3P,AVTA,AN1C2P,AVwCzP7G,C0GxC0P6J,AM2C3P,AxGOA,AElD2PA,AQ2C3P,C+F1BC,AD0BAqL,A7F1BA,AD0BAA,AhBAI,C+G1BH,A9FAA,AjB0BItO,C+G1BHgZ,A9FAAA,EjB0BM,CwG3CwP,AhGAA,AwD4C3P,AlEJE,CiHvBD,AD0BA,A7F1BA,AD0BA,AhBAI,C+G1BH,APjB2PnP,AvFiB3P,ATjB2PA,AwD4C3P,AhEDI,AyLCJ,C1E3BC,AD0BAlE,A7F1BA,AD0BAA,AhBAI,C6KTW,AYUd,E3EDE,A9FAA,C6JTeohB,A/DSd,A9FAA,I6JTkB,CAACC,IrElCiP,AhGAA,CqKkC5O,ArElC6O3c,AhGAAA,CqKkC5OyB,IAAI,CAAC,GAAG,CAAC,ArElC6O,AhGAA,CqKkC5O,ArElC6OvE,AhGAAA,GgGAG,AhGAA,CgGAC,AhGAA,EgGAE8C,AhGAAA,UgGAU,AhGAA,CgGAC,AhGAA;A2J4CxU,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AsGQAkW,ArEAA,AOVA,ACGA,ANHA,AQGA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A9GOA,ASVA,ACGA,APHA,ASGA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AlLFA,AsCGA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,E8CCE,AmHV0E,ACK1E,AjEIA,AL3CwU,AC2CxU,AmFIA,ApKKA,AVTA,AN3CwU,AC2CxU,AsDQA,A/DPE,AyCDF,CiBCC,A1DAE,C+G1BD,AD0BA,A6EQA,A1KlCA,AD0BA,AgDCAzf,AhEDE,AyLCFiM,A1LGA,CAAC,C8GLC,A/FAA,A2KEA,AhJFA,A3CFE,C2CEDyE,CsIQC,AlERA,A+EIA5S,A9KJA,CiKQCssB,ADZA,ApEYAtb,AOVAwC,AREA,A/FQAxC,ASVAwC,AVEA,AgLEA/G,CEOC,CbbCnK,A/GYAijB,A/DPCroB,ADID,C+KTC,AjEIA,A8ESA,A7KTA,AkDEA,AhEDC,CyGDA,AhGAA,AgCAA,CmJIC,A5LHA,C+KOC,ADZA8E,A9GMAoR,AyHAA,ChJFC,CsIQC1D,AaJA+e,CdRC,A/GYAlJ,C2CACvU,AhGAAA,AqDACjE,C+GZA,ApEYAY,AhGAAA,AZVE,CkEID,CiDJC6F,A9FAAA,A6CIAwP,AlEJE3nB,CiLUD,ArEAA,AOVA2P,AvGUA,ASVAA,A4CUC,CgHAAsH,AlERAQ,A/FAAA,C4FQC7B,AhGAAA,AqDAC,CkDVA,A9FAA,ArBAE,EmHAA,A9FAA,AsBEA,CmJIC,C/EJC,A+EIAyd,A9KJA,C4FQC,AGRA,AnGQA,AIRA,CiKQC,CAAC,ArEAAxd,AGRA,AnGQAA,AIRA,CkDEC,E0CME,AhGAA,EgGAE,AhGAA,EmGRE,A/FAA,E8KIE,CAAC,C/EJC4B,A/FAAA,M+FAM,A/FAA,C+FAC/E,A/FAAA,O+FAO,A/FAA,C+FAC,A/FAA;AqJE3D,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,AsGSAue,A7DRA,AV7C4U,AC4C5U,AWCA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHOA,AcPA,AZ7C4U,AC4C5U,AaCA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AlLFA,AsCGA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,E8CCE,AmHTA,AnEgBA,AGRArU,AIFA,A0EWA,AnKAA,AdDA,AIRAA,AKFA,A6CIA,A6HAEpc,CFOD,A3HPA,C8GPmB2Z,A/DpBlB,AD0BA,A8EEyCoY,A3K5BzC,AD0BA,A+COA,A/DPI,AyLCJnhB,AhJFAoG,EsISE,AFjBAuV,A9KaA,ADPE,CiLWD1lB,ADdkB,ChEMjByI,A8EEyC,A5KFzCA,AhBAI,C0GOHwC,AOVA3S,AGGAqG,A5FQAoL,AdDAkB,ASVA3S,AGGAqG,A0CCA,CNDC,AmDDA,A+EGyCktB,A9KHzC,A2KEA,CZVC,ACGkB1D,AjEKlBxpB,A/FAAA,AiDQA2iB,CLPC,AgDOA,AhGAA,AXHA5kB,A8LHE,CnFMD+R,AUPA9P,A1GOA8P,AYPA9P,AmKCA,A1LGA,C8KbC,ACGkB,A1DMlBya,A9FAAA,AyCOA,A0HNA,CXPmBxZ,AjEKlB,AIFA,AzFWA,AVTA,AKFA,A4CUAuiB,A8HNE5qB,CdOD,ADdkB,AjEKlB,AIFAwZ,AHGA,AMAA,AtGDA,AKFAA,AHGA,AMAA,AvBIAjW,CgLICqY,ADdkB,CDHjB4R,AzDSA,A5FQA1a,AFRA,AyCOA,AtBRA,CiEQC,AhGAA,AqDAA,AtBRAqB,A1CKA,A8LHE,ChBVD,ACGkBsa,ApEalB,AGRA,ACCA,ApGOA,AIRA,AECA,A+COApG,A8HNE1mB,ChBVD+sB,AnEgBAzX,AIPAgI,ApGOAhI,AMPAgI,C6FDCnL,ArFSA,AVTAA,AfKAtQ,CgLIC,ADdkB,AtJclBlC,A1BXE,CgLHiB+G,ApEalB,AOVA,AvGUA,ASVA,AsBEA,CqILmB,A7DGlB0I,A9FAAA,ApBOA,ADPE,CiLWD,ADdkB,A/GalB,AtBRA9C,CsBQC6E,C8GhBC,AnEgBAmE,AOVA,AvGUAA,ASVA,C0JNC,AhEQA,AIFA,AzFWA,AVTA,AKFA,ArBAE,C+GED,A/FAA,AhBFE/W,C4GUD,AlFCAqoB,AdDA,AqDAA,AtBRA,CsBQC,AtBRA,CwEFCxX,A9FAAA,A4CUAuX,A8HNE,CnFMD,AIPA,ApGOA,AMPA,A6KCE,CdOD1M,ArEDA,AhGAA,AmLNE,C5EJD,AHGA,AtFQA,ALXA,AHGA,CQQC,CkFDC,AhGAA,CgGAC,AhGAA,AqDAA,CAAC,CgHCCA,AvJAA,AuCDA,CgHCC9I,ArEDA,AlFCAoV,AdDA,CgGACjR,AhGAAA,GqKCG,ArEDA,AhGAA,EqKCEpD,ArEDAmD,AOVAkC,AvGUAlC,ASVAkC,C4JWC,EAAE8G,GrEDG,AlFCA,AdDA,CqKCC,ArEDA1e,AhGAAA,CcCC,CuJAC,AvJAA,GAAGwR,CkFDC,AOVA,AvGUA,ASVA,CuFUC,AhGAA,EcCE,CAACN,EkFDEwE,AhGAAA,IcCI,EkFDE,AlFCA,AdDA,CcCC;A2IP1E,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AYOA,AOVA,ACGA,ANHA,AJ1CA,AC4CA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHOA7L,AIAA,ASVA,ACGA,APHA,AL1CA,AC4CA,AyHCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AlLFA,AsCGA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,C8FQC,AhGAA,CqKCC,AFjBA,ACE4C,ApEc5C,AGRAkN,AOCAwJ,AwEC2D,ADO3D,AjLDA,AIRAxJ,AQCAwJ,AyCOA,AtBRA,AoJEE/f,CDA0D,AnJF3D,CiBCC,AqD1BA,AK0BA,AwEC2D,A3K3B3D,AK0BA,A0CCAmG,AyHAAojB,A3LJA,CsHGC,A9FAA,AxBHA,CiLWC,AFjBA3c,A/DSA,AMAA,ApGAA,AMAA,AtBAM,ADINxJ,CgLIC+sB,AhLJA,C0LHC,CZVC,ArEpCAxgB,AC4CAmD,AjG5CAnD,AC4CAmD,CiDCC,AmDDA,ACCA,AhGDA,AECA,AjBIA5P,C8GLCoC,ACCAqO,A6EQA,A7KTArO,AECAqO,AyKCA7B,A1LGA,C2DJC,AqHQA,AFjBAua,AvKgBA,A0DNA,A6HAE,CdOD9F,AYAA,ArLDAld,CmLNC,A1LGA,C8GLC,A/FAA,AkDEAgO,AyHAA7X,AIAEtB,ChFFD,A/FAA,C+JRC,A/DSA,A9FAA,AjBIA,C8KbC2uB,A/DSAna,A9FAAA,C0CAC,AqHQA,AcPE,CdOD1B,AlETA,A/FAA,AfKA3N,A8LHEtD,CrF9CD4P,AhGAAA,AwD8CA,AyHAA,A1LGA,C8GLCqC,AL5CAzC,A1F4CAyC,AN5CAzC,AwD8CArK,E+GOE,CAAC,AzKDA,APHA,CAAC,E0GLE4N,AnGQAzJ,AGRAyJ,CoGAC,AJAAE,A3FAA,ALAAA,AVKAvR,C8GLC,A/FAA,E+JRE,A/DSA,A9FAA,AgDCA,AjEGA,C8KbC2qB,ArEpCA,AC4CA,AjG5CA,AC4CA,AoLEE,CAAC,CrF9CDxc,AC4CA5E,AjG5CA4E,AC4CA5E,AVKAtJ,A8LHE,C/EDD,A9FAA,C6JTC,A/DSAiS,A9FAAA,C6JTCmZ,ApEQA,AhGAA,AVKA,CAAC,C0GLC,AnGQA,AGRA,EVKEzpB,C+GJC,A9FAA,AjBIA,C+GJCqP,A9FAAA,CwF7CC,AhGAA,EgGAE7C,AhGAAA,ATiDApO,C8KbC,CAAC,C9KaC,GAAGC,GAAG,CAAC,CyGjDC,AM6CA,AtG7CA,AQ6CA,C8FAC0R,A9FAAA,CwF7CC,AhGAA,IsG6CI,A9FAA,E8FAEpI,A9FAAA,G8FAG,A9FAA,G8FAG,A9FAA,I8FAIwR,A9FAAA,0B8FA0B,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AmJCxG,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AoBAA,ANHA,AQGA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHQAnT,AcRA,APHA,ASGA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AlLFA,AsCGA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,EmKSE6U,AFjBA,ACEA,AjEMA,AL7C4D,AC6C5DvL,AmFEA,ApKOA,AVTA,AN7C4D,AC6C5DA,AuDEA,ADMA,A0HNA,AICE,CJDD,C/HDC,AkDHAoE,AGvBA,A4EkCA,A9KXAA,AIvBA,AnBwBE,EiLUA,AFjBA0C,AhEQA,AL7C4D7J,AM8C5D,A8ECA,A9KFA,AN7C4DA,AQ8C5D,AhBAM,ADIN,A8LFE9P,CdMD,AlETAsc,A+EEAnY,A9KFAmY,CiKSC,AhElCApL,A4EkCA,A1KlCAA,C4JiBC,ACEAyI,AWQA,C/HDC,AkDHA,A+EWA,A9KXA,CkDUCgQ,AjETE,C4DED,AmHTA7c,ACEA,A/DnBA,AzGkCA,AWlCA,CwFyBC,AKCA+J,A8ECA,AtLOAhQ,AGTA,AOCAgQ,AhBAM9R,AyLCN,ChFFCmO,AmFEA4f,AnLFA5f,AVKAvR,C8KbC,A/KOE,C+KPDuqB,ArErC4D,AhGAA,AqLgD1D,A/LJAptB,CgLLD,A/DnBA,A9FAA,AlB8BA,C+KXC,AtEvC4D4Q,AC6C5D,AjG7C4DA,AC6C5D,EiDCE,AmHTA,AhEQA,AJAAxE,AmFEA,A9KFA,ALAAA,AgLEAue,AICAvpB,ChBXCgpB,A9DjBA,AD0BA,A7F1BA,AD0BA,A+COAS,C+CPCnkB,A8ECA,AtLOA,AURAA,A+COC0L,AjETC,C+GCD,AEzBA,ANyBA,AnGSAzH,AQTA,AGzBA,ARyBA,CgGAC,AhGAA,AgLEA,CZVC,CAAC,A/DSA,A9FAA,A+COC,C8CRA,ACCAoK,AhGDA,AECAA,C+COE,C/DPM,AyLCN,CnLOC,ANRMrO,A6LEN,EAAC,C/EFE,AxGQA/F,AURA,ChBAO,CwG9CuD,AM8C5DyL,AtG9C4D,AQ8C5DA,AhBAM,CwG9CuDuE,AhGAAA,EsG8C1D,A9FAA,C8FAC,A9FAA,AhBAM,AyLCN,EzLDQlK,AyLCN,CnLOC,ENRQ,EAAE,CwG9CuD,AhGAA,AR8CtD,CwG9CuDsB,AhGAAA,AR8CtD,SwG9C+D,AhGAA,EgGAEiJ,AhGAAA,UgGAU,AhGAA,CgGAC,AhGAA;A2J+ClI,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AiFQA,ADfA,ApEeA,AOXA,ACGA,ANHA,AQGA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHQAvG,AIAA,ASXA,ACGA,APHA,ASGA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,CmKSC,CFhBC,AhEOA,AL9CkI,AC8ClI0J,AkFSA,AnKAA,AVTA,AN9CkI,AC8ClIA,AuDEA,AlEFC,E4DCC,AoDAA,A8ECA,A5KDA,A+COA,A/DPI,AyLCJX,AICI,C7LFC,C6GDHJ,AEzBAoM,APrBkIvO,A1F8ClImC,AGzBAoM,ATrBkIvO,AR+C9H,AyLCJ,CjKOC,CkCRC,A3DIA,C8KZC5Q,AnEgBAoW,AURA8E,A1GQA9E,AYRA8E,A0CCAhU,AyHAAojB,C/HDC,AqD1BA,A6E2BA,A3K3BA,C8FACzL,AvFkCA6I,APlCA7I,A8CiCA,CzDCC,AkBAA,CqFTC,AJAA,AWCA3D,A9GQAxT,AQTA,ALAA,AaCAwT,AtBAGhZ,AyLCH,A1LGA4B,C0GLCiQ,AWCA9T,AwECA8F,AnLFAgO,AaCA9T,AtBAG,ADIH,C8KZC,AhEOA,ArFSA,AVTA,AiDQA8oB,C8GfC9oB,ArJgBA,AxBRE,C0GQDmW,AFvDkI,A9FuDlIA,AFvDkI,AwDgDlI,C0COCzD,ADTA,AWCA,A5FQAgV,AdAAhV,ADTA,AaCA,CkF/CmIpC,AC8ClI,AmFEA,ApLhDkIA,AC8ClI,CoKPC,AzDQA8V,AwECC,AtKDDA,CuJRC7L,AnEgBA,AhGAA,C0GRC,A9GQA,AgBRA,CoFQCvE,AKlCA,AzGkCA1L,AkBAA,AdAA0L,AOlCA,C4JkBC,A9DlBA,AK0BA,AnG1BA,AK0BA,AyCOA,C8GfC6X,A9GeA,CvCCC/b,AuCDA,CgDjCC,A9FAA,A8CiCAuV,E2CCE,AhGAA,CmKhBC,ArJgBA,CqJhBC,AnEgBAjR,AKlCA,AvFkCA9V,AdAA8V,AOlCA,C4JkBC,CAAC,A9GeA,CAACtE,CzDCC,CkGvDmI,AhGAA,CgGACzB,AhFuDlI,AhBvDkIA,CFuDjI,AyDDA,C2CCC,ApGAA,AIAA,AqDDA,CvCCC,AuCDAiX,C2CCC,AlFAA,AdAA,EcAEI,GuCDG,CAAC,CyCtDmI,AhFuDlI,AhBvDkI,AuDsDlI,EyCtDoI/W,AoFgDlI2iB,ApLhDkI3iB,CgBuDjI,CAAC,EAAE,EAAE8W,CAAC,EoKPG,ApKOD,EgFvDoI,AhGAA,CgGAC,AhGAA,qBoLgD7G,CAAC;AzBApF,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AiFSA4J,AFjBA,ACEA,A7DGA,ACGA,ATDA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A4FSA,A/DRA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AlHQAlnB,AaXA,ACGA,AXDA,AyHCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,A+DEA,AoHFA,AGAA,ADAA,A5ICA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,C+KSC,CjIRC,AgDQA,AFxDgMV,AMgDhM,AMAA,AwECA,AlLOA,AFxDgMA,AQgDhM,AMAA,AyCOA,AjERE,C4DCD,AoDAA,A9FAA,C6FDC,AIFA4W,AzFWA,AVTA,AKFAA,AsKIAgK,AICIgN,EdOF,ArEDAjhB,AKlCA8I,ArGkCA9I,AOlCA8I,AjB0BM,C+KSLzX,ClEVCqL,AL/CgM,AhFwDhM,AVTAA,AN/CgM,AiLiDhM,CXPCgd,AtE1CgMllB,AYgDhM5K,A5FQAmnB,AhBxDgMvc,AcgDhM5K,CyF1BC,A9FAA,AlB8BAiE,CgH9BCua,A9FAAA,AwK2BA5L,A1LGA,COIC,AuLNI,C5ELH,AGGA,A9GQAnL,AaXA,AGGA,CoFQC,AURAwT,A1GQA,AYRAA,AmKCA,A1LGA,C8GLC,A/FAA,A2KEA3a,A1LGAwD,A8LFIszB,CdOH,AlEVAja,AIFAjO,AzFWA,AVTAiO,AKFAjO,ApBOA,CgLKCmY,ADfAyI,AtJcArI,CsJdCmI,A1DMA,A5FQA,AFRA,CoFQCvvB,AURA+lB,A5FQA,AdAA/lB,AYRA+lB,AvBIAriB,CAAC,C+KVC,A1DMA,A9FAA,AmKCA,CrEDC,A9GQA,AgBRA,CyJSC,ADfA+lB,A7DGA,AFvBA,APtBgM,AlGwDhMvf,AkBAAmd,ALXA,AFvBA,ATtBgM,AqLkD5L,ChFHH,AIFA,AFvBA,APtBgMrX,A1F+ChM,AKFA,AFvBA,ATtBgMA,AiLiDhMmB,A1LGArN,A8LFIS,C9LEH,CgLKC,CDfC,A/DpBA,A9FAA,CyFkCC,AlFAA,AdAA,CoKdCirB,AjEKA,A/FAA,AfKA/rB,CkHPC,A9FAA,AsKIA,A1LGA,CkHPC,AFvBA,A5FuBA,AFvBA,C6JoBC,ApEcAsS,AhGAAA,CXJCrS,C+KVC,AjEKA,A/FAA,AfKA,CgLKCsjB,AvEzDgM,AhGAA,CqG+C/L,AvGSA,AQTA,C0F/CiM,AhGAA,AToDhM,CAAC,COIChnB,CoGAC,AGTA,AnGSA,AITA,CiKUCgnB,AlEVAlK,A/FAAA,AfKA,CgLKCrL,AhLLA,C2GICY,AhGAAA,AXJA,GgLKG,ArEDA,AhGAA,CgGACpS,AhGAAA,CqKCC+hB,AvEzDgM,AlGwDhM,AExDgM,AqLkD5L,ChFHH,A/FAA,A+KGIzhB,CrFlD6L,AhGAA,CuKyD/L,ClEVC,A/FAA,CiKUC,ArEDA,AhGAA,EgGAE,AhGAA,EmGTE,A/FAA,E+KGM,EAAEE,UAAU,CAAC;A1BD5E,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,A+EPA,A5DIA,ACGA,ANHAuW,AHEA,AWCA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,ArGHA,ACGA,APHAA,AJEA,AaCA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,A+DEA,AoHFA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,E8CCE,AqHSA,ADfA,AhEMA,A9FAA,A+CQA,A0HPA,A3LFC5W,C2LEA,C/EOC2V,AGTA,AIFAkK,AT9CgPpQ,AhFyDhPwX,AdAAtR,AITA,AKFAkK,AX9CgPpQ,AqLmD5OvQ,EdOF,ADfA+tB,A/DpBAxO,AD0BAb,A7F1BAa,AD0BAb,A+CQAuL,A/DRM,C+KSLqH,ClEVCne,ADFA,A9FEAA,ADFA,CgKJCua,A5DIA,ALAAvV,AHEAjE,AjFSA,ALXA,ANAAiE,AJEAjE,AuDEAkY,ADOA,A0HPA,A3LFCtrB,C4DCA,AqD1BA,A9FAA,AlB8BA,ADLA,CiHzBCge,A9FAAA,CyC0BC,AqHSA,ArEDA,AFzDgP,AhFyD/O,AdAD,AFzDgP,AqLmD5O,A/LHJ,CiLUC4I,ADfA,A9KMM1hB,AyLCN,CjFlDiP,AhGAA,AuDyDhP,C2CAC+M,AGTA,ACCA,ApGQAA,AITA,AECA,A6KEI1T,ChBTHquB,ACCAT,AjEKA1c,ArFSC,AVTDA,C+JNC4Z,ArJeC3C,CkFAA,AIRA,ApGQA,AMRA,C+JSC,ArEDA7mB,AhGAAA,AmLNI,CdOH,AtEVAuT,AhGAAA,AgLEAX,AICIzQ,ChBTH,ApEMAqR,AhGAAA,CqKLC,AlEGA,AGvBA,AlGuBA,AIvBA,A+C2BAiY,ADOA,A0HPA,CZRCmB,ACCA2C,A/DpBA,A9FAA,A+C2BCpF,C6CFA,ArFSC,AVTD,C4FSC,AEXA3S,AHEA,AjFSC2P,AdAD,AGXA3P,AJEA,CqKLC,A/DpBA,AvFkCC,APlCD,A8CkCA8R,CgHCC9X,AFhBA,ACCAA,ArEKA,AKCAuM,AtFQC,AfTD,AOCAA,AyKCA,EZREsN,AhEMA,A/FAA,AiDSA,A/DRM,C+G1BL,AvFkCC,APlCD,AjB0BMvlB,C+KSL,ADfA,A9GOC,C8GPA8pB,CDDC,A7GQCxF,C6CFA,A/FAA,AiDSA,A/DRM,C6KPL,A7KOM,C+KSL,AlEVA,ACCArM,AhGDA,AECAA,A6KEI,C/EFJ,A9FAA,AgDCE,AyHAD,AICIgZ,CjFLH,A/FAA,CiGGC,A9FAA,AgDCC/O,AhEDK,AyLCN,C5EFC,A/FAA,CgKLC,AjEKApY,A/FAAA,AdCM/J,C8KNLgnB,AtJcC,EuJCC,A/KTM,CwBQH,AuCAF,A8HNI,CrKMD,AxBRI,A6LEF,CdOHptB,ADfA,A/GcA,A/DRM,C8KNLkS,A9KMM,C6GDL,A/FAA,AkDEC,EAAE3R,C8GPA,AjEKA,A/FAA,CiKUC,ADfA,CCeCN,AhHDAuqB,E+GdE,CAAC,AjEKA,A/FAA,AkDEC,C+GQA,ADfA,CCeCzY,A/GRC6Z,I+GQG,A/GRC,CDOA,CgHCCtJ,A/GRC,G+GQE,CAAC,GAAGvQ,IAAI,CAAC;AZR7E,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AmBHA,ACGA,AEAA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AnHSA,AaXA,ACGA,AEAA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,EmKWE,AFjBA,ACCA,ApEcA,AF1DkQ,ACiDlQ,AmFEA,AlLOA,AF1DkQ,ACiDlQ,AuDEA,ADOA,CyC1DmQ,AhGAA,CkDkDjQ,AmDDA,AIFAuO,AT/CkQ,AMkDlQ5L,AtFQA,AVTA,AKFA4L,AX/CkQ,AQkDlQ5L,AhBAI,AyLCJ,AhJFAqT,AoJGI,A/LHJ,E+KNEnjB,ACCA,A/DpBA6J,ANyBAsF,AxFzBAtF,ARyBAsF,AsDSA8V,C8GfC,ACCA8D,CjEKC5a,ArFSA4U,AVTA5U,AfKA,CgLMC,A3DVAuT,A9FAAA,A0CCAiF,ADOA,CLRC,AmHPA4B,ApEMA,AKCA,ArGDA,AOCA,AyKCA,ChFFC1Z,AKCA8K,ArGDA9K,AOCA8K,AlBDA,C4DCC,CqHUC,A9DbA,AFvBA,AvFkCA,ALXA,AFvBA,AlB8BAxa,C8KXC,ACCA,A/DpBAib,AD0BA,A7F1BAA,AD0BA,A+CQA,A0HPApU,AhJFA,A1CKA,C8KXCmjB,AhEMA,ACCA7lB,AhGDA,AECAA,AgDCA,AlEFA,CgLLC,AjEKAiV,ArFSA,AVTAA,AkDEA0O,AlEFAlsB,CmHFC2gB,AHGA,AtFQA,ALXAA,AHGA,AyBDA,CqECC,A9FAA,C0CAC,AlCQA,AuCAA,CqDRCgG,A9FAAA,CuJPC,AzDOAC,A9FAAA,AyCQA,C8GfCyH,ApIMW,A3CAX,C0BSC,AiKPA,CjKOC5G,AiKPA,ChFFC,AhGAA,AuDEA,CiDJC,AHGA,A3FHA,AHGA,AgDEtB,AvBHiC,CwEFV5G,A9FAAA,AsBEW,CqECVvC,AMAA,ApGAAA,AMAA,AyCQA6K,C8CTC,AJAA,A3FAA,ALAA,CoKNC,A9DnBA,ANyBA/U,AWCA,AnG1BA,ARyBAA,AaCA,CyF1BChC,AvFkCA,APlCAA,A+C4BtB,ADMsB,CvCAC2V,CAAC,AwCNtBgD,C6CHuB,AJAA,AjFSA,AVTA,ALAA,AgCAW,CwEFV,AFvBA,ANyBAjX,AtFFA,AFvBA,ARyBAA,CqGCC,A9FAA,AyBDW,CwEFV,AFvBA,AD0BA,A3FHA,AFvBA,AD0BA,CQQC,CqFTC,A/FAA,E+FAE,A/FAA,AkDGtB,C+C5BuB,A9FAA,C8FAC,A9FAA,A+C4BtB,AvBHiC,CsEzBV,A9FAA,AwByBW,CAAC+C,IgEAP,AhGAA,CgGACxC,AjFSA,AfTAA,EgCAa,CjBSV2T,AiBTWhiB,KjBSN,AiKPA,ChFFC,AhGAA,AgLEA,ChJFY,CgEAV,AhGAA,AgCAWoC,OAAO,CAACtH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGunB,YAAY,GAAGF,GAAG,CAAC5gB,QAAQ;AiHC/H,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AiFUA,A7DVA,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AnHSA,AcRA,APHA,AqHGA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,A0BCA,A8CAA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AoBCA,ArCDA,AHAA,CmKWC,CFjBC,AnEgBA,AOZAqZ,AThDsQ,ACkDtQ,AKCA,AMAA,AwECA,ApKOA,AdCA,ASZAA,AXhDsQ,ACkDtQ,AOCA,AMAA,AyCQA,A/DRE,AyLCF,A3LFC,CgHCA,A9FAA,C0CAC,AoHPc,A/DnBd,A9FAA,A+C2BmB3X,A6HCf6uB,EhBTFjzB,AhEMA,AJAAuP,AWCA,AtGDA,ALAAA,AaCA,CuJPC,A5DIA,AGGAwS,AjGHA,AGGAA,C0CCoB,C0CQlB5T,AF5DsQrC,A9F4DtQqC,AF5DsQrC,AuD2DtQia,CLRC,AmHPA4C,ACAc,AjEMd,AIFA7M,AREA,A3FAA,AKFAA,AVEA,AuDEmB,AjEGnBpc,C8GLCiZ,AJAA7J,A3FAA6J,ALAA7J,AVKA,C2DJC,AgDSA,AhGAA,CgGAC/R,AhGAAA,CmKhBC,ACAcwE,A1DOd,A9FAA,AvBIA,C8KXCgoB,AzDOAxtB,A9FAAA,AvBIAyD,CgEIC,AhEJA,G+KXiB,A7DId,A9FAA,ApBOAF,C2DJC,AoHPc,A7DId0c,AThDsQ,ArFgDtQA,AXhDsQ,ATuDtQ,C8KXC,AzDOA,A9FAA,CuJPChc,AnEgBA,AhGAA,AmLPI,ChBTH,AnEgBA6R,AUTA,A1GSAA,AYTA,AuKEIzW,ChFHH,A/FAA,AfKAwE,C0GLC,AhGAA,AVKA,E8GLE,A/FAA,CmGFC,A9FAA,ApBOA,CkHPC,AREA,AtFFA,AVEA,AVKA,C0GLC2P,AWCA9L,A3GDA8L,AaCA9L,CoFSC,AhGAA,AmLPI,ChFHH,A/FAA,C+KGKgvB,CnFOHhhB,ADVA,AWCA,A1GSAA,ADVA,AaCA,CmFDC3C,AhGAAA,CqKNe,C7DIb,A9FAA,C8FAC,A9FAA,C2JJewc,CpEgBb,AhGAA,CgGACvvB,AhGAAA,CoKhBe,AeSV,CfTWwR,AeSV,IfTc,ApEgBd,AhGAA,CoKhBeoe,CpEgBb9Z,ADVA,A/FUAA,ADVA,CgGACrC,AhGAAA,OqKNqB,ApEgBd,AhGAA,CoKhBeoZ,ApEgBd,AhGAA,C+FVC,AhGAA,EgGAE,AhGAA,EqKNgB,ApEgBdnX,AhGAAA,CoKhBe/D,IAAI,CAAC,ApEgBd,AhGAA,GoKhBiB,CAAC,CAAC;ApBOxF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AiFWAof,ArEFA,AOZA,ACGA,ANHA,AJjD4R,A3GkD5R,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AnHSA,AICA,ASZA,ACGA,APHA,ALjD4R,A0HoD5R,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A8DSA,A/DNA,AoLHA,AGAA,ADAA,A5ICA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,C8FUC,AOZA,AvGYA,ASZA,C0JJC,ACDwF,ApEiBxF,AKnCA,ANyBAvd,AKCA,AMAA,AwECA,ApKQA,AdAA,AOnCA,ARyBAA,AOCA,AMAA,A0CAoC,AyHCpCme,AICE,A/LHA,CkECmC,CNAnC,AkDHAla,AtGWAvN,AOXAuN,CmDGqC,C+GWnC,AFlBAvT,AhEMA,AJAA,AKCAkZ,AMAA,AtGDA,ALAA,AOCAA,AMAA,CyJWCjW,AFlBA,A5DIA,AREAc,AtFFA,AVEAA,CiDCC,AkICAkF,CpKQC,CkCTC,AmHPAyf,AhEMA,A/FAA,AkDCoC,AjEIpC,C8GLC/kB,AJAA,A3FAAA,ALAA,CgGAC,AmFEA,AnLFA,AuDCoC,CoDAnCme,A5FSA,AFTAA,A0CAoC,C6GPnC,AYQA,CZRCwH,AhEMA,ACCA,A8ECA6F,A9KFA,AECA,AyKCAniB,CVUC,AlEZA,ADFA,AEGAiD,AhGDA,ADFA,AGGAA,C+JWCkb,EnEdE,AHEA,A5FFA,AJEA,CgGAC,AWCA,A3GDA,AaCA,CuJPC,AhEMA,AOCArJ,AtGDA,AQCAA,AmKCA,CZRC9hB,A/DOA,A9FAA,C+JWC,AFlBA,AhEMA4Y,ACCA,AxGQA,AQTAA,AECA,AyKCAxK,E3EDE,A8ECA,A5KDA,AgDAoC,C+GWnC,AaVAE,AtLOA,A0DPxB,AyHAwB,CzHAvB,AyHAwBxS,C5EFC,AOCA,A9GQA,AQTA,AQCA,A0CCxBif,C6CFyB,AOCAjf,AtGDA,AQCAA,G0CCrB,C4HAyB,A5HAxB,AyHAwB,CGAC,AHAA,CVUCgxB,A3DXA,AwECA5I,AtKDA,G8FAG,A9FAA,C8FAC,A9FAA,C8FAC,AwECA,AtKDA,CsKCC,E5HAtBhb,C4HAyB,CxEDC,AwECA,AtKDA,C0CCvB,C+GUyB4jB,CAAC5jB,A/GVxB,G+GU2B,EAAEkiB,E3DXE,A9FAA,CyJWC,C3DXC,A9FAA,CyJWCvN,GAAG,EAAE,C3DXCra,A9FAAA,I8FAI,A9FAA;AoIApE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AoBAA,AH1BA,AP1BA,ACmDA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AnHUA,AkBAA,AJTA,AH1BA,AT1BA,ACmDA,AyHCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A8DUA,A/DPA,AoLHA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,AiLGG,CrKOF,AqKPG,CnIFF,AqHWA,AFlBA,ACAA,A7DIAsY,ALAAtI,AQGA,AwECA,AzKJAsI,ANAAtI,ASGA,AmKCAka,AICG,A/LHFxxB,C4DCA,CmDDC,ACCA+T,AhGDA,AECAA,AgDCA,E+GUE8c,AFlBAztB,ACAAqpB,CDAC,A5DIA,A9FAA,ArBECzsB,C8LEAJ,A7LGA,ADLA,C0GnDC0P,AYoDAsW,A9GSA7b,AE7DAuF,AcoDAsW,AyCSAkE,A/DPAnkB,C6KTC6mB,A5DIA,AHGA,A3FHA,AHGA,AlBDC,CgLNA,AlEIA,AEGAjlB,AjGHA,AGGAA,AgDCAqjB,CyHAC,C7EJCpc,AEGA,AjGHAA,AGGA,AyKCAmb,A1LGAtmB,C8KXC,ACAA,AhEOA,A8ECA,A5KDA,AjBIA,CgLOC,AFlBA+pB,A9GgBAtD,CqDTC,A9FAA,AyCSCC,CqDTApc,AwECAZ,AtKDAY,A0CCA,AyHAA,CVUC,ADlBAme,A9GQAX,CiDJCvL,A9FAAA,AsKIA9O,CXRC,AlEIA,AQGA,AvGHA,ASGA,CuJPC,ACAAkc,AlEIA,AQGA,AwECA,A/KJA,ASGA,CuJPC5pB,AzDOA,AwECAxD,AtLQAmK,AgBTA,CuJPC,ArE7CAuF,AlG6DAtF,AE7DAsF,CyGiDCsQ,ATjDAtV,AMoDA,A3FHAsV,AXjDAtV,AQoDA,A+CSC,A/DPD3E,C+KSCupB,A9DdD,A9FAA,AnBKCtpB,AyLDA,C3EDC0X,A9FAAA,A+CSC0M,CkDZA,ATjDA,ArFiDA,AXjDA,AiLqDA9X,CVUC,ADlBA,A7DIA,A2EIA,AzKJA,A6CIA,C8GRC,A7DIA,ATjDA,ArFiDA,AXjDA,AwDqDA,CDQE,A0HRD,CnLQC,ANPA,AyLDAtS,C1HQEgoB,CgHEA,AzKFA,ANPA,C8GFC,A9FAA,C8FAC,A9FAA,E4FHE,A/FAA,A4KIA,CAAC,GVUG,ChHFE,EgHECvoB,AhHFCwoB,MgHEK,AhHFC,CgHEAvoB,ChHFEsnB,GgHEE,CAACsI,EhHFG,CgHEA,ChHFE,CgHEAvN,GAAG,CAAC,GAAGuN,GAAG;ArBXvE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AYUA,AObA,ACGA,ANHA,AGvBA,ANyBA,AWCA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AjGWA9I,AdAA,ASbA,ACGA,APHA,AIvBA,ARyBA,AaCA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,AiLGA,CjFLC,A/FAA,C6CGC,AqHYA,AFnBA,ACAA,AjEMA,ALpD6B,AoFuD7B,AtLOA,AQVA,ANpD6B,AuD8D7BkC,A/DPE,AyLDF,E3EDEvU,A9FAAA,AyBDAoD,A3CAA,EiLaE,AFnBAhU,ACAAssB,AtE9C6BziB,AoFuD7BkmB,AtLOA,AE9D6BlmB,AwDsD7B/E,AhECE/C,C+KUD4W,AFnBA,CrJiBC,A1BXA,C4GWCnG,AKpCA+I,AP3B6B,ACoD7BpL,AjFWAvM,AdAA4O,AOpCA+I,AT3B6B,ACoD7BpL,AgLEAse,A3LFApzB,C4DCC,AqHYA,AFnBA,A/DOA,A9FAA,AgDCA,AvBFA,A1CKA+E,CgLQC,AjEZAgE,A9FAAA,AjBIA,C2DJC,AqHYA,ADnBA,AtE9C6B2I,AhGAAA,AwDsD7B,C8CDC,AxGSAlG,AUTA,C6JPCgiB,A/DOA,A9FAA,AjBIA,ADLA,CgLNCmD,AcSA,A7LEAhsB,C8KXC,A9KWA,C8KXC,AnEiBAwS,AhGAAA,AqDDA,AjEVA,C+KNC,ACAA,ApEiBA3D,ADXAsB,AjFWA,AdAAtB,ADXAsB,AsDUAsU,C8GhBC,ACAAxW,A/DnBAsN,ANyBD,AjFWCoI,APpCApI,ARyBD,AgLEC,A1LGAtb,ADLA,CiHzBCob,A9FAAA,A+C2BA,AyHAAtM,A1LGA,C2GMC,ADXA,AKCA,AxGSA,AICA,ADXA,AOCA,E8JPE,ApEiBAoD,AIVAoI,ApGUApI,AMVAoI,AyKCA,CXRCgS,A/DnBA,AP3B6B,AvF2B7B,AT3B6B,ARuD3B,ADEFjsB,CyGzD8B6G,AhGAAA,AiLsD7BwG,A1LGA,CgH9BC,AzGmCA,AkBCA,APpCA,EuF3B+B,AhGAA,AuD8D7B,AhELA,C2GMC,AlFAA,AdAA,AVREvL,ADEF,CyGzD8B,AMqD7B,AtGrD6B,AQqD7B,A+CSAsiB,C2CCCjS,AIVA,ApGUAA,AMVA,AyKCA,EAAE+T,G/ESG,ApGDA,AICA,AqDDA,CAAC,A0HRA,C/ESC,AF/D6B,AlG8D7B,AICA,AF/D6B,CgGAC,AhGAA,AiLsD7BnX,EXRE,AtJiBA,AxBRE,AyLDF,CXRCpB,AWQA,CzLCG,G8KTC;ApBO9C,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AeDA,AIFA,ALAA,AQGA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,A3GAA,AKFA,ANAA,ASGA,A4GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AGEA,A/IDA,AEHA,ACGA,AJDA,AFAA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,AiLGA,EdUE,AFnBA,ACCA,ApEgBA,AKpCA,AP5BoE,ACqDpE,AmFGA,ApKQA,AdAA,AOpCA,AT5BoE,ACqDpE,AsDUA2Y,ELTE,AoDAA,AxGSA,AUTA,AhBEI,AFHD,EiLaDX,AFnBAsB,AnEiBA,ADXA,A/FWA,ADXA,AuDEAV,C6GRC,AeSA,C9EFCjW,AtFUA,ARVAA,AlBDG,CgLLF0Y,AtEhDoE,AYsDpE5G,A5GtDoE,AcsDpEA,AxBDGpnB,C4DCF,AqHYA,AtEbA,AnGUA,AGVA,AuDEA,ADQA,AhELA,C0GLCkU,AmFGAhM,AnLHAgM,CiDCC,AkIEA,ApKQAvN,AwCTA4kB,AlEFG,CiLaF,ArEFApU,AhGAAA,AqDDA2S,C+GfC,AhEMA,AxGSAte,AUTA,C8JNCglB,AhEMArR,A8EEA,A5KFAA,AlBDC,C0GrDoE5Q,AoFwDpE,ApLxDoEA,AwDuDpE,C+GWC,A3DZA6Y,A5FUA,AFVAA,AxBDC,CiLaA0K,ArEFA,AIVA,AMAD,AwEEC5pB,ApKQA,AdAA,AMVA,AMAD,CoCAE,A8CtDoE,AoFwDpE,ApLxDoE,CsGsDnEgX,AMAA,ApGAAA,AMAA,CwJNC,A/GeA,C+GfCyL,AcQAxpB,A7HOAmqB,CgHGC,ArEFA,ApGDA,AICA,CqKECnD,AvElEoE,AlG+DpE,AE/DoE,CiGqDnE,AhGAA,CqKLC,CrEKC,AhGAA,CqKLCsI,AcQA,C9EFC,A9FAA,C+JYC,AjEZA,A8EEAvoB,A5KFA,A+CSA,CgHGC,ADlBA,ApEgBA,AIVA,A8EEA,AlLQA,AMVA,C+JYC,AvElEoE,AMsDpE,AtGtDoE,AQsDpE,A+CSAmS,C+GfC2W,ApEgBA,AkFRA,AlLQA,E8FhEsEziB,AoFwDpE,ApLxDoEA,EsGsDlE+G,A9FAAA,CwFtDqE,AhGAA,CsKgDnE,CAAC,CtEhDqE9H,AhGAAA,EsGsDlE,A9FAA,C8FAC1E,A9FAAA,E8FAE,AtFUA,ARVA,CwFtDqE,AMsDpE,AtFUA,AhBhEoE,AQsDpE,A+CSA,CyC/DqEyF,AhGAAA,CuD+DnE,EyC/DsE,AhGAA,CgGAC,AhGAA,IsGsDhE,A9FAA,E8FAE2Q,A9FAAA,C+CSC,CAAC,O+CTO,A9FAA,C8FAC,A9FAA,sBVSsB,GAAG,OAAO3T,QAAQ,CAAC;AoJT7G,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AgFNA,AjEKAjB,AKCA,AVvD0H,A3GqD1H,AwDCA,AfCA,A2IDA,ADAA,AvHAA,AiICA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AjGWA,AVXAA,AMCA,AZvD0H,A0HuD1H,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AGGA,A/IFA,AEHA,ACGA,ANDA,ACCA,AHDA,AMAA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,CYWC,CuJEC,AFnBA,A9DnBA,AD0BA,AMAA,A9GSA,AWnCA,AD0BA,AMAA,AyCSAihB,C+CTC,A9FAA,C0CAC,AgDUApU,ADXA,AmFGA,AlLQAA,ADXA,ATGI,AFHD,E+KND0X,AhEMA,A/FAA,AkDEA1F,ADQA,AhELA,C8KXC,AhEMA1d,AOCA,AtGDAA,AQCA,CmFDC,AmFGA,AnLHA,AXAG,CiLaF+kB,ArEFA,ADXAtc,AKCA,ApGUA,ADXAA,AOCA,A+CSA4V,A0HPAqJ,A3LHGlzB,C4DCF,AmHPA6uB,CzDOCzQ,A9FAAA,AtBEIvX,C0DFH,AgDUA,AQVA,AxGUA,AUVA,CsFUC,AIVAiK,ApGUA,AMVAA,ClBDI,CiLaF,A3DZA,A9FAA,CyJYCqhB,A/GXA,CDQC,AjEVG,C+KNF,AzDOAnqB,A9FAAA,A0CCAkhB,ADQAoC,C8GhBCZ,AYSAwI,A3LHG,C4DCF,A+HEC1f,C5EHA,ACCA,AhGDA,AECA,C6FDCiF,A/FAAA,AiDUA,C8GhBC,ApEMA,AhGAA,ATGI,AyLAH,ChFHAvE,AhGAAA,AsDUAkG,A/DPIlT,C+KUH,AFnBA9B,A/DOA,A9FAA,AyKECgN,CZTA,A/DOAiD,A9FAAA,C+JYCqV,AFnBA,AzDOA,A9FAA,CuJPCoE,AhEMA,AOCA5tB,AtGDA,AQCAA,A0CCA,C6CFCmH,A/FAAA,CdGK,C+KUH,AFnBA,A7KSI,AyLAH,CZTAjD,A/DOA,A9FAA,C+JYCkJ,AFnBA,ApEMA,AKCA8F,ArGDA,AOCAA,AyKEC6W,CZTA,AzDOA,A9FAA,EyJYE,AtEbA,AWCA/D,A3GDA,AaCAA,CmKEE,CVUA,AlEbA,A/FAA,CiDUC,A0HPCpT,C5EHA,A/FAA,C2FAC,AhGAA,AsDUA,A0HPC,CVUA,CAACie,A3DZA,A9FAA,AmKEC,GrEFE,A9FAA,CwFAC,A9FAA,A+CSA,CAAC,C+CTC,A9FAA,CoGAChqB,A9FAAA,EyJYE,EAAE,C3DZC,A9FAA,C8FACqW,A9FAAA,EyJYE,CAAC0T,C3DZC,A9FAA,C8FAC,A9FAA,EyJYE,AlEbA,AOCAzT,AtGDA,AQCAA,CyJYC,ClEbC,A/FAA,EsGCE,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,E8FAEA,A9FAAA,I8FAI,A9FAA,G8FAGD,A9FAAA,I8FAI,A9FAA,E8FAEC,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA,E8FAE,A9FAA;AoIA9F,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AiFYA,ADjBA,A7DEA,ALAA,AJpDA,A3GqDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AnHUA,AkBEAqJ,ALdA,ANAA,ALpDA,A0HuDA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDAzP,AFAA,ACCA,AGDA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,AiLGI,CdUH,CFnBC,AnEiBA,AGXA,AEzBA3R,ArGoCA,AIXA,AGzBAA,A8CoCA4hB,A/DRE,AyLAF,E/HFE,AuDHA7V,AREA,AKCA,AMAA6U,AjGHA7U,AVEA,AOCA,AMAA6U,AxBDG,E+KNDpiB,AeSA,A5HDA4lB,AjEGA7lB,C8KXC,A9KWA,C2DJC,A+CDA,AjFYA,AfZA,AsDWA,AtBXA,A3CAG,CgLJF8rB,A/DrBA,AP7BAnf,ACsDAyC,AjFYA5L,APrCA,AT7BAmJ,ACsDAyC,AgCAAyE,A3CAGzY,C4DCF,AmHPA,A9DnBA4H,A9FAAA,A+C2BA,CoDDC,A9FAA,AyCUAqgB,AhENA,CqHJC7J,A9FAAA,A0CCA,AyHCW,A1LEX,EkHPE,A9FAA,ArBEG,C+KNF,CzDOC,A9FAA,C2FHCvO,AGGA,AjGHAA,AGGA,AyCUA,AjEXG,CgLJF6gB,A/DrBA,AvFqCA,APrCA,C6JqBCH,A/DrBA3Q,AvFqCAqI,APrCArI,AnByBG,CsHCF7X,A9FAAA,CkFvDCwJ,AhGAAA,AuDiEA,C+GfC,AtElDA1R,AhGAAA,AiCsDA,CgEAC,AhGAA,CqKJC4qB,A7DEA,AREA7V,AtFFA,AVEAA,CwGFC,AzFcA,ALdA,AsBEA6D,E+DtDE,AhGAA,AuDiEA,C+GfC,AtJgBA,CgFlECjH,AYuDA,A5GvDAA,AcuDA,CwJLCgf,A1DKApS,A9FAAA,CmFDC,AhGAA,EqKJE,A/DrBA,AP7BA,AvF6BA,AT7BA,CiGsDC,AWCA,A3GDA,AaCA,CwJLC,A/DrBAyB,AP7BA,AYuDA,AnG1BAA,AT7BA,AcuDA,GEWG1H,AiBZA,CsEzBC,ANyBA,AxFzBA,ARyBA,CsGzBC,A9FAA,MOqCM,EAAE,SyFdS,A9FAA,C8FAC,A9FAA;AuIG1D,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,ArBCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AiFaA,A9DhBA,ACGAxU,ANHA,AGvBA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AUCA,ApHAA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,AnHWAyG,AabA,ACGAzG,APHA,AIvBA,AiH0BA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,ANDA,ACCA,AGDA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,AiLGI4zB,EnIFF,AmHPA,ACEA,ApEgBA,AGZA,ALvDmC,AYwDnC,A5FWA,AdAA,AIZA,ANvDmC,AcwDnC,AyCWA,A/DTE,C0DFD,CuDHCne,ALAAR,AHEA,AKCAxD,A3FHAgE,ANAAR,AJEA,AOCAxD,AyKEA,A1LEA,A8LFI,A/LHD,C+LGE1F,ChBTHof,ACEA5pB,ApEgBA+R,AQXA,AVxDmC,AoF0DnC,AtLQA,AkBCA,AdAAA,AUXA,AZxDmC,AuDmEnCqU,C+GhBC,A5DKA1nB,A5GUA2H,AcVA3H,CyJPC,ApEMA,AhGAA,AuDEA0F,AyHCA4pB,A3LHG,CiLcFf,AtEdAne,AhGAAA,AXAG/T,CgLJFuwB,AlEEA,AEGA,AtFWA,AXdA,AGGA,A+CWA,C8GlBCzB,AnEkBA,AIXAnmB,AtFWAmf,AdAA,AMXAnf,C4KECyF,A5HDA,C8GNC,AlEEAwB,AJrDmChQ,AMwDnC,AjGHAgQ,ALrDmChQ,AQwDnC,A+CWA,C+GhBC4S,ApEgBAkE,AQXA,AJAA,ApGWAA,AUXA,AJAA,AgDCA2V,AyHCA,CxELC,A2EKA,AzKLA,CrBEI,C+KNF,A3DOA3G,A9FAAA,A2CWA2E,A0HTA/W,CZTCjO,ACEA,A7DEAuK,ATrDmC,AoF0DnCzB,AzKLAyB,AXrDmC,CuKqElCsiB,AFpBA,ACEAjtB,AhEKA,A9FAA,AlBDG,CiLcF2rB,ADlBA,ApEgBA,AEdA,AlGcA,AGdA,A4KKA,CZTC1rB,AnEkBAlE,AEdA,AEGAyd,AxGUA,AkBCA,AdAAzd,AGdA,AGGAyd,A+CWA,A0HTA1B,AIAI,A/LHD,C+KNF,AeSA,AtLQAlS,AyDCAmd,A8HTI,CrF1DgC,ACuDnC,AmFGAjgB,ApKSA,AhBnEmC,ACuDnC,CoKNCyiB,ApEMA5V,AmFGA,AnLHAA,CwGFC,A2EKA,AzKLA,C8FAC,ACGA,A0EEAif,AzKLA,ACGA,CsFWC,AhGAA,A+KTA,CZTC,A9GkBA,CgHEC,AtEdA,AjFYA,AfZA,AoLGI,ChBTHxH,AnEkBAjZ,AkFTA,AlLSAA,AqDAA+X,CgHEC,AvErEmC,AoF0DnC,ApL1DmC,AqL0D9B7J,CpFHJ,AmFGA,AnLHA,CiGYC,AlFAA9a,AdAA,CmKlBC,AnEkBAxF,ApGDA,AICAA,CmKlBC,ArEjDmCpB,AMwDnC,AtGxDmCA,AQwDnC,C8FAC,AxGUA,AUVA,A6KEK,CpFHJ,AhGAA,CeYC,AuCAA,CvCAC,CkFAC,AFnEmC,A9FmEnC,AFnEmC,AuDmEnCwrB,A8HTK,EnFSH,AhGAA,EqDAE,CyCnEoC,AhGAA,AuDmEnCpqB,G6CdG,A/FAA,C+FAC,AJrDmC,A3FqDnC,ALrDmC,EgGAE,AhGAA,AuDmEnC,CAAC,EkDdE,A9FAA,C8FAC,A9FAA,EbaE,CkGlEoCpB,AhGAAA,CFkElC,GkBCG,CgFnEoC,AhFmEnC,AhBnEmC;AkJwDlG,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AmBHA,ACGA,ANHA,AGvBA,AlHwBA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AtGFA,ACGA,APHA,AIvBA,AiH0BA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,AvBAA,AqJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,E8CCE,AqHaA,AFpBA,ACEA,AjEIA,ALxDkG,AYyDlG,A9GUA2L,AkBCA,AVZA,ANxDkG,AcyDlG,AyCYA,A/DVE,A6LAA,EnFSA,AOdAqG,ACGAwH,ATDA,AKCAjE,ApGWA,ASdAvD,ACGAwH,AXDA,AOCAjE,AyKEA,A1LGA,ADNG,EgLJDjQ,AtEpDkGsM,AYyDlG2G,A5FWA,AhBpEkG3G,AcyDlG2G,A0CCA,ADWAmT,A/DVE,A6LADhqB,CfPA,AtJgBAwmB,AxBTExhB,CyGHD,AhGAA,AsDaA,A0HVA4sB,A3LHG,CiLcF,AFpBAtuB,A9DnBAmb,ANyBAhM,AxFzBAgM,ARyBAhM,AXAG9T,C4DCF,AmHPA,ACEAswB,AtEpDkG,AMyDlG,AtGzDkG,AQyDlG,C0FWC,AIXA5nB,ApGWA,AMXAA,A+CYAlI,AhEPA,C2DLC,AuDHA,A3GaA,AabA,AsKKA,A1LGA8B,CgLQCkvB,ADlBA,AtEpDkG7xB,AMyDlG,AtGzDkGA,AQyDlG,C8JLC4S,AhEKA,AMAA,A9GUA,AUVA,AMAA,CuJPC,A5DIA5C,A9FAAA,AsKKA,C/ESC,AhGAA,AXNA,A8LHC,A/LHE,CiLcF,A3DbAmX,A5FWA,AFXAA,AyCYA,AhEPAjiB,CgLQC8rB,ADlBA,A5DKA,AVzDkG,AlGmElG,AcVA,AZzDkG,AuDqElG/d,C+GjBC3N,AtEpDkGuM,AhGAAA,AiL2DlGsH,A3LHG,C+KNF,ACEA,A/DrBAgH,AvFqCA,APrCAA,A4K4BDve,C3EFEoO,AH1BAoQ,AD0BA,A1FAApQ,AH1BAoQ,AD0BA,AlBDG,C+KNF,A5DIA,A9FAA,ApBQA,CkHRC,AREA,AKCAvB,A3FHA,AVEA,AOCAA,AjBKA9Z,C0GNCkQ,AjFYA,AfZAA,AVMA,CyG9DmG,AhGAA,AR2DhG,CwG3DiGnD,AhGAAA,CuKsEjG,AhLRA,CgLQC,A7DbA,AEAA,AhGAA,AEAA,C4FAC,AEAAsV,AhGAA,AEAAA,AyCYA,A0HVA,C1HUCiC,A/DVExiB,AyLAFwsB,A1LGA,A8LHD,C9LGE,CgH/BC,A9FAA,A4K4BD,C9LGE1wB,CgH/BCqd,ANyBA,AxFzBAA,ARyBA,E2GCE,A9FAA,AyCYA,A0HVA,CjF3DmG,ACwDlG,AKCA,AMAA,A5GzDkG,ACwDlG,AOCA,AMAA,AyCYA,AhEPA,CgH/BC,AP/BkG,AMyDlG,A7F1BA,AT/BkG,AQyDlG,AyKEA1N,A1LGApN,EmHLE,AH1BA,A3F0BA,AH1BA,CiG0BC,A9FAA,C8FAC6Q,ATDA,ArFCAA,AXDA,CVMC,C0LHC,A1LGA/Q,CAAC,C0LHCmmB,CvEFC,A9FAA,CrBKC,CkHRC,A9FAA,AnBKE,CiHLD,A9FAA,AsKKA,CAAC,A1LGA,CAAC,CCHG,CAACzkB,ADGF/D,IAAI,CAACuC,KAAK,CAACJ,CAAC,GAAG,GCHK,ADGF,CAAC,CAAC,GCHKiC,YAAY,EAAE;A0JF7F,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AiFaA,AlLfA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ASCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,EkKJE,ApEgBA,AGZA4E,AIFAmM,ACGA4B,AH1BA,APhCwI,ACyDxI,AKCA,AMAA,A9GUA9N,AkBEA,AdDA,AIZAD,AKFAmM,ACGA4B,AH1BA,AThCwI,ACyDxI,AOCA,AMAA,AyCYA,AhEPA,C2GMC,AhGAA,CgDXC,AmHPAwS,A7GQA,AhECIxlB,AyLAJ2lB,AhJHAvD,AoJGIpnB,A/LHD,C+KNF,AvKiBA,A0DTA,C8GNCkD,AtErDwIgN,AY0DxI3J,AwEEA,ApKUAmgB,AhBtEwIxW,Ac0DxI3J,AyCYA0jB,C+GjBC,AxKeA,A0DTAnd,C6GRC2gB,ApIMA,A3CAG,C4GYF,AKrCA,ArGqCA,AOrCA,AnByBG7uB,C4DCF,AoHLAqwB,AtErDwI,AhGAA,AwD2DxI,AyHCA,CrEFC,A9FAA,AmKEAsC,AhJHA1oB,CiBCC,AmDDA,AOCAqM,A5FYA,AVbA,AQCAA,A0CCAxV,ADWA,C+GjBC,CAACwR,AjEIA,A/FAA,A+KGI,A/LHD,C+KNF,ArEnDwIzR,AhFsExI,AhBtEwIA,AuDsExIN,C8GnBCyE,AvKiBTsG,CuKjBU,AvKiBV,AmCXU,AoJGEssB,A/LHC,CgLJF,A7DEA,A9FAA,A6CIA,AvBFAjsB,A3CAG,C4DCF,AmHPAgjB,ACEArqB,AjEIA,AEzBA0K,AK0BA,A9GUD,AkBEC,AVbA,AGzBAA,AK0BA,CwJLC,A1DKA8X,A5FYAqB,AFZArB,CuJPC,A5DIApV,A9FAAA,A4CeA,CCXC,ADWAiB,A/DVI,C6KTHwZ,A7GQA,CwC3DyI,AhGAA,AwD2DxI,AvBFA,CzCGK1lB,AyCHJiJ,AoJGE,C9E5BD,APhCwI,AvFgCxI,AThCwI,AiL4DxI,AIAEvL,ChBTD,AzDOA,A5FYA,AFZA,AmKEA6uB,CZTC,A3DOA,AH1BA/jB,AK0BA,A5FYA,AJZA,AH1BAA,AK0BA,C2FHC,AGGA,A5FYA,ALfA,AGGA,C2FHCuI,AGGA,AjGHAA,AGGA,C4FAC0B,AEAA,AhGAAA,AEAA,AmKEA,CAAC,AhJHA,C2ECC4N,A9FAAA,AyCYA,AtBbA,CsEzBC,A9FAA,A8CsCAoE,EgDtCE,A9FAA,CjB4BK,C+DUH,CAACpqB,CqDZC,A9FAA,G8FAGgmB,A9FAAA,CuKEG,C3EFD,A9FAA,A2CYA,A8HVE1lB,C5ELD,ACGAgY,A/FHA,ACGAA,CqBDC,CsBaC,AtBbA,CsBaC,AtBbA,C2ECC,A9FAA,AyCYA,CqDZC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,EuKEI,EAAE,EAAE,CAAC,Y3EFU,A9FAA;AsIAxE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A4FcA,A9DjBA,ALAA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AtGFA,ANAA,AqHGA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDAoP,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,AHAA,EkKJE,AjEIAld,AKCA+N,ATDA,AKCApE,AMAA,A5FYA,AVbA3J,AMCA+N,AXDA,AOCApE,AMAA,A0CCA,ADWAiW,AhEPF,CiEJG,CNDC,AmHPA7mB,AnEkBA,AOdA6U,ALAA3Y,AGvBAuf,APjCgK,AlGqEhK,AICA,ASdA5G,ANAA3Y,AIvBAuf,ATjCgK,AwD4DhK,AhECI,AyLAJ,AhJHA,AoJGI+X,A/LHD,C+KNF,AhEMA,A/FAA,AkDEA9X,AvBFAmH,CqIJC2J,ArEIA,AWCA/J,AwEEA,ApKUA9O,AfbA,AaCA8O,AyCYA,C+GjBC,AjEIA,A/FAA,AiDaAnY,C8GnBCmgB,ArEpDgKrd,AM2DhK,AtG3DgKA,AQ2DhK,AyKEAiC,A3LHG,CiLeFue,AjEdAxpB,A9FAAA,AgDCA,AlEFGxI,C4DCF,AoHLAowB,AlEEA,AHEA,A5FFA,AJEA,AuDEA,AyHCA,C/ESCnd,AFtEgK,AC0DhKc,AKCA,AxGUAhJ,AICAkI,AFtEgK,AC0DhKc,AOCA,A+CYA,A/DVIvN,C0DFH,AoDAA,A8EEA4tB,A5KFA,A+CYAhJ,A0HVA,AIAI,ChBTH,ACEA,AlEEA3b,AQGA,AvGHAA,ASGA,AmBDA,CoINCpL,ACEAgO,ApEgBA,AFtEgKhB,AY2DhKxQ,A5FYA,AdDA,AFtEgKwQ,Ac2DhKxQ,CuJPC,AnEkBAiW,AKrCA,ArGqCAA,AOrCA,A4K4BI6gB,ChFHHtsB,AEzBAyU,AjGyBAzU,AGzBAyU,AwByBArQ,CoINCkc,A/DOA,A8EEA,A5KFA,C6JPC,ACEA,A7DEA,ATxDgK,ArFwDhK,AXxDgK,AuDuEhK,C+GjBCkF,AjEIAxlB,AL1DgK1E,AM2DhKgX,AtFYA/c,AVbAyK,AN1DgK1E,AQ2DhKgX,C0CAC,AmHPA7Y,AhEMD,ADFC,AGvBA,AK0BA,AwEEAuvB,A9KHD,ADFC,AIvBA,AK0BA,A0CCA7iB,ADWA,AjEbG,CiLeFwgB,AFrBA,A5DIAviB,ALAA,AGvBA,A5FuBAA,ANAA,AIvBA,A8CsCA,CgHECghB,ArEHA,AGZA,AnGYA,AIZA,C+JNC1rB,AnEkBAwR,AQXA,AV3DgK,AY2DhK,A1GWAA,AUXA,AZ3DgK,Ac2DhK,A0CCA,ADWA,A/DVI,AyCHJ,AoJGI,A/LHD,C+KNF,ArEpDgK9W,AM2DhK,AMAA,A5G3DgKA,AQ2DhK,AMAA,AyCYA,A/DVIoH,AyCHJ,AoJGI1B,ChBTH,ApEMA,AKCA,ArGDA,AOCA,AgDCA,AlEFG,CgLJF,A5DKA8T,AEAA,AhGAAA,AEAA,AyCYAgS,C0CbC,AhGAA,CwGFC,AzFeA,ALfA,CuFcC,AOdA,ALAA,AJxDgK,A9FsEhK,ASdA,ANAA,ALxDgK,CoGwD/J,AtGaA,AkBEApD,AXfA,AkDeA,A/DVI,C+KYH,ArEHAhR,AEdAvW,AJxDgK8Q,A9FsEhKyF,AGdAvW,ALxDgK8Q,AuDuEhKvQ,A/DVI,E+KYF,AhExCA,A6E4BA,A3K5BA,C2K4BCyE,AnJHA,C+D1DiK,AhGAA,AiC0DhK,CiEYC,AlFCA,AdDA,CgGAC,AEdA,AlGcA,AGdA,AkDeA,CAAC,CyCvEiK,AhFuEhKuiB,AhBvEgK,CyGwD/J,ACGA,A0EEA,AzKLA,ACGA,C6FHC,ACGAzO,A/FHA,ACGAA,CsFWC,AOdA5D,A2EKAvH,AlLSA,ASdAuH,CuFcC,AhGAA,CgGAC,AhGAA,CkLTC,ApKUA,CoKVC,ApKUAhV,CyFfC,A9FAA,CqFxDiK,AhGAA,AqL6D5J,CrF7D6J,AhGAA,AqL6D5JW,KrKUC,CAAC4W,IqKVQ,EAAE1W,C3EFH,A9FAA,CIYC,CAAC,OqKVW,CAAC;AnCF5E,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AyBHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A5GFA,AqHGA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,EgKeE,ADnBA,ApEgBA,AOdA6X,ACGAsM,AJAAxQ,AxGUA,AICA,ASdAkE,ACGAsM,AJAAxQ,A+CaA,A/DXE,ADGJ,COKG,CoDVC,AmHPAvQ,AhEMA,ADFAgU,AJzD+M,AC2D/M,AWCA,AtGDA,ADFAA,ALzD+M,AC2D/M,AaCA,A0CCA,A6HCIvY,A/LHL,C+KNE,CCEC4wB,A/DrBA,A9FAA,A8CuCAzF,A0HXAplB,E/HFE,AmHPA0lB,ArErD+M,AC2D/M,AKCA,AtG5D+M,AC2D/M,AOCA,C+JcC,AFrBA,ApEMA5X,AKCAvL,ArGDAuL,AOCAvL,C0CAC,AmHPAsmB,A9DnBArP,AK0BA,AnG1BAA,AK0BA,CuFDC,ACCA,AhGDA,AECA,AgDCAnf,C8CDC,A9FAA,A6KEI,CdYHsxB,AhHDA,A0HXA,CZTC,ACEA,A/DrBA,AK0BApL,AnG1BA,AK0BAA,AmKEAhf,CZTCzC,AhEMA,AEzBAma,APlC+M1N,A1F2D/M,AGzBA0N,ATlC+M1N,AqL8D3MjS,ChBTH,AhEMAwU,A/FAAA,AiDcA,C8GpBC,ACEAmZ,AlEEA,A/FAA,AmDIA,ADYA,C8GpBC6B,ArErD+M,AhGAA,AwD6D/MxuB,C+GaC,AcZI,CdYHkwB,AnEjBA,AEGA,AjGHA,AGGA,A6KEIztB,CjFLH,AGvBA,AlGuBA,AIvBA,C4JmBC,A5DIA,AFvBA,AD0BAub,A3FHA,AFvBA,AD0BAA,AgDCA,AyHCA,CZTCgQ,ArErD+M,AC2D/M,AjG3D+M,AC2D/M,AuDEA/c,AyHCA,CZTC,A9DnBA,ANyBAqC,AxFzBA,ARyBAA,CoKNCmb,A5DIA/V,A9FAAA,C2JFC,A9GMA,C8GNC8X,A9GMA,C6GRC,AjEIArY,A/FAAA,CkKiBC,AFrBAxT,CEqBC,AFrBA,AhEMA,ACCA,AMAA,AtGDA,AECA,AMAA,CuJPC+pB,AhEMA3X,AL3D+M,AM4D/M,AMAA,AtGDAA,AN3D+M,AQ4D/M,AMAA,EkF5DiN,AC2D/M,AjG3D+M,AC2D/M,CoKNC,AjEIA,A/FAA,CgKJClT,AYSA,CZTC,ACEA,A5DKA,ATDA,ArFCA,AXDA,AoLGI,ChBTH,ACEA4sB,AeOI4G,ChBTH,CAAC,A5DIA,ACGA3e,ANHA,AzFAA,ACGAA,APHA,CgKJCwV,A5DIAvV,ATzD+M1H,AY4D/M,AjGHA0H,AXzD+M1H,Ac4D/M,CmFDC,AWCA,A3GDA,AaCA,EuJPE,ACEA,AtEvD+M,AhGAA,CqKqD9MzM,ACEAorB,AjEIA,A/FAA,C+JNC,AgBSI,ChBTH,AgBSI,CfPH,EAAE,ClEEC,A/FAA,GqGGG,ANHAzX,AxFGA,APHAA,CiKFC,A5DKA8M,A9FAAA,C0JLC,IlEEI,A/FAA,CoGAC,A9FAA,EyFAE,A/FAA,O+FAO7M,A/FAAA,M+FAM,A/FAA,K+FAK,A/FAA,QqGGQ,A9FAA,GwFHG,A/FAA,G+FAGA,A/FAAA,M+FAM,A/FAA,G+FAG,A/FAA,O+FAOtE,A/FAAA,I+FAI,A/FAA,K+FAK,A/FAA,W+FAW,A/FAA,G+FAGA,A/FAAA,I+FAI,A/FAA,G+FAG,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,E+FAEuE,A/FAAA,U+FAU,A/FAA,I+FAI,A/FAA,Y+FAY,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA;A6IG5K,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A4FcA,ArEHA,AEdA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A/GYA,AGdA,AqHGA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,ANDA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E2CCE,AoHLA,AjEIA,AIFAmI,ACGA0E,AJAA,AMAA,A9GUAna,AkBEA,AVbA,AKFAyV,ACGA0E,AJAA,AMAA,A0CCA,ADYA,A/DXE,ADGFxhB,ADNA,C4DCC,AMCA,C6GRC,ArEtDwP,AC4DxP,AjG5DwP,AC4DxP,AuDEA,A6HCI8zB,CvLQH,CwKfCtzB,AhEKA4Z,A8EEA,A5KFAA,A+CaAiN,A/DXE,C8KPD,AxKeA,CuKjBC7mB,A9DnBAsK,ANyBA,AxFzBAA,ARyBA,AgLGA0E,CZTC,AjEIAoF,AHEA9E,A5FFA8E,AJEA9E,CoKNCmb,ACEA4B,AtExDwP,AM6DxP,AtG7DwP,AQ6DxP,A+CaA,A0HXA,A1LGA7sB,C+GLCkI,A9FAAA,AyKEA,A1LGDvH,EgEQG8kB,C8GpBC,ArEtDwPxe,AhGAAA,CqKsDvP,A9DnBA,A9FAA,AwK4BA,A1LGL,C8KZM,A9DnBAoU,AD0BA,AxGUThU,AWpCSgU,AD0BA,C6JPC,AvKiBD/T,AmLRC4H,A1LGK,C+KVJ,A/GkBA,C+GlBC1O,A/GkBAojB,C+GlBC,AxKeD,AmLRC,C3EFC,A9FAA,AyKEA,CZTC,AvKiBD,AuLRK,ChBTH,ArEtDwP,AC4DxP,AjG5DwP,AC4DxP,AoLGI3nB,CrF/DqP,AC4DxPuU,AjG5DwP,AC4DxPA,CoKNC,A9GoBA,C+CbC,A9FAA,A+CaA,CkDhBC,A9FAA,CyFACoE,AEGA7D,AjGHA6D,AGGA7D,CkGAC,ANHA8C,AHEA,ArFCA,APHAA,AJEA,CwGFCmB,A9FAAA,C0KKK,C3EFHA,AH1BA,ANyBA,ArFCAA,AH1BA,ARyBA,CsGzBCrY,A9FAAA,A4K4BI22B,CjFLH,AEGA,AjGHA,AGGA,C8FAC/uB,A9FAAA,C4FHC,A/FAA,C4FEC,AKCA,ArGDA,AOCA,C8FAC,A9FAA,I+F1BI,A9FAA,A4K4BI,CAAC,C5ELH,AFvBA,A5FuBA,AFvBA,CgGuBCuY,AHGA,A3FHAA,AHGA,CkGAC,A9FAA,C8FAC0E,AJAA/G,A1FAA+G,AJAA/G,C+F1BC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,I6F0BI,A9FAA,C8FAC,A9FAA,eiGHe,AT1DwP,ArF0DxP,AX1DwP,CgGAC,AhGAA,G0G6DrP,A9FAA;AsIA1E,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A4FeAnb,ArEHAkS,AGbA,AKCA,ArHFA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A/GaAA,AIbA,AMCA,A8GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A+DEA,AoHFA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,C8FAC,A/FAA,C4CCC,AoHLA,AjEIA,AIFA0D,ALAA,AJ3D+T,AM8D/TnE,AMAA,A5FYA,AVbA,AKFAmE,ANAA,AL3D+T,AQ8D/TnE,AMAA,AyCaA,A8HXM,A/LHL,EoHCCoD,ATDA,AnGWA,AcVAA,AXDA,ATGI,ADEc,EgLWhB,AFtBA3T,ACEAL,A1DKA+H,AwEEAgoB,ApKUA,AFZAhoB,AyCaA5H,A0HXA,CVaCf,AFtBA,ACEA,AtJiBA+jB,AuCCA,A0HXA,C1E5BC,ANyBA,AKCA,AxGUA,AWpCA,ARyBA,AOCA,AyKEA,A1LEG,C6GPFjnB,AHEAyT,AKCAvL,AjGHAlI,AJEAyT,AOCAvL,AjBIGhE,C8KXF,ACEAssB,A5DKA,A9FAA,A2CaA1uB,AhETG,C2DJF,AoDAA,AMAA,ApGAA,AMAA,CwFAC,A9FAA,AjBIGqC,C2DJF,AwDAAgL,A1FYA,AJZAA,ArBIG,CgLWF,AvJHA0Y,AuCCA,C8GpBC,AnEmBA,AEfA,AgFKA,AtLQA5c,AIEA,AGfA,AkDgBAggB,AhETGhnB,C2GQF,AEfAhE,AlGeA,AGfAA,AdOG,CgLWF,AhLXG,C+KTF,AcOAwzB,AtLQA,AkBEA,CsJjBC3vB,AhEKA,AtFYA,ARZA,A+CaA,C+GlBC,A5DKA,ANHA,ApFeA,AJZA,APHA,AkDgBA0kB,AhETAlkB,CmHJC,ANHAkT,AEGA6G,AtFYA,AJZA,APHA7G,AGGA6G,EyFDE,AnGWA,AGXA,CgGAChK,AhGAAA,AVKJ,E6GPM,A/FAA,AkDgBA,C6ChBC,A/FAA,CoGAC,AHGA,A3FHA,AHGA,C8FAC,A9FAA,A+CaA2W,C0CdC,AmFGA,AnLHA,CwGFCrS,A2EKAqb,AtLQA,AabArb,EsFEE,AhGAA,AsDcA,CAAC,CzDHC1N,GmGXG,AmFGA,AtLQA,AGXA,CiGaC,AQZA,A0EEA6oB,AlLUA,AUZA,C8FAC,A9FAA,CsFYC,ApGFA,AIEA,CJFC,EsLRE,C3ELC,A2EKAG,AzKLA,C8FACpb,A3GaA7O,AabA6O,KuFeKjQ,AhGAAA,IgGAI,AkFVA,AlLUA,EgGAEuB,AkFVA2pB,AtLQA,AIEA3pB,CJFCc,GAAG,CoGEC,AkFVA,AtLQA,AIEA,CkLVC0C,ClFUC,ApGFA,AIEA,EkLVE,CAAC,K3ELK,A9FAA;AuIGxE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A0BDAjE,AKCAyF,ANHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A3GAAzF,AMCAyF,APHA,AqHGA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A+DGA,AoHHA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,EgKgBE6hB,ADpBAL,ApEiBA,AOfAjQ,AT5DiU,AM+DjU,AMAA,A5FYA,AdAA,ASfAA,AX5DiU,AQ+DjU,AMAA,AyCcA,A8HZM,A/LHL9f,E4DCC,A+CDA,AhGAA,ATGI,AyCHJoX,A1CKA9T,CAAC,CgLWC,AFtBAJ,AhEMA,AEzBA,AK0BA2iB,AwEGA,AtLOA,AkBEA,AVbA,AGzBA,AK0BAA,AmKEA,CZTC,AhEMA5b,AKCA,A1FYAsc,AVbAtc,AMCA,A2CcA,A8HZM,CdaL4mB,A7DfA,ATDA,ArFCA,AXDA,CiGaC,AF3EiU,AC8DjUhe,AKCA,ApGYA,AF3EiU,AC8DjUA,AOCA,AgDEA2Y,AjEEA,C2DJC,AmHPA,ArExDiUtb,AhGAAA,CuD6EhUxJ,A/DZIzB,A6LAEyB,CnIFL,AoHLA,AxKeA,AyDIA,AhEVA,A8LFM,CfPLnD,CDFCwoB,ACEA,AtE1DiU,AY+DjU,A5G/DiU,Ac+DjU,CyCcC,A8HZM,A/LHL/rB,C+KNA,ACEA6D,AxKeAyG,AyDIA,AtBfA,AoJGM,A/LHN,C4DCC,AmHPA,ACEA,A1DKAqb,A9FAAA,CyJeC,AFtBA,ACEA,A5DKA,A9FAA,A2CcAjf,A8HZMA,A/LHL,C+KNA,A3DOA,AV/DiU,AhF2EjU,AJZA,AZ/DiU,AuD6EjU,AtBfA,AoJGM,C3EFL2d,A9FAAA,CyFDC,ACCA,AhGDA,AECA,C0FYC,AGbAnN,ArFaA,AdAA,AIbAA,A+KGMwe,CpFHL,AjFaA,AfbA,AuDGAlK,ADYAnoB,C0CfCqQ,AWCA,A3GDAA,AaCA,A0CECsL,ADYD,C2CFCzV,AUZA1E,A1GYA0E,AYZA1E,ChBUC,AyDIA6B,CyC7EkU,AlGyEjU,AEzEiU,AuD6EjU,C8CfC,AOCA,AtGDA,AQCA,CuFDCI,AKCA,AEAA,AtGDAA,AMCA,AEAA,AyCcA,A/DZI,C0GUH,AF3EiUkF,A9F2EjU,AF3EiUA,ARiE7TrG,CkHFHuR,A9FAAA,A4CEC,ADYD,C8HZO,CnFUL,AhGAA,AsDVCJ,A6HAKnX,EpFHJ,AhGAA,CwGFC,AT5DiU,ArF4DjU,AX5DiU,ARiE7T,CkHFH,A9FAA,ApBEI,C6GHH,AKCA,ATDA,A3FAA,AMCA,AXDA,CwGFCoY,AT5DiU1O,AY+DjUyK,AjGHAiE,AX5DiU1O,Ac+DjUyK,AuKEM,ChFHL,A/FAA,CkDGE,A6HAKpN,CAAC,CpFHL,AhGAA,AuDGC,C6HAM,CrFjE4T,AY+DjU,A5G/DiU,Ac+DjU,CuKEO,CrFjE4TnI,AY+DjUmI,A5G/DiUnI,Ac+DjUmI,C8FAC,A9FAA,E8FAE,A9FAA,EkF/DmU,AhGAA,CyG4DhU,AT5DiU,ArF4DjU,AX5DiU,CyG4DhUoZ,A9FAAA,E0FEE,A/FAA,E+FAE,A/FAA,E4FaE,AhGAA,GgGAG9X,AhGAAA,IgGAI,AhGAA,GgGAG,AhGAA,GgGAG,AhGAA,euGfe,A9FAA,oCbaoC,GAAGqC,GAAG,GAAG,GAAG,CAAC;AoJVzI,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AuBYA,AQZA,ANHA,AJ7DwX,A3G8DxX,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A/GaA,AUZA,APHA,AL7DwX,A0HgExX,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,ANDA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,C2FaC,AhGAA,CqKGCqmB,ADpBAX,AjEIA,ArFaA,AVbA,AkDGA/Q,AhEAE,AyCHF3H,CiEaCrN,AhGAAA,AVVE,C0DFD,AmHPA,ApEMA,AKCA8J,AMAA,AwEGA,AtLOA,AGXA,AOCAA,AMAA,AyCcAoW,A/DZE,AyLAF,A1LEA3mB,A8LFQmyB,A/LHR,C8LIC,A7LCA,CgH9BCnX,A6E6BA,A3K7BAA,COsCC,CuJGC,AtEhBA,AWCAjL,A3GDA,AaCAA,AxBDArT,CoHCCukB,ANHA5M,AHEA/E,ArFCA2R,APHA5M,AJEA/E,AuDGA,AjEEA,C2DJC,AqHeAie,AhEzCA,AD0BA,A7F1BA,AD0BA,AgDEAlS,ADYA,CgDxCCV,AD0BAxW,AtFYAhB,APtCAwX,AD0BAxW,A+CcA4iB,A/DZEhpB,AyCHF,CiBCC,AoHLA,ApEiBA,AlFAA,AdAA,AVVE,ADEF,C+KTC4B,ApEiBA,AkFTA+H,AlLSA,A+BbAsD,CqIJC,A9GOA,AhEAC,A6LAO,CzEFP,A5FYA,AFZA,A0CEA,A6HAQ7H,CfPP7C,AtJiBA,AqKVQ,CfPP,AeOQ,CnIFP,AoHLA,A1DKA6C,AwEGA,ApKSAA,AFZAA,AuKEQiwB,A/LHR,CsHCC,A5FYA,AFZA,CsKGC,AnJJA,CAAC,A3CAA,CiLgBC,AnElBA/e,AQGA+N,A5FYA,AXfA/N,ASGA+N,C4FACnB,ANHApV,AHEA,AjFaA,AJZAoV,APHApV,AJEA,AoLGQ,C3EFPlE,ATDAyI,ArFCAzI,AXDAyI,AsDeA,A8HZQijB,C9E5BP,AD0BA,AtFYA,APtCA,AD0BA,AgDEAhd,ADYAlT,AjEfA,CoHCC,ANHA,AGvBA,AD0BA,A1FAA,APHA,AIvBA,AD0BA,A+CcA,AjEfA3H,CiHzBC8O,AvFsCAnH,APtCAmH,CiG0BCsD,ANHA,ApFeA,AJZAA,APHA,AmDKA,ADYA4Y,CqDdC,A9FAA,C8FACpqB,A5FYA,AFZAA,A0CEA,EkDFE,A9FAA,A2CcA,AjEfA,CiEeCA,AjEfAM,CoHCC,AH1BA,AvFsCA,AJZA,AH1BA,CwFyBC,AjFaAumB,AfbA,CsGzBC1Y,AD0BA,AMAA,AnG1BAA,AD0BA,AMAA,CmBDC,CgEAC,AKCAuP,ArGDA,AOCAA,CoGAC,A9FAA,AyCcA,CqDdC,A9FAA,AyCcA,C8HZS,C9E5BP,AvFsCA,APtCA,C8FAC,ANyBA,AjFaA3W,APtCA,ARyBA,AXAA,C0BaC,AqKVQzG,CrKUP,CsFZC,A9FAA,C8FAC,A9FAA,CQYC,CAAC,KqKVa;AnCF9D,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AuBYAsU,AOfA,AT7DA,A3G8DA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A/GaAA,ASfA,AX7DA,A0HgEA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,C0BAC,CsIgBCsc,AFtBA,ACEA,AjEIA,AKCA,ANHA,ApFgBA,AVdA,AMCA,APHA,AgLKQ,EnIFN,AqD1BA,APtCAtgB,AC+DA,AKCAuD,AMAA,A9GUAjK,AWpCA,ATtCA0G,AC+DA,AOCAuD,AMAA,A0CEAwX,ADaA,A/DbI,AyLAJ,A1LEAjoB,ADLG,CiHzBF,A9FAA,AlB8BA,C+KTC2sB,A5DKAvL,A0EGA,AxKHAA,C2F1BC3W,A9FAAA,CyC0BC,AwDAA,ATDA,AWCAgL,AhGAA,AXDA,AaCAA,AyCeAyR,A/DbI,C4GLHnrB,AHEAyT,AjFcA8T,AXhBAvnB,AJEAyT,AsDgBA,AhEXA,C2DJC,AoDAA,A9FAA,C8JLC,A5DKA,AJAAnL,A1FAA,AJAAA,AyKEAuK,A3LHGhS,CiLgBF,AvE/EA,AhGAA,AuD+EA+pB,AhEXA,CgH9BC,A9FAA,C8JyCC6G,ADpBA9E,A/DrBA,A9FAA,AwK4BA,C/EUC,AQZA,ANHA,AJ7DAxd,AYgEA,A5FaA,AdDA,AUZA,APHA,AL7DAA,AcgEA,A0CEA,C8GPC,ApEiBA,AQZAmW,ANHA7M,AlGeA,AUZA6M,APHA7M,AmDKA,ADaA,C+GpBCgX,A9GOA,ADaAxoB,CqDfCK,A9FAAA,A0CEA,CoDFC,A9FAA,CyCeC,C+GpBC,A/GoBAwjB,AjEhBG,CgLJFtmB,AtE3DA,AYgEA,A5GhEA,AcgEA,CwJLC,AtE3DA,AC+DA,AWCA,A9GUA,AE1EA,AC+DA,AaCA,CyJeC,ADpBA,AlEEA,AHEAgQ,A5FFA,AJEAA,CmGFCxE,AEGA,AjGHAA,AGGA,C8FAC,AxGUA/E,AUVA,C+CeC,C6ClBC,A/FAA,C+FAC,AtGaA,AObA,AkDkBA2f,CCbC,CkDFC,AVhEA,ApFgEA,AZhEA,CgGAC,AC+DA,AjG/DA,AC+DA,CmGFC5a,AEGA,AjGHAA,AGGA,A+CeA,CAACoa,C0ChBC,AKCA/L,ArGDA,AOCAA,C4FHC,A/FAA,E6FeE,AhGAA,CqDGC,C2CHC,ADbA,A/FaA,ADbA,AsDgBA,E+CfE,A9FAA,C8FAC,A9FAA,K4FHKlG,A/FAAA,E6FeEvP,AhGAAA,IgGAI,AhGAA,EgGAEiN,AhGAAA,KkGfK,A/FAA,G6FeG,AhGAA,EgGAEY,AhGAAA,MgGAM,AhGAA,EgGAE,AhGAA;AgJZ1E,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A8BHA,ALAA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AjGcA,ALhBA,ANAA,AqHGA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,A8KGI,CrKWH,AqKXI,CnIFH,AqHeAib,AFtBA,ACEA,ApEiBA,AGbA,AKCArM,AH1BA,APtCArlB,AlG0EA,AIEA,AIbA,AMCAqlB,AH1BA,ATtCArlB,AiLkEA,AIAI,A/LHD,C4DCF,AqD1BA,A9FAA,CgGuBC2gB,ACGA,ATDA,AKCAjM,AMAA,AjGHAiM,ACGA,AXDA,AOCAjM,AMAA,AyCeA,AhEVA,CmHLC6Q,A9FAAA,C0JLC5Y,AcQA,A5HDA+K,AhEAM,C8KPL,CtE3DC,AC+DA,AjG/DA,AC+DA,AsDgBA0T,AhEVAtnB,C8KZCgqB,ApEMAra,AhGAAA,AsDgBA,AhEVA,C+KVCtP,AhEKA,A8EGAmD,A5KHA,C8JLC,AtE3DA6J,AMgEA7I,AMAA6d,AwEGA,ApLnEAhV,AQgEA7I,AMAA6d,AvBKApiB,C+KVCyqB,A/GoBArD,AhEVA,CgEUC,CgHAC,AFtBA,AeUA,A5HDA,AjEGAnnB,C8KZCF,AeUA,A5HDA,AjEGA,CgLUC4tB,AFtBA,ACEA,CAACjtB,A7DEA,ACGA,A/FHA,ACGA,CyJPCN,ACEA,CDFC,ACEA,AtE3DA,AoFmEA5D,ApLnEA,AwDkEA,C6GTC,A3DOA,AVhEAP,AYgEA,AhGAA,AZhEAA,AcgEA,C8FAC0U,A9FAAA,A0CEA8F,EyCHE,AhGAA,CgGAC7G,AhGAAA,AuDGA,CkDFC,AJAA,A8EGA,AxKHA,AJAA,AgDEA,CwClEC,AMgEA,AtGhEA,AQgEA,CoGAC,AwEGA,AtKHA,E8FAEO,A9FAAA,MwFAM,A9FAA,CyFDC,AWCA,A3GDA,AaCA,CwFACoK,A9FAAA,CoGAC5E,A9FAAA,CmFDC,AhGAA,KgGAK,AhGAA,C2GCC,A9FAA,CwFAC,A9FAA,C8FAC,AMAA,ApGAA,AMAA,U8FAU3N,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA;AoIA9D,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A4FeA,AFtBA,A5DIA,ALAA,AGvBA,APtCA,A3G8DA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHWA,AkBIAgb,ALjBA,ANAA,AIvBA,ATtCA,A0HgEA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,ANDA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,CgKgBC,AzKLA,CoDVC,AoHLA,ApEiBA,AGbAjc,AKCA,ATDA,AnGWA,AIEA,AIbAA,AMCA,AXDA,AgLGA,A3LHE,EmHFAkV,ALAAtH,AJ7DAtH,AMgEA,A3FHA4O,ANAAtH,AL7DAtH,AQgEA,AgDEA,ADcA,AhEVA,CiEJC,C8GPCS,ApEiBA6E,AQZAvD,AEAA,A1GYAuD,AUZAvD,AEAA,A0CEA,AhEAM,AyLANA,CXPC,C5DKC,AJAAuB,A8EGA,ApKWA,AJdA,AJAAA,AyKEA,A1LIAvQ,CyBQCuD,AuCEA,AhEVA,C+KXC3D,A1DKA,A9FAA,AmKEA,CXPC,A5DKAshB,AEAAxZ,AhGAAwZ,AEAAxZ,CoCAC,AoHLA2jB,AjEIA,A/FAA,CoGCC,AVhEA,ApFgEA,AZhEA,AuDgFA9H,A/DdM7hB,C0DFL,AmDDA,AKCAkU,AJAA,A8EGAlO,A9KJA,AMCAkO,AJAA,A+CgBA,AhEVA,C6GTC,AEGAwE,AjGHA,AGGAA,AjBMA,C2GMC,AF5EApP,AYgEA,A1GYA,AF5EAA,AcgEA,CwJLC,A/GqBA,AhEVA,C+KXCyhB,AlEEAzhB,AEGA,AMAAtD,A5FcA,AXjBAsD,AGGA,AMAAtD,AyCgBA,C8CjBC,A+EIA,ApKWA+b,AVfA,CgGCClT,A9FAAA,A+CgBAgT,CmDhBC,A9FAA,A2CgBA,E+GrBE,AtE3DA,AYgEA,A5GhEA,AcgEA,CwJLC,AtE3DA,AhGAA,AuDgFAa,C+GpBnBmH,AlECoB,A/FAA,C+FAC,AEGA,AMAA3jB,A5FcA,AXjBA,AGGA,AMAAA,CwFACwS,A9FAAA,EoGAE,A5FcA,AFdA,CkFhEC,AMgEA,AtGhEA,AQgEA,C8JJnB,AtE5DoB,AMgEAjW,AtGhEA,AQgEAA,AhBEM,C8KNzB,A9KM0BjC,E+DcJ,E+GpBlBsmB,A/GoBoBjF,A/DdM,CiHLL,A9FAA,A4CmBA,A/DdM,C8KNzB,CAACqC,A/GoBoB,EvCFE,AuCEA,A/DdM,E8KNxB,A9KM0BxjB,C8KNzB,CAACooB,AhEIoB,A9FAA,C8FAC,A9FAA,E8JJlB,CAAChiB,A9KM0B,C8KNzB,A9KM0B,C8KNzB,CAACwhB,ElECsB,AEGA,AjGHA,AGGA,C8JJnB,AlECoB,A/FAA,CiKDnB1pB,AhEIoBwZ,A9FAAA,C8JJnB,CAAC,CAAC,CAClC0R,IhEG2D,A9FAA,C8FAC,A9FAA,E8JHrD,CAAC,CAAC,CACThB,GAAG,CAAC2B,CAAC,CAACd,KAAK,CAACoB,KAAK,CAAC,CAAClB,MAAM,CAAC5rB,CAAC,CAAC6qB,GAAG,CAAChiB,CAAC,CAAC,CAACwhB,GAAG,CAAC1pB,CAAC,CAAC,CAAC,CAACkrB,OAAO,CAAC,CAAC,CAAC,CACrDxB,GAAG,CAAC3pB,CAAC,CAAC,CACN2pB,GAAG,CAAC1pB,CAAC,CAAC;ApBAX,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A0FNA,A5DGA,ALAA,AGvBA,ANyBA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHYA2F,AadA,ANAA,AIvBA,ARyBA,AyHCA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,A8KGI,EfFF,ApEaA,AGdAW,AKCA,AVhEAsG,AhF8EA,AdDA,AIdAtG,AMCA,AZhEAsG,AwDkEA,AlEHCvQ,CkEGA,CNFC,AuDHAb,ALAAkR,AGvBAsO,AD0BA/K,A3FHAzU,ANAAkR,AIvBAsO,AD0BA/K,AhBEI,AyLAJmd,C5EHC,A/FAA,AkDGA,AhEAI,C0GWH,AQbA1e,AEAA,AwEGA,AlLUA,AUbAA,AEAA,AyCgBAiY,A/DdI,ADIJtnB,C8GPC,A/FAA,AiDiBA,AhEVA,CkHTC,ACGA,A1FcA,ALjBA,ACGA,CyJNCgqB,ACMAjc,AtEhEA,AhGAA,CkDgEC,AoHAA,AhEAA,AMAA9F,ApGAA,AMAAA,AyCgBA6e,AhEVA7mB,C+KNCwrB,AhEAAjnB,A9FAAA,AjBMA,C2DNC,AkDHA,AJ7DA8I,AlG2EA,AkBGArL,AXjBA,AL7DAqL,CkG6ECyE,AQbA,AEAA,A9GWAxL,AIEAwL,AUbA,AEAA,AtBEI3T,C6KRH4rB,ACMA,A/GgBA,A/DdI,ADIJ9pB,C8KZCF,ACMAA,AlEHAqL,AQGAsX,AvGHAtX,ASGAsX,A0CEAvkB,ADcA+E,A0HdA,A1LIA,ADPCnG,C+KLA,ACMA,AjEDAiK,A/FAAA,AkDGA,AhEAG,AyLAHuf,A3LHA,C4DCC,AoHAA,A5DAA,A5GWA,AkBGA,AJdA,CyJNCnmB,ArJoBA,AwCZA,ADcA,AhEVAF,ADPC,C+KLA,AhEKA8G,AKCA,ApGDAA,AMCA,A2CgBAqgB,AhEVA,C8GPA,AvGYC,AQZD,AiDiBC,A0HdA,A1LIA,C8KZC,AnEmBA,AF7EA,A9F6EA,AF7EA,ATsEA,C+KNC,AjEDA,ADFA,AJ7DA/Z,A1F+DA,ADFA,AL7DAA,AuDgFAuZ,A0HdA,CXFC,AlEHA,AQGA,AvGHA,ASGA,C8FAChb,A9FAAA,CwFAC,A9FAA,C0FaC,AKvCA,AD0BA,ApGaA,AOvCA,AD0BA,A+CgBA,CAACya,EgD1CE3gB,APtCA,AvFsCAA,ATtCA,EsGgEE,AMAA,ApGAA,AMAA,C8FACrD,A9GWD,AgBXCA,AyCgBA,A0HdA0F,C3EFCiS,A9FAAA,A+CgBA,C2CHC,AhGAA,CqGvCC,A9FAA,AwK4BA,C1E5BC7S,AK0BA,AnG1BAA,AK0BA,C8FAC,A9FAA,AmKEAunB,C/EWC1c,AhGAAA,I+KXI,EAAE,EjKYE,CsFdC,AtFcA,ARdA,C0FaC,AIbA,ApGaA,AMbA,C0FaCH,AEhBA,AlGgBAA,AGhBA,C+FAC,AGvBA,AlGuBA,AIvBA,C8FAC,A9FAA,MyFuCM,AhGAA,EgGAE,AhGAA,IqGvCI,A9FAA,C8FAC,A9FAA,CyFuCC,AKvCA,ArGuCA,AOvCA,CyFuCC,AKvCA,ArGuCA,AOvCA,EyFuCE,AhGAA;AgJbpE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A2FAA,A7DHA1G,AFvBA,APtCA,AC+DA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AjGeA,ALjBAA,AFvBA,ATtCA,AC+DA,AyHCA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AFAA,ACCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,A8KGI2nB,CrKYH,CqJpBChzB,AjEGAmT,AtGeA,AOfAA,CgKHC,CnHMC,AgDaAP,AGdA,AKCA,AH1BAgJ,APtCApO,AMgEAoD,ApGaAgC,AIdA,AMCA,AH1BAgJ,ATtCApO,AQgEAoD,AgDEAwX,AvBHAhU,A1COA,A8LJI,A/LHJ,CCOC,A8LJIlJ,ChBRHlL,AzDMA,AwEGA,AtLSA,AgBZA,AyCgBA,A/DdM,AyLAN,CZRC,A5DGA,A9FAA,C0JHC+qB,A5DGA,A9FAA,ArBEA9tB,C2GAC2S,AhGAAA,CiDCC,A8ChEA,AMgEA,AMAAQ,A9GYA,AE5EA,AQgEA,AMAAA,AmKEAnI,AhJHA,CoEAC,AKCA,AJAAzD,AxGYAgC,AQbA,AMCA,AJAAhC,A+CgBA,AhEVA,C2DNC,C8ChEC+I,AhGAAA,AiLkEA,AhJHAlC,CiEcC,AhGAA,CmKnBC,AhEKA,AKCA,ApGDA,AMCA,A4CEA,ADcAkc,A0HdA,CZRC,AhEKA5X,AKCAjL,ApGDAiL,AMCAjL,A4CEA,ADcA,C8GtBC,AnEmBA,AUbA,A1GaA,AYbA,A0CEA,CNFC,AuDHA,ALAA,AtGeA,AafA,ANAA,AmDKA,AlEHA,CmHFC,AGGA,AjGHA,AGGA,AyCgBA,CkDnBCyU,ACGA,AVhEA,AC+DAvJ,AtFFAuJ,ACGA,AZhEA,AC+DAvJ,AsDiBA,AtBjBA,CyECC,ANHAvC,AHEA4C,ArFCA,APHA5C,AJEA4C,AgCAA,AoJGI,A/LHJ,CiEiBCsX,A8HdI,CvLUH/qB,AyDIA,CyChFC+Q,AhGAAA,CiG+DC,AKCA,ArGDA,AOCA,AlBDA,CgHCC,A9FAA,A+CgBA2Z,AjEjBArrB,C2GACoM,AhGAAA,CwGFC,ACGA,A/FHA,ACGA,CwFHC,A/FAA,AgLKI,CnFWH,AGdA,AIFAmM,ACGA,ANHAjB,AHEA,A/FcA,AIdA,AKFAiB,ACGA,APHAjB,AJEA,AuDGA,ADcA,CyChFC,AhGAA,AqLkEK4J,CrFlEJvP,AC+DA,AnGaA,AE5EAA,AC+DA,AsDiBA+Z,AjEjBA,CgHCC,A9FAA,A+CgBA,AjEjBAtqB,C+GAC,AKCA+X,ApGDA,AMCAA,C0FACkF,A9FAAA,A+CgBA,CkDnBC,A3GgB9B,AahB8B,A0KKK,C5ELJ,A9FAA,A4CmBAmN,C8CjBC,AL/DA,A1F+DA,AN/DA,AuDgFA,C8CjBC1X,A/FAAA,AiDiBA4X,CgD1CC,AzGuC9B,AWvC8B,A8C0CA,A8HdK,CvLWlC/gB,AyDG8B,CyChFC,AhGAA,CuGsCCZ,A9FAAA,AnByBA,EiEiBE0hB,C6CnBC,A/FAA,AkDmBA,CAACC,CzDH7B,AyDG8B,AtBjBA,CsEzBC,AD0BA,A7F1BA,AD0BA,A+CgBA,AtBjBA,CsEzBC1L,AD0BA,A7F1BAA,AD0BA,CwFhEC,AhGAA,EqG+DE,AvGc9BjW,AQd8B,C+FAC4Q,A/FAAA,CoGCC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,Cda7B,CAACnP,GuGdiC,A/FAA,C+FAC,AEzBA,AjGyBA,AGzBA,C4FyBC,A/FAA,CiGzBCqT,A9FAAA,QXuCtB,CAAC,IAAI,CAAC,CAAClU,MyGvCoC,A9FAA,CXuC7B,EyGvCgC,AzGuC9B,AWvC8B;AyI0B1F,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A2FCA,A7DJA,ALAA,AJ7DA,A3G8DA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AjGgBArH,ALlBA,ANAA,AL7DA,A0HgEA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,ADCA,AGDA,AjBAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E8JLEkB,AhEKA,AKCA,AH1BA,ANyBA4P,A3FAA,AMCA,AH1BA,ARyBAA,AoLGM,ChBRL,CnHMC,AgDaA8B,AOhBApB,ALAAkE,AEGAjE,A8EGA,AtLUA,AIAAmB,AShBApB,ANAAkE,AGGAjE,A+CgBA,AjEjBG,E+KLDvQ,A9DpBAuQ,ANyBA,AWCA+R,A5FeA,APzCA/R,ARyBA,AaCA+R,A0CEA/O,AhEAM,ADIN,A8LJK7W,ChBRJ,ApEKA2H,AjFgBAtF,AfhBAsF,CiDCC,AmHNAqmB,AvKmBA,AmLXA,CXDC8B,AtEjEApf,AlG6EAjH,AE7EAiH,CkDgEC,AoDAA,A9FAA,CyFDC,AKCAjJ,ArGDA,AOCAA,AlBDGvH,C4GcF,AKvCA2T,ANyBA,A/FcA,AOvCAA,ARyBA,AVOAnQ,CgHhCA,A9FAA,CmG0BE,A5FeA,AFfA,A0CEA,C6GRC,AnEmBAsR,AKvCA,AK0BAjG,A1GaAiG,AOvCA,AK0BAjG,A0CEA1N,AyHAAiR,CZRC,AvKmBA,A0DXA,A6HAK,ChBRJ,ArJqBA4T,AwCbA,AyHAA,CxELC,ALAA,AzFAA,ANAA,A4KKAhb,CXDC4kB,AtEjEApf,AC+DA,AnGcA7H,AE7EA6H,AC+DA,AVOA,C+KLCvN,AtEjEAwN,AhGAAA,AqLkEGzQ,CfDF,A7DJA2X,ALAAvJ,AHEApD,AtFFA2M,ANAAvJ,AJEApD,AgLGA,A3LHG,CsHCF,A9FAA,AmKEA,A1LIAxH,C+KLCE,ApEYA,AF7EA,AYgEA4B,A1GaA,AF7EA,AcgEAA,AvBMA7B,C+KLC,ApEYAX,ADdA,A/FcAA,ADdA,AVOA,CyGtECwF,AC+DA,AKCA,AxGaA,AkBEA,AhB/EAA,AC+DA,AOCA,C8JCC,AhEDA,AxGaA+B,AUbA,AjBMA3G,CqHNC,A9FAA,AvBMA,C6GTC,AQGA,AvGHA,ASGA,CsFHC,A/FAA,AdSAC,CAAC,A8LJG,CnFWF,AF7EA,A9F6EA,AF7EA,CkG6EC,AOhBA,A3GgBA,AIAA,AShBA,A0KKG,C5ELF+P,AT7DAhD,AlG6EA,AahBAgD,AX7DAhD,CsGgEC,A9FAA,CjBMC,C+GNCwM,A9FAAA,CVaC,CAAC,CoGAC,AF7EA,A9F6EA,AF7EA,CoG6DC,A/FAA,C6FgBC,AEhBA,AJ7DA,A9F6EA,AGhBA,AL7DA,CoG6DC/I,A/FAAA,C6FgBC,AhGAA,CgGAC,AIbA,ApGaA,AMbA,C8FAC,A9FAA,EiGHE,ALAA,AzFAA,ANAA;A6IG/C,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A0BDA,AIFA,AREA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A3GAA,AKFA,AVEA,AyHCA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,ALAA,AGDA,AjBAA,ACAA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,C8FAC,A/FAA,C4CCC,AoHCA,ApEYA,AGdA,AKCAmQ,ANHAzM,AJ7DA5Y,AoFmEA,AlLUA,AIdA,AMCAqlB,APHAzM,AL7DA5Y,AV+DG,C4DCF,AgDaA,AhGAA,CuGhBC4gB,ACGA,AH1BA,AD0BAlM,AxGaA,AahBAkM,ACGA,AH1BA,AD0BAlM,AgDEA,ADeAyW,A8HfQtqB,C3EFP2kB,A9FAAA,A4CEA,ADeA,C+GhBCxhB,A1DDA0T,A9FAAA,A0CEA,ADeAtJ,A/DfM,AyLAN,CXDC,CAACwgB,AtEjEA,AlG6EA,AE7EA,ATsEA,C2GOC,AF7EAlnB,AlG6EA6C,AIAA,AF7EA7C,CsGgEC,A9FAA,A+CiBA,CgD3CC,AD0BAY,A7F1BA,AD0BAA,A+CiBAuiB,C+GhBC,A/KKAnmB,C+KLC,A/GgBA,A/DfMmB,ADIN,C+KLC,A1DDA,A9FAA,AuKEQ,CfDP,A5DDA,AH1BA,AK0BAgG,AhGAA,AH1BA,AK0BAA,AyCiBAkf,CkDpBC,AFvBAhM,A5FuBA,AFvBAA,AlBgCA,CAAC,A8LJMsY,C3EFL,AVhEA,ApFgEA,AZhEA,CsKiEC,A7DJA,AT7DAjpB,ArF6DA,AX7DAA,ATsEA1J,C+KLC,A7DJA,AGGA,AjGHA,AGGA,AvBMA,CqHNC,A9GaA,AgBbA,CwJCC,A5DDA,ANHA,AxFGA,APHA,AkDoBA,CgD3CC,APtCA,AvFsCA,ATtCA,AuDiFA,CgD3CC,APtCA2B,AlG6EA,AWvCA,ATtCAA,ATsEA,C6GTCsS,AEGA,AxGaA,AOhBAA,AGGA,AjBMA,A8LJM,C/EFL,A9FAA,A6KEMrV,C5ELL,A9FAA,CqF7DC,AhGAA,CyG6DC,AT7DAkO,ArF6DA,AX7DAA,EsGgEE,A9FAA,AhBEM,CwGlEL,AhGAA,ARkEMnL,C8GFLgX,A9FAAA,CwFhEChU,AhGAAA,EyG6DE,A9FAA,AnBKM,CAAC,CiHLL,AHGA,A3FHA,AHGA,C4FHC,AEGA,AjGHA,AGGA,C4FHCuP,AJ7DA,A3F6DAA,AL7DA,CRkEO,CwGlELnH,AhGAAA,CRkEOlL,C6LAC,CAAC1F,E5ELJ,A9FAA,CqF7DC,AhGAA,CyG6DC,AT7DA,ArF6DA,AX7DA,ARkEM,CAAC,K6LAK,C5ELL,A9FAA,C0KKO,C5ELL,A9FAA,C0KKO,CjFLL,A/FAA,AgLKM,M5ELA,A9FAA,C8FAC,A9FAA;AuIGnE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A0BDA6I,AIFA,AT7DA,AC+DA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A3GAAA,AKFA,AX7DA,AC+DA,AyHCA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,ADCA,AGDA,AjBAA,ACAA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E2CCE,AmHNA,A3DMA2b,ANHAxM,AGvBA,AzGuCA,AcbAwM,APHAxM,AIvBA,A+C4BA,AlEHC,CiHzBA,A9FAA,A+C4BA,C8GFqB,ApEapBnC,AQbA,AJAAhC,AMAA,A1GaAgC,AUbA,AJAAhC,AMAA,A0CEA,ADeAqW,A/DfI,A6LAIuM,C3EFPvd,AEAA,AhGAAA,AEAA,CuFDC,AOCA,AtGDA,AQCA,AmKEA2Y,C/HFC,AmDDA7nB,A/FAAA,CfOC,C2DNC,AuDHApC,AREAgM,AtFFAhM,AVEAgM,CqKCqB,AhEApB,A9FAA,C8FACnM,A9FAAA,A+CiBA,A0HfA,CvEFC,A9FAA,AqKEA8F,A1LIA1J,A8LJQ,C9LIP,C+KNqBqB,ApEapB,AhGAA,CwGbC,A9FAA,A2CiBAilB,A8HfQqM,CJAP,A1LIA,C2GOC,AhGAA,A+KXAxkB,A1LIA,E+KNsB,A5DApB,A9FAA,A2CiBA,AhEXAnO,C+KNqB,AWEpB,A1LIA,C8GPC,A/FAA,C+FACoT,A/FAAA,A2KGArG,ChFHCgD,AhGAAA,AoLGQ,C5ELPhM,AREAiM,AtFFAjM,AVEAiM,AVOA,A8LJQ7P,C5ELPgI,AHGA,A3FHAA,AHGA,AjBMA,C2GOC,AIbA,ApGaA,AMbA,E6FDE,ADFA,A9FEA,ADFA,A4KKA,C5EHCnF,A/FAAA,A2KGA,ChFHC,AhGAA,CmGFCiR,A/FAAA,CoGAC,AREA5M,AtFFA,AVEAA,CqKCqB,AhEApB,A9FAA,C8JAqB,A7DHpB8U,A9FAAA,CsFEC,AKCAzC,ArGDA,AOCAA,EyFDE,AhGAA,CoGAC,A/FAA,CmGFC,A9FAA,C0FEC,A/FAA,CmGFC0C,A9FAAA,C2FGC,A9FAA,CiGHC,AHGA,A3FHA,AHGA,EiGHE,ALAA,AzFAA,ANAA,C+FACjI,A/FAAA,EgLKU,CAAChY,OhFHD,A/FAA,E+FAE,A/FAA,C+KGS,EAAEE,UAAU,CjFLP,A/FAA,AgLKQ;AnCFhF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AqBhEAkC,A3G8DA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AjH/DAA,A0HgEA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A+DGA,AoHHA,AGAA,ADAA,A5ICA,AEHA,ACGA,ALAA,AGDA,AjBAA,ACAA,ACAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E8JLE,ACKsD,ApEctD,AGdA,AIFA,ACGA,ANHA6V,AGvBA9G,ANyBA,AWCA,AwEGA,AtLWA,AIDA,AIdA,AKFA,ACGA,APHA8G,AIvBA9G,ARyBA,AaCA,AyCiBA,A/DfE,AFHDhR,CsHCA,A9FAA,CoCAC,AoDAA0T,AMAA,ApGAAA,AMAA,AuKEQ9U,EhBRNkE,A3DMAiO,AH1BA,APtCA,AlG8EA,AcdAA,AH1BA,ATtCA,AiLkEAoB,CZRC,ArE1DAjQ,AlG8EAsH,AE9EAtH,CqK0DC,A9DpBA,A9FAA,AwK4BA,A1LIA,C8KZC,AYQA,C/HFC,AmHNA,A3DMA,AJAA,A1FAA,AJAA,C8FACoF,A9FAAA,C0CAC,A3DMA5D,A8LJQ,ChBRP,AYQA,A1LIA,CmHNC,AVhEA,ApFgEA,AZhEA,CiLkECmO,AIAQ5T,C9LIP,C2DNC,AmHNA,A9DpBA+S,APtCA,AvFsCAA,ATtCA,ATsEA,ADPChR,CoHCA,A9FAA,AqKEA,A3LHClB,C+KLA,AYQA,AIAQ,CvLYP,APRA,A8LJQ4C,C9E5BPsP,A9FAAA,AlBgCA,CgHhCA,A9FAA,C2FuBE,AtGiBA,AOjBA,AdSA,CgHhCC,A9FAA,AnByBC,CgHCA,A9FAA,C4FHC2G,AEGA,AjGHAA,AGGA,AlBDC,CQeA,CAACnO,EkG9EE,AhGAA,ATsEAhG,CAAC,E+GNE,A9FAA,CjBMC,C+GNC6Z,A9FAAA,AjBMA5Z,CAAC,A8LJQ,CAAC6yB,E9LIN9yB,C6GTC,A/FAA,AdSA,C6GTCsU,AtGiBA,AOjBAA,C2F7DC,AMgEA,AtGhEA,AQgEA,C8FAC,A9FAA,CjBMC,COQCxY,APRA,A8LJQ,CAAC,E9LINoE,CAAC,KOQK,QsGjBQ,A/FAA;A6IG9D,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AtFFA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHeA,A4HdA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A+DGAzB,AhEGA,AoLNA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,ADCA,AGDA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,CTeC,CwKfC,ApEeA,AGfA,AIFA,ALAA8V,AJ7DA,AC+DA,AKCA,AMAA,AwEGA,AlLWA,AIfA,AKFA,ANAAA,AL7DA,AC+DA,AOCA,AMAA,AyCkBA,C+ClBC,A9FAA,C0CAC,AmHPiBjV,A3DOjB,AH1BA,A3F0BA,AH1BA,AwK4BA,AhJHA9D,AoJGQy3B,A/LHN,C+KNgB,AYSjB,CXHCzzB,ApEeA2S,AhGAAA,AsDZA,AyHAA,CXHC,A9GGAzT,C6GTkB,ACMjBqsB,A/DzBAnc,A9FAAA,AlBgCA,ADPE,C+KNgB,AnEqBjB,AUdAmT,AwEGAkN,AlLWA,AYdAlN,AyCkBAsE,AjEnBElrB,C4DCD,AmHPiB,ApIMjB,CoINkB,ACMjB,AtE/DA+R,AhGAAA,AuDkFA,CLlBC,AmHPiB7K,ACMjBpC,A/KOAC,C+KPC,A/DzBA,A9FAA,AwByBAyK,A1COA,C+KPC,A9GGA,ClEHG,CiHzBD,AK0BA,AnG1BA,AK0BA,AvBMA,ADPElO,CsHCDylB,A9FAAA,A0CEA,AjEIA,C2DNC,AmHPiB,ACMjB,CDNkB5iB,ACMjB,CDNkB,A9DnBjB,A9FAA,AwByBA,A1COA,C8KbkB,ACMjB,AtE/DA4N,AoFmEA,ApLnEAA,AiC+DA,A1COA,CyGtEA,AoFmECshB,ApLnED,AqLkES,CzEFP,A9FAA,AvBMA,A8LJQpzB,CjFLP,AJ7DA,AYgEAsb,AvGHA,AL7DA,AcgEAA,GsFHGvC,AgFMA,A/KNAA,AmDKA+R,CoDFC,AwEGAmJ,AtKHA,C8FAC,A9FAA,CvBMCpvB,CAAC,A8LJQ,A/LHN,E+LGQwyB,CpJHP,A3CAAn3B,CkEGC,AvBHA,CAACE,CmJIC,A5HDA2qB,C4HCC,E9LJE,C8GFC,A/FAA,AmDKA,C4CLC5R,A/FAAA,A4BEA,AoJGQ,C7HAPwP,A6HAQ,U7HAE,EAAEC,MAAM,EAAEjB,C4CLC,A/FAA,KmDKK,EAAE7P,QAAQ,EAAE;A0FFjF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A2BAA,AMAA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FIA,AhEHA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AzGCA,AMAA,A4GAA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A8DmBA,A/DbA,AoLNA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AEAA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E8JPwC,AnEuBtC,AGhBA,AIFA,ALAAsB,AHEA,A/FgBA,AIhBA,AKFA,ANAAA,AJEA,AuDGA,A6HAU,EnIFR,AoHFmB,A5DEnB,AH1BA,APtCA5I,ApFgEA,AH1BA,ATtCAA,ARqEA5J,AyLHA,AhJHA2R,A3CAG,E4GgBD/B,AOlBA,AvGkBAA,ASlBA,A6CKA,ENFE,AwDAA,A9FAA,ArBMA,CmHNC7O,A9FAAA,ApBKA,C0DLC,AoHFmB,ChLCf,CEMF,ADCA7C,CkHTCmI,ACGA,A/FHAA,ACGA,A4CEA0a,AjEIA,C+KRoBxhB,ApEiBnB,AQfAgM,AxGeA,AUfAA,ApBKA,C0GUCnJ,AhGAAA,AZhBG,CCOF,ADPGjJ,C2CAF,A1COA,CmHNC,A9FAA,C0JFoB,ApEiBnB,AQfA,AVhEA,A9F+EA,AUfA,AZhEA,AwDkEA,C8GJoB,A7DDnB,AT7DA,ArF6DA,AX7DA,AiC+DA,A1COA,C2GSC,AOlBA8I,AvGkBA,ASlBAA,AsBEA,A1COA,C6GTC,A/FAA,AfEG,CCOF,ADPGxH,C0G/DF,AhGAA,AwDkEA,C4CLC0X,A/FAAA,C2F7DCjH,AhGAAA,EiC+DE0G,E1COE5T,CAAC,C2GSC,AhGAA,CoKjBoB,ApEiBnB,AhGAA,CoKjBoB,A9GInB,AvBHA,A1COA,C2GSC,AhGAA,AXTAC,CkHTC,AT7DA,ArF6DA,AX7DA,AwDkEA,AjEIA,CyGtEC,AhGAA,CV+DI,C8GFF,A/FAA,A4BEA,A1COAD,C6GTCwU,A/FAAA,AdSA,CkHTC,A9FAA,IpBSI,CAAC,GAAG,C0CPC,A1COA,CkHTC,A9FAA,E8FAE,A9FAA,AsBEAZ,A1COA1T,CAAC,CAAC,GAAG,C0CPC,A1COA,CkHTCmI,ALAA,AzFAAA,ANAA,E4BEE,KwEFK,A9FAA,C8FACpE,A9FAAA,CsBEC4P,MAAM,KAAK,GwEFG,A9FAA,C8FACwI,A9FAAA,K8FAK,A9FAA,E8FAEC,A9FAAA,AsBEA,EwEFE,A9FAA,C8FAC,A9FAA,AsBEAzI,MAAM,GAAG,OAAOtE,IAAI,KAAK,WAAW,GAAGA,IAAI,GAAG,CAAC,CAAC,EAAEuE,UAAU,IAAI,YAAY,CAAC,CAAC;AiHC5K,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A2BAArV,AMAAA,AvHFA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FKA,AhEJA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHeA,AUdAA,AMAAA,A4GAA,AQAA,ALAA,AEAA,ANAA,AcAA,ApJAA,A8BDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,A8DoBAA,A/DdA,AoLNA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AEAA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E2CCE,AmHRA,ACKqD,AjEErD6H,AKCAqI,ANHA8F,AHEA,A3FAAnO,AMCAqI,APHA8F,AJEA,AgLGA,AIAU,A/LHP,C4DCF,CgDeC,AQfA,AH1BA,APtCA,A9F+EA,AUfA,AH1BA,ATtCA,AwDkEAvB,AhEGAjR,CkHLCqF,A9FAAA,CyJRC3H,A/DQA,AMAA,ApGAA,AMAA,AyCmBA,C8G3BC,A3DQA,AJAAjB,AMAAA,AhGAA,AJAAA,AMAAA,AyCmBAA,A8HjBU,ChBVT,A3DQA,AVhEA,ApFgEA,AZhEA,ATsEA,C8KdC,ArExDAyO,AoFoEAuiB,ApLpEAviB,AiC+DA4G,CoIPC,CgBUWjR,ChFHT,A/FAA,AkDGA,AhEGA,A6LHU,ChBVT,ArExDA,AoFoEA4sB,ApLpEA,CqG+DC,ACCA,AMAA,AwEICloB,A9KLD,AECA,AMAA,AyCmBA,CCjBCub,AhEGA,ADCA/iB,A8LJU,CrFlET,AhGAA,ATsEA,A8LJU,ChBVT,A/DQAsZ,AMAA0I,ApGAA1I,AMAA0I,AyCmBAiE,C8HjBWnjB,ChBVT,AhEOA,A/FAA,A+KGU,CrFlET,AMgEA,AtGhEA,AQgEA,AhBKA,C4LDE,A5HFD,C6HAWgvB,CDER,A7HeD,C6CtBC,A/FAA,CuGGC,A9FAA,EsFHE3d,A/FAAA,C4BECJ,CAACf,GoJGa,CAACjX,CpJHT,EAAE,GoJGa,EjFLR,A/FAA,AgLKU+G,CjFLT2R,A/FAAA,AgLKU,EAAE,EAAE,kBjFLQ,A/FAA;A6IGhE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A2FHA,AjLCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHeA,A4HdA,AQAA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,ADMA,AoLNA,AGAA,ADAA,A5ICA,AEHA,ACGA,AFDA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E2CCE,AmDDAlO,AIFA,ACGA,ANHAmO,AHEA,AmFKA/W,A9KLA4I,AKFA,ACGA,APHAmO,AJEA,AgLGA,AhJHA,A3CAGhY,E+KRgBiD,AnEwBjBwS,AKzCA,APtCA,A9F+EAA,AOzCA,ATtCA,AwDkEA4Q,AhEGA7gB,A6LHY4vB,ChBXM,AhEQjB,A/FAA,CoGCC7Q,A9FAAA,AqKEAiN,A1LIA,C2GSC,AGhBA,AnGgBA,AIhBA,AfOA,C8KfkB,A3DSjB,AH1BA7mB,APtCA,ApFgEA,AH1BAA,ATtCA,CqKuDkB,ArEvDjB+F,AoFoEA,ApLpEAA,AiC+DA5R,CoIRkB,AnEwBjB,AkFXAoC,AlLWA,AsDbA,C6GXkB,A3DSjB,A9FAA,AqKEA,CZXkByE,C9DjBhB,APtCA,AoFoEA,A3K9BA,ATtCA,AwDkEAvG,C4HEE,AHFDuxB,AIAY,C3EFX,A9FAA,AqBDA,AoJGYvqB,CnFaX,AGhBAyD,AKCAuI,AH1BA,APtCA,A9F+EA,AIhBAvI,AMCAuI,AH1BA,ATtCA,ARqEA,AyCNArT,AoJGY,A/LHTiB,C4GgBF2F,AhGAAA,AmLbY,A/LHV,C+KRgB,AgBWL0wB,CnIFX,AmHTiBpzB,AhEQjB4G,A/FAAA,AhBAG,C+KRe,AhEQlB,AEzBC,APtCA,A1F+DD,AGzBC,ATtCA,AiC+DA,CiBCC,AmHTiB,A9DjBjB4T,A9FAAA,AwByBAnH,CoEAC,A/FAA,AkDGA,C0CaC,AhGAA,AmLbY,CnFaX5O,AhGAAA,AmLbY4uB,CDEXzvB,AHFA,CAACuiB,AhJHA,CsEzBC,A9FAA,AwByBA,CiEgBC,AElBA,AGvBA,ArGyCA,AGlBA,AIvBA,EyFyCE,AQfA,AxGeA,AUfA,AqKEA,C7ELC3R,A/FAAA,A4KKA,CGEE,ClFWA,AhGAA,CgGAC,AhGAA,CgGAC9R,AhGAAA,MgGAM,AhGAA,AmLbY,CnFaX6P,AhGAAA,CkLXC1K,CCFanL,CjFLX,A/FAA,C+FACqY,A/FAAA,I+KOK,ElFWC,AkFXA,AlLWA,CkLXC,ClFWC,AhGAA,AmLbY,GnFaT,AhGAA,CgGAC,AhGAA,CgGACrS,AhGAAA,MgGAM,AhGAA,CgGAC+O,AhGAAA,KgGAK,AhGAA,CgGACC,AElBA,AlGkBAA,AGlBA,Q6FkBQ,AhGAA,EgGAE,AhGAA,MgGAM,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA;AgJf1F,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A2FFA5S,AjLAA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FKA,AhEJA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHeAmH,A4HdA,AQAA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,ADMA,AoLNA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AEAA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E8JTwC,AnEyBtC,AOlBA,ACGAqb,ANHAtM,AlGkBA,ASlBA,ACGAsM,APHAtM,AmDKA,AyHAAuZ,AIAY,CnFaX,AhGAA,CgDfC,AmDDA,AKCA,AH1BA,APtCA,A1F+DA,AMCA,AH1BA,ATtCA,ARqEA/rB,AFNI,CoHCHuN,A9FAAA,C0JFC,A/KSA,C+KTChR,AWIA,C1E5BC2I,APtCA,AvFsCAA,ATtCA,AiLkEAuC,A3LHIjO,C4GgBH,AF/EAI,A9F+EA,AF/EAA,CkDgEC,CmDDC,A/FAA,C4CCC,AwDAA,A5GcA,AcdA,AqKEA,A1LKAkE,CgHjCC,AzGwCAiD,AWxCA,AwK4BAmL,A1LKA,C+KTC,A9KOA,C6GNC,AKCA,AVhEA,A1F+DA,AMCA,AZhEA,CqG+DCY,A/FAAA,A2KGA,A1LKAxP,C2DPC,AoHFA2rB,A9KOA,ADEA,CgHjCC,APtCA,AvFsCA,ATtCA,ARqEA,AyLHAne,CjFlEC,AhGAA,ARqEA,CkHLC,A9FAA,ArBOA,ADRI,E8GFF,AGvBA,AzGwCA,AOjBA,AIvBA,C6JwBC,AxKgBApG,APPA,ADRI,CiHzBH,A9FAA,AwK4BA,C7ELCsN,A/FAAA,A4KKA,C1LKC1U,CAAC,ADRI,CAACtE,E+GAF,A/FAA,C+FACY,A/FAAA,AfQA,CAAC,EDRM,CCQH4D,ADRIhE,CCQH,C8GRC,A/FAA,AfQA,COOC,CsGjBC,A/FAA,C+FACgZ,A/FAAA,AdUAlV,COOC,APPA,GAAGE,CAAC,EDRM,CCQHF,CAAC,COOCoH,EPPElH,CAAC,O6GVO,A/FAA,KPiBKkH,CAACC,CAAC,EAAE;AoJdrE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AyBHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FMA,AhELA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A5GFA,AqHGA,AQAA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,ADOA,AoLPA,AGAA,ADAA,A5ICA,AEHA,ACGA,AJDA,AEAA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,A8KGY,CAAC,ChBXX,AhEQA,AIFA,ACGA,AVhEA,AC+DA,AnGeA,AQfA,AKFA,ACGA,AZhEA,AC+DA,AuDIAic,AyHDA,AIAY,EnIFV,AgDeA,AElBA9S,AlGkBA,AGlBAA,AfEO,E+KRLqa,A3DSArJ,AH1BA,ANyBA9Q,AnGeA,AcdA8Q,AH1BA,ARyBA9Q,AVQA,E2GQEjJ,AQfA,AxGeAA,AUfA,A4CGA,CkDHCyV,A0EKAgT,AxKLAhT,ApBMAva,AyLJAiM,AhJHA2F,CiBCC,CmHTC,A7GYA+O,AlEJOpnB,C4DCN,AgDeA,ADhBA,A/FgBA,ADhBA,AgLGA,A1LKAqE,CgHjCCgK,AzGwCAlD,AWxCAkD,AlBiCA,C8KhBC1K,AecAqwB,AtLSA,CuKvBC,AnEwBA7d,ADhBA5B,AmFMC1I,AlLUDsK,ADhBA5B,CoKRCnU,A9KgBA,CiEJC,AjEIA,C6GVC,A/FAA,CPiBC,CoDdC,AqD1BA,A9FAA,AlBiCA0D,CmHPC,ANHAyU,AGvBAhK,ANyBA,ArFCA,APHAgK,AIvBAhK,ARyBA,AuDIA,AjEIA,C8KhBC,ApEQA4E,AmFMC,AnLNDA,AgCAAkF,CiEgBC,AhGAA,A+BhBAxI,A3CAO,C4GgBNpH,AkFVC,AlLUDA,AVTAhC,ADCAnC,C8KhBCN,A3DSAshB,A9FAAA,ApBMD,ADCC,C8KhBC,ApIQA,CoIRCllB,A3DSA,AH1BA,AzGwCA,AcdA,AH1BA,A+C6BA,AhEGA,C0GSC,AQfAA,AH1BAsL,ArGyCA,AUfAtL,AH1BAsL,AwByBA,EiEgBE,AhGAA,CJDCP,CsGjBC,AtGiBA,AOjBA,CgKNC,AnEwBA,AElBAmJ,AGvBA,ArGyCA,AGlBAA,AIvBA,CyFyCC,AQfA,AH1BA,ArGyCA,AUfA,AH1BA,CXwCC,CuKvBC,ApEQA,AnGeA,AGfA,CoKRC,AnEwBA,AQfAgR,AxGeA,AUfAA,E8FAE,A9FAA,C8FACzO,A5GcAhN,AcdAgN,OsFeO,AElBA,AlGkBA,AGlBA,G6FkBG,AhGAA,CJDC,CAAC1L,C4GdC,A5GcA,AcdA,CdcC,C4GdC,A9FAA,CdcC,IoGCI,AhGAA;AgJf5D,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,A0BDA,ADFA6D,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A3GAA,ADFAA,AqHGA,AQAA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,ADAA,AIDA,A1KAA,AmLAA,AGAA,ADAA,AGGA,A/IFA,AEHA,ACGA,AFDA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,A8KGA,ChFHC,A/FAA,C+JRC,AhEQA,AIFA,AT7DAuB,AC+DA,AmFMAvO,A9KNA,AKFA,AX7DAuO,AC+DA,AuDIA,AhEGE,AyCPF,A3CAO,E4DCL,AgDeAiG,AQfA,AH1BA,AzGwCA,AICAA,AUfA,AH1BA,E4JiBEzF,ApEQA0D,AhGAAA,AuDIAgX,AhEGE,ADEF9nB,C2GOC,AElBA,AlGkBA,AGlBA,AbSE2C,ADEF,C2DRC,AwDAA,ANHA,AxFGA,APHA,CgKNC,A3DSAkb,A0EKA,AxKLAA,AqBDA3hB,CiBCC,AgDeA,AkFVAoC,AtLSA,AICA,AsDZA,AjEKAmC,E8KjBE,ApEQA,AhGAA,CoKPR,AeaS,A5HFAknB,CkDHC,AVhEA,AoFqEC,AtLSDvgB,AcdA,AZhEA,C0GgECua,AVhEA/T,AC+DAgD,ArFCA+Q,AZhEA/T,AC+DAgD,ATOE,AyCPF,CAAC+D,CoIPR,A3DQS,A9FAA,ArBQA,C2GOC,AQfAzB,ANHA,AlGkBA,AUfAA,APHA,AdWAxS,C8KhBRsqB,AnEuBSjoB,AElBA,AlGkBAA,AGlBA,AbSE,ADEF,C6GXCyQ,A/FAAA,AbSE5Q,CyGPD,AhGAA,AVSAjC,C0GTCgP,AhGAAA,AuDIA,AjEKA,CiELC8T,C6GXR,AvKsBS,AmCfA,A1CSArjB,C2GOC,AF/EA,AoFqEA6D,AtLSA,AICA,AF/EA,AiC+DAiI,A1CSA,C8KhBR,AnEuBSpH,AhGAAA,C8F/EC,AhGAA,CoG6DC,AJ7DA,A3F6DA,AL7DA,AiC+DA,A1CSA,CiELC,AvBJA,A1CSA,C8KhBR,AnEuBS,AElBAsP,AlGkBA,AGlBAA,AmDMAyD,CkDHC,A9FAA,CyJRR7X,AnEuBS,AQfA,A0EKC,AlLUD,AUfA,ApBME,ADEF,C8KhBR,ApIOSkM,A1CSA,C8KhBRzP,A7KcW,ADEF,E6GXE,AHEA,A5FFA,AJEA,AgCAA,CiEgBC,AElBA,AlGkBA,AGlBA,C6FkBC,AhGAA,CgGACsG,AhGAAA,CmKvBR,CAC5B,A7GUsC,CAAC,C4HECmF,A5HFA,CAAC,C0CYC,AhGAA,CgGACN,AhGAAA,E+BhBEyM,EiEgBE,AkFVC,AlLUD,EgGAE,AkFVA,AlLUA,CkLVC,ElFUE,AhGAA,CgGAC,AhGAA,CgGACtR,AhGAAA,I+BhBI,EiEgBE,AhGAA,CgGAC6P,AhGAAA,UgGAU,AhGAA,EgGAE,AhGAA,GgGAG,AhGAA,CgGAC,AhGAA,CgGAC7P,AhGAAA,MgGAM,AhGAA,CgGAC+O,AhGAAA,KgGAK,AhGAA,CgGACC,AhGAAA,QgGAQ,AhGAA,EgGAE,ApGDA,AICA,GJDGvK,CAAC,EoGCE,AhGAA,CgGAC,ApGDA,AICA,CgGAC,AhGAA,EJDE,CAAC;AoJdnH,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,AJAA,AHCA,AyBHA,A/GCA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FMA,AhELA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A5GFA,AqHGA,AQAA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,AEGA,A/IFA,AEHA,ACGA,AJDA,AEAA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,A8KGI,EnIFF,AmHPA4F,AnEsBA,AOlBA,ACGA,ATDA,AnGeA,AICA,ASlBA,ACGA,AXDA,AuDKA,AlELC,C4DCA,CqD1BC,APtCAvD,AvFsCA,ATtCAA,ARsEI,C6KbH,C5DIC,AREAgH,AtFFA,AVEAA,AuDKA,AjEIA5Q,CkHXC8I,AT7DA,ArF6DAA,AX7DA,AwDoEA+e,AjEIA,C8KfC1a,A9DnBA,A9FAA,C2FuBCkI,AJ7DA,A3F6DAA,AL7DA,AiLkEAkZ,C1LMC/tB,C8KfC,A7GWA,C6GXCsC,AjEIAuS,AGvBA,ANyBA,A5FFAA,AIvBA,ARyBA,CmGFA,AGvBCwF,AlGuBD,AIvBCA,CgGuBC,A9FAA,C8FACtU,ALAA,AJ7DA,ArF6DAA,ANAA,AL7DA,AwDoEA,C4CPC,AHEAqK,A5FFA,AJEAA,CVSC,C8KfC,A9KeAnQ,C8KfCV,A9DnBA,A9FAA,AlBkCA,C8KfC,A9DnBA,A9FAA,ClBkCCW,C8KfC,A5DIA,AFvBA,ANyBA,AtFFA,AFvBA,ARyBA,AuDKA2T,AjEIA,C8KfC,ApEMAvD,AhGAAA,AgLGAyd,CAAEzf,A1LMD3O,CAAC,CkHXC,A9FAA,ApBWA,C8KfC,A5DIA2I,A9FAAA,AsKKC,CzHEA,C6GXC1I,A7GWAqK,AyHFCiD,CZTA,CAAClR,G5DIG,AREA,AtFFA,AVEA,CwGFC+J,A9FAAA,AsKKC,CzHEA,C6GXC,AYSCggB,CZTA,ApEMA1V,AhGAAA,EoKNEzQ,CAAC,A7GWA,AyHFC,CZTA,A5DIA,A9FAA,C8FAC0c,A9FAAA,AsKKC,ChFHA,AhGAA,IwGFI,AREAjM,AtFFA,AVEAA,CwGFC,A9FAA,E8FAE/H,A9FAAA,A6COA,EAAE,CyCLC,AhGAA,CgGACgI,AhGAAA,GwGFG,A9FAA,C8FAC3M,A9FAAA,E8FAE,A9FAA,C8FAC2Y,A9FAAA,IsFEI,AhGAA,CwGFC,A9FAA,CsFECnM,AhGAAA,CwGFCoM,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,CsFEC,AhGAA,CgGAC5N,AhGAAA,GwGFG,A9FAA,I8FAI9L,AREA,AtFFAA,AVEA,CgGAC2E,AhGAAA,GgGAG,AhGAA,CwGFC,AREA,AtFFA,AVEA,CwGFCgK,AREA,AtFFAA,AVEA,KgGAKrB,AhGAAA,EwGFE,A9FAA,C8FAC7H,A9FAAA,GsFEG,AhGAA,CgGACrE,AhGAAA,GwGFG,A9FAA,C8FAC8B,AREA,AtFFAA,AVEA,CgGAC,AhGAA,MwGFM,A9FAA,C8FACuW,AREA,AtFFAA,AVEA,EgGAE9U,AhGAAA,GwGFG,AREA,AtFFA,AVEA,CwGFC,AREA,AtFFA,AVEA,CwGFC,A9FAA,E8FAEc,A9FAAA,O8FAO,A9FAA,C8FACvC,A9FAAA,O8FAO,A9FAA,C8FACuW,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FACpU,A9FAAA,O8FAO,A9FAA,C8FACqU,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAKjU,A9FAAA,O8FAO,A9FAA,C8FACvC,A9FAAA,O8FAO,A9FAA,C8FACuW,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FACC,A9FAAA,E8FAE,A9FAA,E8FAEjU,A9FAAA,O8FAO,A9FAA,C8FACvC,A9FAAA,O8FAO,A9FAA,C8FACuW,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AuIGtN,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,A0BDA,AIFA,ACGA,ANHA,AHEA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FOA,AhENA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A3GAA,AKFA,ACGA,APHA,AJEA,AyHCA,AQAA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,A8KGIkW,EnIFF,AmHPA,AnEuBApgB,ApGFA,AIEAA,AVVE,AyLJF,A3LHCxV,E0G/DCgJ,AhGAAA,AwDoEA+hB,A6HFI,CnFcH,AhGAA,AmLdIld,C9E5BH,AzGwCA,AWxCA,AwK4BA,A1LMAhL,COMCwG,APNA,E8KfExK,AnEuBA,AEnBA+X,AJ7DA,AoFsEAqc,AlLUA,AGnBArc,AL7DA,CTwECxT,CyGxEC,AhGAA,EuGsCEiK,A9FAAA,AwK4BAiD,C/HFC,CmHPC,AeaA2iB,A5HFA,CNJC,AmHPAn0B,AeaC+L,A5HFD,CAAC,AjEIA,CiEJC,AjEIAxH,C0LNC,A1LMA,C8KfC,A9DnBA,APtCA+C,AlG8EA,AWxCA,ATtCAA,CqKyDC2J,A9DnBAzC,A9FAAA,AlBkCAhK,A8LNI,CjFLHsT,A/FAAA,AdWA,A8LNI,A/LHH5W,C8GFA4R,AgFSC,AtLQDzH,AOjBAyH,AfEC3R,C+KNA,ArEzDAmG,AlG8EA,AE9EAA,AiLkEA,A1LMArD,C8KfC,ArEzDA2N,AoFsEC,ApLtEDA,ATwEA,CyGxEC,AhGAA,CkGgFC,AhGAA,CgGAChL,AK1CA,APtCA,A9FgFAA,AO1CA,ATtCA,ATwEA,ADTC,CiHzBAmY,A9FAAA,AlBkCA,A8LNI,CjFLH,A/FAA,AmDOA,AlELC,C+LGK6B,CjFLJnM,A/FAAA,AdWA,CAAC,C2GQC,AhGAA,AXRA,C2GQC,AhGAA,A+KdA,CIAM,CJAJ,C7ELC,A/FAA,E+FAEoC,A/FAAA,AgLKK,EnFcHL,AhGAAA,GqG1CG,A9FAA,C8FACnW,A9FAAA,EyF0CE,AEnBA,AlGmBA,AGnBA,C6FmBC,AhGAA,CkGnBC,A/FAA,KkGvBK,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AyI0B/D,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,A0FPA,AhEMA,AIFA,ACGA,ATDA2C,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A3GAA,AKFA,ACGA,AXDAA,AyHCA,AQAA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AJDA,AEAA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E2FiBE,AEnBA6U,AgFSA3V,AtLQA,AIEA,AGnBA2V,AbSErR,A6LJI,EnIFJ,AqD1BA,A9FAA,AwK4BAgL,A1LMA,ADTA,E0G/DE,AC+DA,AjG/DA,AC+DA,AuDKA,A6HFK5Q,CpFHJqC,AhGAAA,CmGFC,A/FAA,AfED,C4GiBEyT,AGjBA0G,AIFA8C,ACGA8E,A0EMA,AtLQA,AIEAtO,AIjBA0G,AKFA8C,ACGA8E,CsCAC,A8ChEAnT,AoFsEA1P,ApLtEA0P,AwDoEA0I,AhEEE,AyLJF,C7ELC1C,A/FAAA,C6CGC,AgDgBA,AhGAA,CkLVC,AtLQA,A0DVA,AhEEE,AyLJF,C5EHCuF,AJAA,AmFOC,A9KPDA,ALAA,AgLGA,C5EHA,AL/DC,A1F+DD,AN/DC,CqLkEM,CnIFJ,AmDDA,ADFA,AHEA,A3FAA,ADFA,AJEA,CyGCC4H,AVhEA,ApFgEAA,AZhEA,ARsEE,CkHNDlS,A9FAAA,CyKEIhS,CjFLFoO,A/FAAA,CoGACgR,A9FAAA,C8FACpN,A9FAAA,EyKSEhL,C1ENC,A9FAA,E8FAE,ANHA,AxFGA,APHA,C+FAC,A/FAA,CoGAC,A9FAA,A0KKG,E5ELD2M,A2ESC,AzKTDA,A0KKG,M5ELG,A9FAA,E8FAEoC,A9FAAA,IyKSI9K,GhFTG,A/FAA,CoGAC,ALAA,AzFAA,ANAA,EoGAE,A9FAA,CyKSE,EAAC,CAAC;AlCNtD,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,A0FNA,AnEsBA,A7GlBA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FOA,AhENA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHeA,AIEA,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,C2FiBC,ApGFA,AIEA,CmGjBC,AIFA8L,ACGA,ANHA/E,AHEAG,A3FAA,AKFA4E,ACGA,APHA/E,AJEAG,ATOE,AyLJF,C/EcCtI,AhGAAA,CgDhBC,AqD1BA,A9FAA,AlBmCA,A8LPQ7J,E3EFN,A9FAA,A4CIA,AhEEE2F,AFPJ,EmHFI,ACGA,AH1BA,APtCAqL,ArF6DA,ACGA,AH1BA,ATtCAA,CqK0DCsc,AjEGA,AHEA,A5FFA,AJEA,CiDCC,AMIA,AjEKA1pB,ADVFtD,CmHFGyW,AREA5E,AtFFA4E,AVEA5E,CiDCC,AgDgBA,AQhBA,ANHAH,AGvBA,APtCA,A9FgFA,AUhBA,APHAA,AIvBA,ATtCA,CkGgFC,AK1CAgM,ArG0CA,AO1CAA,AnByBF,C0G/DGlN,AhGAAA,AqLkEQ,ChBRPwc,ArE1DA,AhGAA,ATyEA,C8KfCzpB,A/KKFtD,C+KLG,A5DGA,A9FAA,A0KKM+1B,CpFHL,AhGAA,ATOE,ADGDzyB,C8KfAH,AjEGA,A/FAA,AbSElE,ADGD,C2DTA,AmHNA,A9DpBA,A9FAA,CgGuBC4O,AFvBA,A5FuBAA,AFvBA,C4JoBC4a,A9DpBAxW,A9FAAA,C2FuBC,A/FAA,AdYE,CmHTD0R,ANHA,AxFGAA,APHA,AfEF,C8GFG,A/FAA,AbSE,A6LJI,A/LHR7jB,C+KLG,AgBQMwC,C7LIH,C6KZDgoB,A5DGA,A9FAA,C8FAC,A9FAA,CrBED,CiHzBG,A9FAA,AnByBFrqB,C+KLG,C3DMC,AH1BA,A3F0BA,AH1BA,C4JoBC,A3DMA,A9FAA,E8FAE,A9FAA,ItBDE,CAAC,CAAC,CoHCG,A9FAA,CyKEO,A/LHR,C+LGSR,A/LHR,CAAC,CmHFG,ACGAkkB,A/FHA,ACGAA,C6FHC,A9FAA,ArBEF,EAAE,CAAC,I+LGY,C3EFL,A9FAA,C8FAClS,A9FAAA,AyKEM,EAAE,CAAC,I3EFF,A9FAA,C8FAC,A9FAA;AsIAjE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBAoC,A7GlBA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6FQA,AhEPA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AnHgBA,AICAA,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AJDA,AEAA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E8JLEvQ,AhEKA,AIFAmO,ACGA+E,ATDA7D,A3FAA,AKFAlB,ACGA+E,AXDA7D,AgLGA,CZRC,CnHMC,A1DMIzN,AyCPJkS,AoJGQ8d,EhBRNx2B,AhEKA,AEzBA,AjGyBA,AGzBA,AwK4BA,A1LOA,ADVF,C2LGGA,C/HFC,AwDAA,AVhEAgS,ApFgEA,AZhEAA,AwDoEAwI,CiDPC,ACGAnU,A0EOAutB,AtLQAroB,AalBA,ACGAlF,ApBMI,C0DNH,AmDDA,A/FAA,AhBAF7E,C+GAGiS,AJAA,A3FAAA,ALAA,AuDKA,C6GVC,A5DGAV,AT7DA,ArF6DAA,AX7DA,ARsEIrM,ADGJtH,A8LPQ,ChBRPa,A3DMA,ATDAgU,ArFCA,AXDAA,AgLGA,AIAQsjB,C3EFP,AVhEA,ApFgEA,AZhEA,AwDoEA3d,AyHFAnB,C/EcC,AhGAA,A+BjBA,A1CUA,ADVF,C4GiBG,AhGAA,CmKtBC,CAAC7T,A3DMA,A9FAA,A4CIA,AvBLAuK,A1CUArN,A8LPQ,A/LHVR,C+KLG,A5DGA,A2EUAsyB,AzKVA,A6COAlJ,A6HFQ3pB,ChBRP8tB,A3DMA9b,A0EOCA,AxKPDA,EqFDE,AhGAA,AgLGA,A1LOA,CkHZC,A9FAA,AsKKAF,A1LOAxO,CkHZC,A9FAA,AnBSI,C6GPH,AIFA,A3GkBAkH,AQhBA,AKFA,AnBSI1E,AyCPJ,CoEACsN,AvGgBA3I,AQhBA2I,A2KGA,AhJHA,A3CAF,C+KLG,A3DMA,A0EOC,AxKPD,A4CIA,AyHFA,A3LHF/S,C+KLG,A3DMA,A9FAA,ArBSA,C8KfC,AeaC,A5HHDupB,AjEKA/lB,A8LPQ,ChBRP,AvKqBA,APNA,C8GVC,A/FAA,AdOI,AyLJJ,CnLaC,ANTI4B,A6LJIzF,A/LHV,C+GAG,A/FAA,AkDKA,AyHFA8R,A1LOA,ADVFtR,EkEKIgnB,CyHFC,A1LOA,CCHK,ADGJ,CCHK,ADGJroB,I8LPY,A/LHV,C4GiBG,AhGAA,AZjBF,CAAC,C4GiBG,AhGAA,AsDZA,CjEKC,ADVF,CkEKGsoB,AjEKA,ADVF,C2LGGpQ,A3LHF,CCUG,CAAC,ADVF,EAAE,CkEKG,AlELF,C2LGG,AhJHA,CuBKCmP,AyHFAjP,AhJHA,MuBKM,CAAC,GyHFG,CAAC,EAAE,E/EcE,AhGAA,CgGAC,AhGAA;AgJhBvE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBAnD,A7GlBA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A/GiBAA,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AJAA8S,AEDA,AjBAA,AEAA,ACAA,ACAA,AEAA,AoBCA,ArCDA,E2CCE,AmHNA,A3DMA,ANHA,AHEAxT,AmFQA,AtLQA,AcfA,APHA,AJEAA,ATOE,C0DND,A1DME,CyLJD,AhJFA,AoJEQ6iB,CpJFP3Q,CoINC/hB,A3DMA,AH1BA,APtCA,AlG+EA4G,AcfA,AH1BA,ATtCA,AwDoEA,AjEKA,ADVF,C+KLG,A3DMA8Z,AVhEA,ApFgEAA,AZhEA,AwDoEA,C6GVC/kB,A7GUA,ChEEG,CMSD,AmLbA,A3LHFkB,CQgBG+I,CuLbS,CpJFP,A1CSApL,C8KfC,AYQAwL,AhJFA0M,A3CDF,C4GiBG,AhGAA,AsDZApV,A6HFQm1B,CnFcP,ADjBA,A/FiBA,ADjBA,AuDKA,AjEKA,C8KfC5yB,A9KeAlE,ADVFe,C+KLG,ApEKAmT,AhGAAA,AuDKA,C6GVCgZ,G3DMG,A9FAA,AqBAA,CgJEC,A1LOA,A8LPQ,CvLaP,AmLbA,AhJFAvV,AoJEQrT,C3EFP,A9FAA,AtBDF,CAACzD,ECUI,C8KfC,AvKqBAd,APNA,C8KfC,ApIMA,CoINC,ApIMA,A3CDF,CCUG,ADVFiB,C+KLG,E9KeE,GOMG,APNAnC,EOOlC,CPPqC,ADVF,CAAC,CAAC,C4GiBG,AhGAA,AXPAA,CDVD,C4GiBG,AhGAA,AZjBF,CQiBjCgL,APPoC,ADVF,C+LGW,CAACvJ,A/LHV,EAAE,CAAC,I4GiBM+H,AhGAAA,GJAjC,AuLd4C,CnFcP,ApGApC6B,AIAoC,CmLdS1J,CnFcP,AhGAA,S+KdS,AIAQ,CJAP,AIAQ,OvLcrC;AoJhB3C,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AsBDA,A5GDA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AhHAA,AiICA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AJCA,AEFA,AjBAA,AGAA,ACAA,AEAA,AoBCA,ArCDA,C0FAC,AhGAA,CiDCC,AgDgBA,AGjBA,AIFA,ALAA,AgFUA,AtLSA,AIAA,AIjBA,AKFA,ANAA,A4KKA,EZRE,A3DMAqkB,A9FAAA,ApBMIze,ADGJ,A8LPQ/G,C9LOP,CgHnCC,APtCA,AoFuEAmT,A3KjCA,ATtCA,AVgEF,E+KNIgc,A7GUA,C0CYC,ApGAAvjB,AIAA,A+BfA4N,C+DjEC,AhGAA,AVgEF1X,E2CCI0X,AoJCQ,ChBRP,AeaA,AtLSA,AmCfD,C+DjEE,AlGgFA5O,AEhFA,ARsEI,C0GUH,AFhFAjK,A9FgFA,AFhFAA,AwDoEAmX,AvBHA,AoJCQzY,ChBRPe,ApIOA,CmJMC+S,A5LDI,C0GUHnK,AQhBA,AxGgBAA,AUhBA,ApBMI,C0DNH,A1DMI,A6LJI,C3EFPwc,A9FAAA,AyKEQ1iB,A/LFV,C4DAG,A8ChEA,AhGAA,CqK0DC,AnEsBA,AhGAA,CmKtBCyP,A7GUA,AlEJF9Q,C0GhEG,AoFuEA,ApLvEA,AwDoEAa,C0CYC,AFhFA,AoFuEAmyB,AlLSA,AFhFA,AwDoEA,CAAC,AlEJF,C0GhEG,AlGgFA,AEhFA,CqK0DC,CAAC5vB,A/KMF,C+KNG,CAACgpB,ArE1DA,AhGAA,CgGAC7b,AhGAAA,AVgEF,EoHAI,A9FAA,C8FACxE,A0EOA,AxKPAA,CoFhEC,AhGAA,AqLkEQ,CrFlEP4E,AhGAAA,AqLkEQslB,E3EFN,A0EOAvkB,AxKPA,C8FAC,A9FAA,CyJNC,ArE1DA,AhGAA,CqK0DC,CAAC,C3DMC,AVhEAjB,ApFgEA,AZhEAA,C0GgEC,A9FAA,AyKEQ,ChBRPlN,AeaA,ACLQ,ChBRP,AeaAyvB,CfbC9zB,CrE1DC,AhGAA,CgGAC,AhGAA,GkGgFG,AhGAA,CmKtBC,CAAC,ArE1DA,AhGAA,EoLuEE,CAACA,CpFvEC,AhGAA,CgGACoR,AhGAAA,IgGAI,AoFuEA,ApLvEA,GgGAGG,AoFuEA,ApLvEAA,CoLuEC,EAAE,EpFvEE,AhGAA;AkJgExE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBA,A7GlBA,AwDCA,AfCA,A2IDA,ADAA,AUCA,AtHAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AnHiBA,AIAA,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AJEA,AEHA,AjBAA,AGAA,ACAA,AEAA,AoBCA,ArCDA,C2FiBC,AhGAA,CgGAC,AGjBA,AIFA,ALAA,AlGmBA,AIjBA,AKFA,ANAA,AbSE,AyLHFogB,E/HHE,AmHNAttB,A3DMA8gB,A0EOA,AxKPAA,ArBUA,A8LRQ+R,ChBRP,C9DpBC,APtCA,AvFsCA,ATtCA,AwDoEA,AlEJF,E+KNIz3B,CpIQC+X,CiBFC,A8ChEA,AhGAA,AVgEFpW,C0GhEGiQ,AoFuEAmB,ApLvEAnB,AT0EC,C2DVA,EmHNE,AYSA,CZTC/K,ArE1DA,AhGAA,AiLmEA4K,A1LOA9M,E2DVE,AwDAA,A9FAA,CoFhECmN,AoFuEA,ApLvEAA,C0GgEC,A0EOAuiB,AxKPA,CrBUC,C8KhBC,AYSA,A1LOAvwB,C8KhBC,ApIQAiU,A1CQA,A8LRQ,A/LFV,C+KNGgX,ArE1DA,AhGAA,AiLmEAlc,AhJDAE,A1CQC,A8LROnT,C3EFP,A9FAA,CtBAD4B,C2LGG,A1LOAmD,C0LPCpE,CZTC,CeaC,CfbCqE,ApIQA,A3CFF,C+KNG,A9KgBA,A8LRQ,ChBRP,ApIQA8P,A1CQA3Q,C8KhBC,AYSA,A1LOA,A8LRQkzB,A/LFV,C2LGG,A1LOC,EDVD,CCUGtyB,C0CRC,EAAE,E1CQE,A8LRQ,C9LQPX,A8LRQ,C9LQP,CAAE,EAAC;A2JV/C,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBAmR,A7GlBA,AwDCA,AfCA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AnHkBA/K,AIDA+K,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AGAA,ACAA,AEAA,AoBCA,ArCDA,E8JLE,AhEKAxP,AIFA,ALAA,AgFUA,A9KRAA,AKFA,ANAA,AbSE,AyLFF,AhJFAmS,A1CQA,A8LRU,EnIFR,AwDAAyN,A9FAAA,E2F1BE,APtCA,AvFsCA,ATtCA,AwDoEA7N,AhEEElR,AyLFF8jB,A3LJF,E0GhEI,AhGAA,AiCkEA,CoEHC,A/FAA,C4CCC,AmDDApjB,A/FAAA,A2KKA,A3LJFtF,CEMK,AyCJFkW,CiBFC,A8ChEA,AlGiFA,AEjFA,ARsEEvX,C+GhCD,APtCAA,AlGiFAmH,AW3CA,ATtCAnH,CwDoEC,C0CYC,AhGAA,AsDZA,AyHAAD,C/EYC,AQhBA,AxGgBA,AUhBA,C2F1BCkO,A9FAAA,AwB4BA,CoEHC,AKCA,ApGDA,AMCA,ApBME,C6GPD8O,AL/DA,A1F+DAA,AN/DA,AwDoEA,CNJC,A1DME,CgEFD9C,AvBFArL,A3CFF,CQiBG,C4GjBC,A5GiBA1D,AcjBA,C2F1BC,A9FAA,A+C8BA,AyHAA,A3LJFhK,CiH1BG,A9FAA,A+C8BA,C6CLC,A/FAA,A2KKA6oB,E5ELE,A/FAA,A2BGA,A3CFF,C2CEG,CgJEC,C3LJD,C+GDG,A/FAA,C+FAC,A/FAA,A2KKAzX,C3LJD,CiH1BGpE,A9FAAA,CwK8BC,CAAClO,CnLaC,GAAG,CyG3CC,A9FAA,CwK8BC,C/EYC,AK1CAmO,ArG0CA,AO1CAA,EyF0CE,AhGAA,A+KZA+C,ChJFC,CAAC,EsE5BE,AzG2CAhG,AW3CA,E8FAE,A9FAA,AwK8BA,W/EYW,AhGAA,CgGAC,AhGAA,CJCCA,CAAA,EAAG;AoJjBpE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBA0J,AGjBA,AhHDA,AwDCA,AfCA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAA,AIjBA,A4HCA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AGAA,ACAA,AEAA,AoBCA,ArCDA,A8KGQ,CAAC,ChBRP,A5DGA,ALAA,AtGoBA,AapBA,ANAA,A4KQAgd,AhJFApf,A1COF,A8LRU,EnIFN,AwDAAgH,AVhEA,ApFgEAA,AZhEA,AwDoEA,AhEEIjT,CgEFH,C6GVCkoB,A7GUA,AlEHF,E4DDI,AqD1BArpB,A9FAAA,CX2CC4F,AmCdA,CiBHC,AmHNA,A/KOF1J,CoHDG,A9FAA,CqKKC,AhJFAkR,CoITCgX,A3DMA,A9FAA,AqKKAO,CzLCK,C0GUH,AK1CA,ArG0CA,AO1CA,AjBgCI,C0GUH,AK1CApjB,ArG0CA,AO1CAA,AjBgCI,AFLN,C+KPG,A3DMA,A9FAA,AqKKA,CZXC3G,CYWCkR,AhJFA,A3CFF/P,I2CEM,CoITC,A9DpBA,A9FAA,AwB6BA,CsE7BC,AzG2CA,AW3CA,AwK+BA,AhJFA,CnCcC,CmLZCmR,E3LJA,CQgBG,AmLZA,CnLYC,AmLZAtS,E3LJA,IiH3BM,A9FAA,AwK+BA,C/EWC,AhGAA,A+KXA,E/EWE,AhGAA,AZfF,GAAGmB,O4GeSkH,AhGAAA,GZfC,C4GeG,AhGAA,EgGAE,AhGAA,AZfF,KAAK,GAAG9G,IAAI,CAACC,GAAG,CAAC,CAACL,UAAU,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;A4JDzG,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,A0BDA,AhHDA,AwDCA,AfCA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AnHkBA,AQlBA,A4HCA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AGAA,ACAA,AEAA,AoBCA,ArCDA,CTkBC,CoDjBC,AmHNA,AnEsBA,AOnBA,ALAA,AJ7DA,AoFuEA,AlLSA,ASnBA,ANAA,AL7DA,ARsEE,AyLAF,A1LIF,C2DVG,A8ChEA,AhGAA,C0GgEC8jB,A9FAAA,A4CIA,CwCpEC,AhGAA,CqK0DCyJ,AjEGA,A/FAA,AfIF,G4GeK,AGjBA3R,AnGiBA,AIjBAA,A2KOAiV,C1EhCC,A9FAA,AnB2BFvwB,C+KPG,EjEGE8U,A/FAAA,CgKHCoY,A3DMA,AH1BA9b,A3F0BA,AH1BAA,E4FyBEkK,AKCA,ApGDAA,AMCA,CyFDCvJ,A/FAAA,ChBED,CiH3BG,A9FAA,AwKgCA,CvENC,AH1BA4K,A3F0BA,AH1BAA,AwKgCA9L,C5EPC,ADFA,A9FEA,ADFA,AfIFlR,E4GeI,AGjBA,AnGiBA,AIjBA,A2KOA,EZZE,AYYA8P,CZZCsY,AnEsBAnhB,AEnBA,AGvBA,ArG0CAA,AGnBA,AIvBA,C8FAC,A9FAA,E8FAE,A9FAA,C4JoBC,AnEsBA,AhGAA,C+KVC,CZZCnE,CAAC,AnEsBA,AhGAA,A+KVA6lB,A3LLF,C+KPG,CjEGC,A/FAA,E+FAExT,A/FAAA,A4KSA,A3LLF,C2LKG,M3LLI,C8GJG,A/FAA,EfIAnV,C8GJG+S,A/FAAA,M+FAM,A/FAA,KfIG,GAAG,E4GeI,AhGAA,EkGnBEoD,A/FAAA,CfID,GAAGhW,E8GJI,A/FAA,EfIA,CAACC,GAAG,CAAC,CAACJ,YAAY,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;A4JDjH,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBA,A7GlBA,AyCEA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AnHmBAyI,AIFA,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,ADOA,AoLPA,AGAA,AEOA,A/INA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,A8KGI,CnFcH,AhGAA,CgDhBC,AmHNA,AnEsBA,AGjBA2J,AIFA,A2EUA,AlLSA,AIjBAA,AKFA,A6COA,AvBDA,A1COAlP,EmHVE8gB,AVhEAhY,ApFgEAgY,AZhEAhY,EqK0DEkE,AhEKA,AIFA,A2EUAvR,A9KRA,AKFA,ArBIF,C+KPG,AhEKAmc,AL/DA,A1F+DAA,AN/DA,EgGAE,AhGAA,CqK0DCzc,AhEKA,A/FAA,AhBEFiC,C+GFG,A/FAA,C+FAC,AEzBAyM,AzG4CA,AQnBA,AGzBAA,CgGuBCoI,A3GqBApP,AarBAoP,CuCGC,CkIOR,ClIPU,AmHNA,CAAC3E,A3DMA,A9FAA,AtBCF,CiH3BG,APtCA,AvFsCA,ATtCA,C0GgEC,AH1BAiB,A6EiCa9S,AxKPb,AH1BA8S,CnB2BDxR,CmHJG,A9FAA,C0JHC,AvKwBA,CuKxBCotB,AvKwBAxmB,CyG5CC,A9FAA,C8FACmW,A9FAAA,CgGuBC,A9FAA,ApBaA9Z,C8KhBC,AvKwBA,APRAC,C8KhBC,AeaI,CAAuBvE,CtLWzB,CyG5CC,A9FAA,AnB2BF,CiH3BG,A9FAA,C8FAC,A9FAA,EgGuBE,A2EU0B,AzKV1B,ArBIF,EmHJIuW,A9FAAA,CyKU2B,A7LG1B,C6LH2B,AtLW1BtO,CPRCzD,C6LH2B,C9LN3B,CQiBGyD,CAACkD,C2GrBC,A9FAA,ArBIF9J,GmHJK8S,A3GqBA,AarBAA,EbqBE,CPRC,EAAE,CkHbC,A9FAA,ErBIA,GAAG,KAAK,EmHJIoD,A9FAAA,CrBIDhW,IAAI,CmHJG,A9FAA,ArBIFC,GAAG,CAAC,CAACH,WAAW,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;A4JD7G,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBAuT,AGjBA,AhHDA,AyCEA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAA,AIjBA,A4HCA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,ADQA,AoLRA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,A8KGI6hB,EhBRFnlB,A3DMA,ANHA,AtGqBA,AclBA,APHA,AmDQAoX,AvBFA,CoITC,A3DMA,A9FAA,CsCAC,AmHNApB,ArE1DA1d,AoFuEA,ApLvEAA,AT0EF,A8LRM,CAAC6E,CvLgBH7H,ARhBF,E+KRI,A9KgBF,C8KhBG,ArE1DA,AhGAA,ARuEAL,ADGFjG,C2DVG,AmHNA,A9DpBA,AzG4CA,AW5CA,C4JoBC,A9DpBA,APtCA,AoFuEPP,A3KjCO,ATtCA,CkDgEC,CpDkBC,ARhBF,E4GcI,ApGEA,AIFA,CgGAC,AhGAA,CgDhBC,AqD1BA,A9FAA,A+C+BA,CAACioB,ChEECzhB,ADGF,ADRA,C0GlEG2F,AoFuEhB,ApLvEgBA,ARuED,C6LLM,C7LKH,ADGF3H,A8LRM,A/LANjD,K0GlEO4K,AhGAAA,CgGACoF,AhGAAA,AwDqEA,AlEHF,C0GlEG,AhGAA,AqLkEI,C7HGH2W,CwCrEC,AhGAA,AqLkEK3H,A/LAP,ECQE,GiELK,A6HHK,C7HGJ,AlEHF,E4GcI,AhGAA,CmLdM,A/LAP7e,C4GcG,AhGAA,OZdK,GAAG,MAAM,GAAGC,OAAO,M4GcQ,AhGAA,CgGAC,AhGAA;AgJhB1E,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBAkT,AGjBAzL,AhHDA,AyCEA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAyL,AIjBAzL,A4HCA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JLE,A5DGA,ALAA,AgFUA,AtLWA,AarBA,ANAA,AmDQAghB,AhEEE,AyCJF,AoJDM,EnIFJ,A3DUF,ADRE,CAAC,C+KRCW,AhEKA,AL/DA,A1F+DA,AN/DA,ARuEE5kB,A6LLG5F,A/LCP,C+KTG,AhEKAgK,AvGmBA,AQnBAA,CfWD,CAAC9J,C2DVG,AmHNAf,ArE1DA8R,AhGAAA,AwDqEA,C1DaCxK,CoDlBC,AqD1BAmH,AzG4CA,AW5CAA,C+C+BCya,AlEFFhnB,CEIK,AFJJ,C4GaG,AFhFA,AlGkFA,AIFA,AFhFA,CqK0DC,AnEsBA,ApGEA,AIFA,AVTE,A6LLG,A/LCR,C+KTIiQ,CrE1DC,AlGkFA7K,AElFA,CuGsCC,AzG4CA,AW5CA,AlBoCF,C2DVG,AqD1BA0X,A9FAAA,A4K4BGje,ChFHF,A/FAA,AkDMA,C6GXC,AhEKA+W,AvGmBAzQ,AQnBAyQ,AkDMA4S,AjEKF3lB,C8KhBGiqB,IAAI,CAAC,AhEKA,A/FAA,C+FACtnB,A/FAAA,CkDMC,A6HHG,CvLgBF,CAACnH,A0DbAkZ,A6HHG,C9LQJ,GgHpCK,A9FAA,C8FACnZ,A9FAAA,C4FyBC,AvGmBA,AQnBA,E4FiBE,AGjBA,AvGmBAgH,AIFA,AIjBA,CRmBC,CoGFC,AhGAA,CJEC,EAAEH,CyG5CC,A9FAA,C+C+BC,C+C/BC,A9FAA,CX4CC,A0DbA,C1DaCI,CuGnBC,A/FAA,CiGzBC,A9FAA,C4FyBC,AEzBA,AjGyBA,AGzBA,C8FAC,AzG4CA,AW5CA,CX4CCF,I0DbI,CAAC,I1DaI,CAACC,CAAC,CAAC,CAAC,CoGFC,AhGAA,CgGAC,AhGAA;AgJhBtE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBA6N,A7GlBA,AyCEA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAA,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JLEkW,AhEKA,AIFA,ACGA,ANHA,AtGqBA,AQnBA,AKFA,ACGA,APHA,AmDQAV,AvBFA,CoITC,CnHMC,A1DOI,ADGN,A8LRU5pB,EhBRNwrB,AjEGA,AtGqBA5gB,AOrBA,AmDQA,AlEFExJ,C8GNDkV,A/FAAA,C6CGC,A8ChEAtF,AhGAAA,AT0EF,CiELGmX,AjEKF9lB,C2DVG,AqD1BA,A9FAA,EuFtCE,AhGAA,CFkFC,ARfE,C0GnEDyO,AhGAAA,AqLkEQ,A/LCNzP,C4GaD,AFhFA,A9FgFA,AFhFA,CqK0DC,AnEsBA,ApGECsJ,AIFD,CmKtBCkgB,AjEGA,A/FAA,AmDQA,A6HHMyL,A/LCJ,CkEED1M,AlEFEzoB,CAAC,C8GND,AtGqBC,AOrBD,AfME,C+KTD,AjEGA,A/FAA,C+FAC6Q,A/FAAA,AmDQA,AjEKF,C8KhBGsY,CAAC,A7GWA5R,C6GXC,AvKwBC,APRH,A8LRQ,ChBRL6N,AgBQMhkB,GjFLH,A/FAA,AdaF,C6GbG+T,A/FAAA,AdaFhV,E8KhBI,AvKwBE,CuKxBDwP,CAAC,CAAC,CAACyV,G7GWG,C4CRC,A/FAA,CmDQC,C6GXC,CAACtnB,CnEsBC,AhGAA,AmLdM,CAACe,CnFcL,AhGAA,AXNF,CiELG,AjEKF+D,CiELG,C6GXC,CAAC7E,IAAI,CAAC,AgBQM,ChBRL,CAAC,AgBQM,ChBRL,A9KgBF,C8KhBG,AgBQM,ChBRL,A9KgBF8E,A8LRQ,ChBRLuiB,EnEsBE,AhGAA,CgGAC,AhGAA,GmKtBG,CAAC1iB,CAAC,CAAC,CAAC0iB,A9KgBF,CAAC,K8KhBO,CAAC2H,KAAK,CAAC,CAAC1H,MAAM,CAAC,CAAC;AnBM7F,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBApS,A7GlBA,AyCEA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAA,AgIhBA,ALAA,AEAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E2CCE,AmHNAtD,AhEKA,AIFA,ACGA,ANHA,AgFUA,AtLYA,AQpBA,AKFA,ACGA,APHA,AmDQA,AhEEE,AyCJF,CiBHC,AmHNA,C9KgBD,A8LRU2kB,A/LCR,E+KTEjK,A5DGA,ACGA,ANHAzV,AtGsBAlL,AatBA,ACGA,APHAkL,AmDQA,CiDRCO,ACGA/D,A/FHA+D,ACGA/D,C2F1BC,APtCAtB,AvFsCA,ATtCAA,CuGsCC,A9FAA,C8FAC,A9FAA,AlBoCFhN,EyG1EI,AlGmFA,AEnFA,AqLkEQ,C7HGP0S,A6HHQ6f,CjFLP,AJ7DA,A3F6DA,AL7DA,CkGgFC,ApGGA,AIHA,CmKtBC,AnEsBA,AEnBA,AlGmBA,AGnBA,AdaF,C8KhBG3L,A5DGA,A9FAA,CqF7DC,AhGAA,AqLkEQ,CrFlEPja,AlGmFA,AEnFAA,AT0EF,A8LRU5Q,C5ELP,ALAA,AtGsBAuJ,AatBA,ANAA,CgKHC,A5DGA,ACGA,ANHA+M,AzFAA,ACGA,APHAA,AmDQA,CiDRCtE,ACGAoO,A/FHApO,ACGAoO,CyJNCkK,CAAC,CAAC,CAAC/D,A7GWA,C1DcC,E2GtBE,A9FAA,A0KKQ,C5ELPjQ,A9FAAA,CyFAC,A/FAA,CgKHC,AgBQQtW,ChBRP8Q,CAAC,A3DMA,ANHA,AxFGA,APHA,CgKHC,CAAC0V,A7GWA,CkDLC,A9FAA,CwFHC,A/FAA,AmDQA,C4CRClQ,A/FAAA,C6FmBC,AOnBA,AvGmBA,ASnBA,C+FGC,A9FAA,CyJNC,AnEsBA,AhGAA,AmLdQ,ChBRP,CAAC,A7GWA,IAAItR,C4CRC,A/FAA,I+FAI,A/FAA,AmDQA,C4CRC,A/FAA,AmDQA,C4CRCgN,A/FAAA,O+FAO,A/FAA,C+FACsG,A/FAAA,gB6FmBgB,AhGAA,EgGAEzO,AEnBA,AlGmBAA,AGnBA,KmDQK,CAAC,G0CWG,AhGAA,CgGAC,AhGAA;AgJhB3F,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBAuK,A7GlBA,AyCEA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAA,AgIhBA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,AGAA,A7ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E2CCE,AmHNAkW,AhEKA,AIFA,A2EUA,AtLYA,AQpBA,AKFA,A6CSAe,AhECE,AyCJF,A3CAF,C+KTG,CgBQSkL,EhBRN/K,A5DGAzV,AFvBA,APtCA,AlGmFAlL,AatBAkL,AFvBA,ATtCA,ARuEE/P,AyCJF+P,A1COF,CgHpCG,APtCA,AvFsCA,ATtCA,CuGsCC,A9FAA,C2KiCC,EAAE,CtLYC,AuLjBQ,C7LKL,CiHVD,A9FAA,AsBMA,CiEaC,AhGAA,AmLdQugB,ChBRP,AnEsBA,AOnBA,AvGmBA,ASnBA,A6CSA,AhECElxB,C6KbDylB,AvKyBAtrB,A0DbAqrB,AvBHAjX,EiBHE,CuDHC,A9FAA,CuCGC,AmHNA,A5DGA2C,A9FAAA,E0JHEgU,ApISA,AoJDQ,ChBRP,AgBQQxmB,ChBRP,CAACyiB,AvKyBA,ANZE,CAAC1gB,ADGJ,COUrB+E,A0DdwB,CAACigB,AjEIF9mB,EkHbI,A9FAA,C0JHC,CAAC+M,A7GYA,C6GZC,A5DGA,A9FAA,A6CSA,C6GZC,AvK0BxB,A0DdwB2N,AvBHA1H,CoITCwP,EnEsBE,AOnBA,A3GuBvB3b,AIJuB,ASnBA,C8FAC0L,A9FAAA,A6CSA,C0CUC,AhGAA,AsDVA,AjEIF,C0CPG,CoITC,A7KaE,C6KbDrX,A7KaE,EMavB,GuLlBkC,ChBRP,A5DGA,A3GuBvB4L,AavBuB,A0KKQ/K,ChBRPZ,AnEsBAgL,AhGAAA,AsDVAohB,G0CUG,AOnBA,AvGmBA,ASnBA,C0JHC,A5DGA,A9FAA,A6CSA,C6GZC,AnEsBA,AOnBAtZ,A3GuBvB,AIJuB,ASnBAA,C0JHC,AvK0BvBlH,A0DduB,C6GZC,CAAC,CAAC,AgBQQ,ChBRP,CAACyb,AvK0BvB,AuLlB+BvmB,C5ELP,A9FAA,C8FACggB,A9FAAA,GbuBpBzgB,CuK1BwB,CAACsE,CAAC,CAAC,CAAC0iB,AgBQQ,CAAC,GvLkB3B,CAAC,CuK1BuB,CAAC2H,G5DGG,A3GwB1E,AaxB0E,E0JHE,CAAC,CAAC1H,AvK2B1E,CAAC5b,KuK3B+E,CAAC,CAAC,AvK2B1E,EACf,OAAO,KAAK;AoJtBhB,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AtFFA,AyCEA,A2IDA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6FQA,AhEPA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JLEkG,AnEsBA,AGjBA/G,AKCA,ANHA,AlGmBA,AIjBAA,AMCA,APHA,AbUErE,AFJD,C+KTA,CnHMC,AqD1BA,A9FAA,A+CgCA,A6HJQ7G,EhBRN2sB,ArE1DA,AhGAA,AT0EF,EiEJIF,C0CUC,AhGAA,CgDhBC,A8ChEA,AhGAA,ARuEE,E0DPA,AmDDA,A/FAA,AkDOA,A6HJQ,C7LKL,C6GRD,AL/DA,A1F+DA,AN/DA,AwDsEA,CwCtEC9rB,AhGAAA,AqLkEQtB,ChBRP,CnHMC,AmHNA2sB,A7KaE,E6GRA,A/FAA,A+KGQ,CAAClpB,ChBRP,ArE1DA,AhGAA,AwDsEAspB,E6GZEX,CAAC,CAAC,CAAC/D,ArE1DA,AhGAA,CgGAC,AhGAA,AT0EF,E2GMI,AFhFA,A9FgFA,AFhFA,AT0EFviB,G8KhBK,AnEsBAkG,AhGAAA,CmKtBC4G,ArE1DA,AhGAA,CqK0DC,ArE1DAD,AhGAAA,AwDsEA,C6GZC,AnEsBA,AhGAA,AsDVA8Y,C6GZCnD,AgBQQ,CAAC+P,CrFlEP,AhGAA,ET0EA,CyG1EGxlB,AhGAAA,CqK0DC,CAAC,A7GYA,C6GZC,C7GYC6Y,A6HJQ,CrFlEP,AhGAA,AqLkEQ,G7HIL,EAAEpC,UAAU,EAAEC,MAAM,EAAEoD,IAAI,CAAC;A0FN5E,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBA,A7GlBA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6FSA,AhERA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBA,AgIhBA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AGDA,A1KAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,C2FiBC,AhGAA,CmKtBC,AhEKA7gB,AIFA,ACGA,ANHA,AtGyBA,AQvBAA,AKFA,ACGA,APHA,AbWE,AyCLF,A3CAE1I,C4GaDuI,AhGAAA,CgDhBC,AMOA,A6HLQ6sB,ChFHP,A/FAA,C0F/DC,AhGAA,ARwEEzwB,ADEJ,C8GXG,A/FAA,E+JLE,AecA+sB,A5LAE,C0DRD,A8ChEA,AhGAA,CgGACpiB,AhGAAA,AwDuEAiI,CNPC,AgDgBA,AhGAA,AVREpT,C0GQD,AhGAA,E8FhFE,AhGAA,AwDuEA,C6CRCuE,A/FAAA,AkDQA2f,ChECG,CwGxED5Y,AhGAAA,ARwEEvR,AFLA8B,C+GJD0I,A/FAAA,AhBIElK,C4DHD,AmDDD,A/FAA,E+FAG,A+ESAkzB,A9KTA,A+KGQ,CrFlEP,AoFwEC/uB,ApLxED,AqLkEQpF,C7HKP,AhECE,EgEDA+qB,G4HCI,A9LLC,CkEID,C4HCE2J,A7LEH,A8LRU,A/LCNvzB,CkEIDwnB,CjEGA,A8LRS0O,G9LQP,I6LFO,A7LEH,CAAC7zB,ADPI,C8LKA,A5HDD,A6HLQ,CAAC,A/LCN,CkEIDolB,MAAM,EAAEjB,EjEGA,CAACtiB,GiEHK,CAAC,GjEGC,CAAC,CAAC,CAAE,IAAG;A2JVnE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBAkQ,A7GlBA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAA,AgIhBA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,EkGFE,ACGA,ANHA,AgFWA,AtLcA,AazBA,ACGA,APHA,AmDUA,AhECE,AyCLF,AoJAU,C7HIT,CNPC,AmHPOkW,AhEMP,AEzBA,AjGyBA,AGzBA,A+CiCA,AlEJA,C+KVQ,CrEzDN,AlGsFA1f,AEtFA,AwDuEA+L,AjEGF,C8KjBU2T,CnHON,AmHPO,AhEMP,AL/DA,A1F+DA,AN/DA,AVmEA/oB,CEKE0E,C0DRA,EmDDE,AL/DA,A1F+DA,AN/DA,ARwEC,C6GTAsM,AL/DA/S,AlGsFA,AQvBA+S,AN/DA/S,CwDuEC,AhECC,C0GQA,ApGMA,AINA,AsDTA,AlEJA,C4GaC,AhGAA,CXND,CDPG,C0GnEC,AhGAA,AT0EF,GDPK,CCOD,ADPEY,CCOD+D,G8GXK,A/FAA,K+FAK5E,A/FAAA,OfWK,CAAC,C8GXG,A/FAA,EfWA,ADPE,CCOD,ADPEO,C+GJC,A/FAA,I+FAI,A/FAA,C+FAC4S,A/FAAA,E4FiBE,AhGAA,EgGAE,AhGAA,AZbA,CAAC,S+GJS,A/FAA,K+FAKnT,A/FAAA,S+FAS,A/FAA,E+FAE,A/FAA,Q4FiBQ,AhGAA,CgGAC,AhGAA;AgJhBzF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AuBgBA2C,A7GlBA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A/GiBAA,AgIhBA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AvKDA,A+DQA,AoHRA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,A8KIY,C7HIX,A6HJY,CnIHX,AuDHA,ACGA,ANHA,AgFWA,AzKXA,ACGA,APHA,A4BMA,AoJAY,CnIHX,CmHRc4O,A9DlBb,APtCA,AlGsFA,AWhDA,ATtCA,ARwEInL,AFLJ,C+KXc,CnEwBZ,AGjBA,AIFA,ACGA,ANHA,AgFWA6tB,AlLQA,AIjBA,AKFA,ACGA,APHA,A4BMA,A1COF,C8KlBgB1iB,AnEwBb3O,AOnBA8T,ACGA1D,ANHA0D,AlGmBA9T,ASnBA8T,ACGA1D,APHA0D,A4BMAK,CnCmBCvL,ARnBAvJ,C8LKC,CtLcC,GuGvBG,A/FAA,C4FiBC,AhGAA,CgGAC2S,AhGAAA,AZbA,CEKK,CyCLH,CoEJC,A/FAA,AfWF,ADPE,CEKK1O,C0GQH,AOnBA,ALAA,AlGmBA,ASnBA,ANAA,A4BMA,A1COF,CmHVG,A9FAA,AqBGA,CyEHCoT,A9FAAA,AqBGA7G,A3CAA,C4GaCmC,AOnBA+B,ALAAA,AlGmBA/B,ASnBA+B,ANAAA,AfMA9V,CEKK,ADEN,CAAC+D,CmHVG,A9FAA,EsFgBE,AhGAA,CwGhBC,A9FAA,AqBGA,CAACmS,IyEHI,A9FAA,K6FHK,ALAA,AzFAA,ANAA,CoGAC,ALAA,AzFAA,ANAA,A4BMA,A1COF,CAAC,CAAC,CAAC,ADPE,CmHNC,ALAA,AzFAA,ANAA,AfMAtW,EmHNEgS,ALAAA,AzFAAA,ANAAA,OoGAO,ALAA,AzFAA,ANAA,CfMC,CmHNC,ALAA,AzFAA,ANAA,AfMA,uBmHNuB,ALAA,AzFAA,ANAA,EoGAE+D,ALAAA,AzFAAA,ANAAA,QoGAQ,ALAA,AzFAA,ANAA,CoGAC,ALAA,AzFAA,ANAA;A6IGzF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,A8KIA,EnIHE,AmHToB,A3DSpB,AVhEA,AoFwEA,AxKRA,AZhEA,AiCoEA,CoIbqB,ArEvDpB,AhGAA,CqG+DC,AEzBA,AzGgDA,AQvBA,AGzBA,AjBkCItQ,AFLJ,C0GnEC,AhGAA,C0GgECuM,A0EQA,AxKRAA,AqBIA+D,A1CMF,EOYI3P,CNdK,EFLF,CQmBC,ANdI,AFLJrF,CoHHC,A5GsBAvB,ActBA,CsCAC,A1DQI,AyCJJ,CyEJC,A9FAA,CsCAC,AjBIA,A1CMF,ADPE,CAACiC,CCOD,COYG,CmClBC,A3CDA,C2CCC6U,A3CDA/U,CQmBC,APZF,COYG,APZF4C,EOaf4G,EAAE,CRpBoB,EQoBjB3E,ARpBmB5E,C2CCC,GnCmBhB,AmCnBmB,CnCmBlB,CAAC,CAAC,ARpBmB,C2CCC,A1CMF,ADPE,C2CCC8U,A1CMF,CAAC,CAAC,ADPE,IAAI,I2CCI,C3CDCvV,G2CCG,CAAC,A3CDA,C2CCCiR,A3CDAtQ,GAAG,CAACH,G2CCG,CAAC+W,G3CDG,EAAE9W,OAAO,CAAC,GAAG,E2CCE,E3CDE,CAAC;A4JHpF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,A0FTA,AhLOA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,A8KIA,E5ENE,ALAA,AzFAA,ANAA,AfMF,E4DHI,AmDDA,AKCA,AH1BA,APtCAoL,AoFwEA4mB,AtLeA,AQxBA,AMCA,AH1BA,ATtCA5mB,ARwEI,EDEJ,CyG1EG,AoFwEA,ApLxEA,C0GgEC,A5GuBA7B,AcvBA,CoFhEC,AhGAA,AqLmEA2rB,CnIHC,AkIQA,AtLeA,CuGxBC,A/FAA,AdSI,C0DRH,C1DQK9wB,C4LAH6tB,C/ETC,AKCAzhB,ApGDA,AMCAA,CyFDCO,AL/DA,A1F+DAA,AN/DA,CkDgEC,AkIQA,A7LEF,C6LFGghB,C7LED,GmHVK,A5GuBAvuB,AcvBA,C8FAC6f,A9FAAA,ApBQI,ADEN,CAAC1gB,ECFQ8B,C4LAH,AtLeA,AuLpBAywB,CDKC,ACLA1lB,CvLoBC,ANfI,C6GTH,A/FAA,C+FACwB,A/FAAA,AdSI,CkHRH,A9FAA,AyKGA,EAAE0jB,G3EHG,A9FAA,ErBUA,C8GXG,A/FAA,AfWF,GAAG,A8LPE,ChFJC,A/FAA,C+KIC,E3EHE,A9FAA,CyFDC,A/FAA,C+FACxjB,AKCA,ApGDAA,AMCA,I8FAI,A9FAA,C8FACoS,A9FAAA,SyFDS,A/FAA,C+FACtS,AKCA,ApGDAA,AMCA,G8FAGR,A9FAAA,MyFDM,A/FAA,CoGCC,A9FAA,C8FAC6S,A9FAAA,S8FAS,A9FAA;AsIApF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,A0FRA,AhLMA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AcAA,AtHDA,AyECA,AFDA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8FAE,AIFA,ALAA,AgFWA,A9KTA,AKFA,ANAA,A4BOA,AoJDE,A/LAA,C+GJD,A+ESA,A9KTA,C4CCC,AwDAA,AH1BA,APtCAzb,AoFwEA,AxKRA,AH1BA,ATtCAA,AT0EF,CAAC,C6GbG,AtG0BA,AO1BA,AbWM,C4GXLmK,A/FAAA,CqGGC,AH1BAiL,A3F0BA,AH1BAA,C4JkBC2O,ArExDA,AhGAA,CkDgEC,A1DQMxnB,CwGxEL,AoFwEAmF,ApLxEA,CkDgEC,GwDAGkH,A9FAAA,CwKQC,CfhBCmb,CAACiB,AjEKA,AgFWA,A/KXA,CkGvBC,A9FAA,CyC0BC,A8ChEA3hB,AhGAAA,CoG6DC,A/FAA,CqGGC,AH1BA,A3F0BA,AH1BA,AjBkCM,C6KhBL,A3DQAsY,A9FAAA,CpBQO,C6KhBLrhB,ArExDA+I,AhGAAA,CqKwDC,AjEKA,AGvBA,APtCD,A3F6DC,AIvBA,ATtCD,CuGsCEqR,A9FAAA,C4JkBC,A3DQA,AVhEA,ApFgEA,AZhEA,K0GgEK,A9FAA,M2F1BM,A9FAA,C8FAC,A9FAA,GiG0BG,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FACkH,A9FAAA,M8FAM,A9FAA,G8FAGhT,A9FAAA,O8FAO,A9FAA,C8FAC+S,A9FAAA,K8FAK,A9FAA;AsIAxE,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AxGDA,AyECA,AFDA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JPE,AhEOA9a,AIFA,ACGA,ApGDAA,AKFA,ACGA,AqBIA,AoJDEisB,A/LAAv0B,E4DHA,AqD1BA,A6EkCA,A3KlCA,AlBqCF,C8GZG,A/FAA,C+JPC0sB,ArExDA,AlGuFA,AEvFA,CqG+DC,A/FAA,C4CCC,AqD1BAxP,A6EkCA/T,A3KlCA+T,AjBkCQlZ,E0DRN,AmHRA,ArExDA,AhGAA,CT2ED1B,A8LRI,CAAC0yB,ChBXD,AegBA,CpFxEC,AoFwEAtiB,ApLxEA,CuGsCC,APtCA7U,AvFsCA,ATtCAA,CqG+DCyK,A/FAAA,C+JPC2hB,A9KmBF,C6LHG,A9LLEjqB,C+KXD,AhEOAsI,A/FAAA,AhBIGrI,C+KXFwsB,AhEOAhlB,A/FAAA,AdSQ,CwGxEP,AhGAA,ARwEQxD,A6LLN,EDKA,CCLG,ChBXD,AhEOA,A/FAA,AhBIG,C+KXF,ArExDA,AhGAA,AqLmEE,ChFJD,AL/DA,A1F+DA,AN/DA,AVmEG,E0GnED,AhGAA,ERwEU,CAAC,CAACM,GAAG,CAAC,CAAC,E4LAN,EAAE;AlCR1C,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ADAA,APCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AxGDA,AyECA,AFDA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E2CCE,AmHRA,A5DKA,ALAA,AzFAA,ANAA,A4BOA,A1COA,A8LPE,CnIJD,CmDDC,AEzBA,AjGyBA,AGzBA,AnB6BI,E+KXFuG,A5DKA,AT7DA,AoFwEA,AtLeA,Aa1BA,AX7DA,ARwEM,CiHXL8O,A9FAAA,A0KOE,C9E9BDiD,A9FAAA,AnB6BG5c,E0GnED4L,AhGAAA,CqKwDC,CegBC,AtLeAzC,C2G1BC,AT7DA,ArF6DA,AX7DA,AqLoEE6B,ChBZD,AvK+BA,ARpBG,C+KXFwhB,AvK+BA,C2G1BC,AT7DA,AoFwEAppB,AtLeA,Aa1BA,AX7DA,AqLoEE,A/LDC,GiH7BA,A9FAA,C4JkBC,A5DKA2L,AT7DA,ArF6DAA,AX7DA,AqLoEEK,ChBZDxR,A9DlBA,APtCAoR,AoFwEA,A3KlCA,ATtCAA,CoLwEC,ECJI,CrFpED,AhGAA,CgGACI,AhGAAA,AqLoEE,ChBZD,G5DKG,AT7DA,ArF6DA,AX7DA,CqKwDC,A5DKA,A9FAA,C0JLC,A5DKA,A9FAA,I0JLItN,CAAC,CAAC4qB,SAAS,CAAC,CAAC,gHegBgH,CAAC;AlCRlK,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ARCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E2CCE,AmHRA,A5DKA,ACGA,ANHA,AzFAA,ACGA,APHA,A4BOA,A1COAnqB,E8GZE,A+ESA,AtLeA,AQxBA,AdSI,A6LJF,EhBZAsI,A5DKA,ALAA,AGvBAoS,APtCA,ArF6DA,ANAA,AIvBAA,ATtCA,AiCoEA1I,A3CDE,CmHND3W,ALAA+Y,AzFAA/Y,ANAA+Y,CgLOGvH,CpJAD,C+DpEC,AhGAA,AVmEEnP,C+KXD,CpIYCmQ,AoJAE,C5EPD,AFvBA,A5FuBA,AFvBA,A4K8BEojB,ChBZD,ArExDA,AhGAA,CqKwDC,ArExDA51B,AhGAAA,CyG6DC,ALAA,AGvBA,A5FuBA,ANAA,AIvBA,AnB6BE,C+KXD,A5DKA,A9FAA,ApBcA2E,CAACC,C2DXC,AkDHA,A/FAA,A4BOA,A3CDExC,CiH7BD6L,A9FAAA,AwB8BAwI,CiBJC,A8ChEA,AhGAA,GoG6DG,A/FAA,AdcA,CDRG,C0GnED,AhGAA,AT2EA,CgHrCC,APtCA,AvFsCA,ATtCA,AqLoEE,C9E9BDsI,A9FAAA,A4K8BE3R,CrFpED,AhGAA,EqLoEI,CAAC,CrFpED,AhGAA,AiCoEA,C+DpECgE,AhGAAA,AqLoEE,IrFpEE,AhGAA,CuGsCC,A9FAA,C8FAC4N,A9FAAA,CuFtCC,AhGAA,IgGAI,AhGAA,CgGAC3N,AhGAAA,IgGAI,AhGAA,CuGsCC,A9FAA,E8FAE,APtCA,AvFsCA,ATtCA,IuGsCI,APtCA,AvFsCA,ATtCA,CuGsCC,APtCA,AvFsCA,ATtCA,CuGsCC,A9FAA,IuFtCI,AhGAA,IgGAI,AhGAA,CgGACD,AhGAAA,IgGAI,AhGAA,GgGAG,AhGAA,IgGAI,AhGAA,CgGACA,AhGAAA,IgGAI,AhGAA,CgGACK,AhGAAA,IgGAI,AhGAA;AkJgEzF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ARCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,EkGFE,ACGA,ANHA,AzFAA,ACGA,APHA,A4BOA,EiBJE,AmHTeod,AhEQf,AEzBA,A6EmCA,AtLcA,AQxBA,AGzBA,AjBkCIzoB,ADGN,CgHrCG,A9FAA,CgGuBC,ACGA,AVhEA,ArF6DA,ACGA,AZhEA,AiCoEAuhB,AoJAE,A/LDA,CmHNDlH,ACGA9Y,A/FHA8Y,ACGA9Y,CyJTgB,AhEQf,AL/DA,A1F+DA,AN/DA,AT2EF,C8KpBkBonB,A3DSf,A9FAA,CsCAC,AwDAA,A0ESAzjB,AxKTA,AtBGEhJ,CiH7BD,A9FAA,CyC0BC,AmDDA,AIFA,AT7DA,A1F+DA,AKFA,AX7DA,AT2EF,A8LPIsH,ChFLDmJ,AL/DA/S,A1F+DA+S,AN/DA/S,AT2EF6C,C8KpBkB,A7KiBX,C6KjBYoK,A5DMf,A2EYA,AzKZA,ArBME,E4DHA,A1DQI,AyCJJ,AoJAE,C7LIG,CiHXH,AT7DA,ArF6DA,AX7DA,ARwEI,C6KjBY,ApIafuF,AoJAEhB,ChBbc,A3DSf,A9FAA,E8FAE6K,A9FAAA,CyKIG,CAACjP,C9LOH,C8GZG,A/FAA,A2BKA,CAACwa,AoJAE,CAAC,C9LOHhjB,E8GZI7E,AKCA,ApGDAA,AMCA,C8FAC,A9FAA,GrBWC,EAAE,G8GZK,A/FAA,I+FAI,A/FAA,I+FAI,A/FAA,A2BKA,CoELCmT,A/FAAA,c+FAc,A/FAA,K+FAKnT,A/FAAA,S+FAS,A/FAA,E+FAE,A/FAA;A4IChF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AEAA,AIAA,ARCA,A+BAA,ArHFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JTsC,A5DOpC,ALAA,AgFYA,AzKZA,ANAA,A4BOA,EiBJE,ApDuBA,ANfI0G,E6GTF,AIFA,ALAA,AGvBA,APtCA,A1F+DA,AKFA,ANAA,AIvBA,ATtCA,AiCoEAohB,A1COF,A8LPI,A/LDA,CmHNDnH,ALAA5M,AzFAA4M,ANAA5M,AbWI,CMeHtI,EoDvBE,A1DQIvF,AFLF1D,CQoBD,CoDvBC,AmIIE60B,CjFPD,AJ7DAppB,A3F6DA,AL7DAA,AT2EF,COYG,APXR,CCJa,A6LJF,A/LDA,C8GND,AJ7DA,A3F6DA,AL7DA,ARwEIhO,AyCJJ,CwEPC,A9FAA,Cb0BCwF,AuLnBEqwB,CpJAD,CiBJC,AuDHA,A9FAA,C8FAC,ALAA,AzFAA,ANAA,CbWK,CMeH,AmCnBA,CnCmBC,AmCnBA/e,EoJAI,CAACugB,OpJAK,GAAG,EAAE,CoJAG,CAAC,CvLmBD,AmCnBA,EAAE,EnCmBE9rB,AuLnBE,CpJAD,AoJAE,CvLmBD,GAAG,AmCnBA,InCmBI,GAAGA,EAAE,CAACE,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;AoJvBjF,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AMAA,ARCA,A+BAA,ArHFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AJAA,AlBAA,AFDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JTE,A5DOA,ALAA,AzFAA,ANAA,AbWE,AyCHF,EiBLE,AmDDA,AL/DA,AlGuFAD,AQxBA,AN/DA,EyG6DE,AFvBA,A5FuBA,AFvBA,AwB+BAmL,AoJDEygB,A/LDA,CmHNDzW,A3G0BA,Aa1BAA,CuCGC,ApDuBAjV,APXA,C8KtBCmjB,A3DUAxS,A9FAAA,AqBKA,AoJDE,CnIJD,AmIIEib,A/LDA90B,G+KbC,ApIeAmU,CwERC,A9FAA,ArBME,CQoBD,CmClBC,CwERC,A9FAA,C+FGC0F,A5GuBA9Q,AcvBA8Q,C8FAA,A9FAA,AyKIG,CvLmBD,APXA,CkHfC,ACGA,A/FHA,ACGA,AqBKA,CAAC,A1COD,A8LRGjP,EpJCA,CoJDG,C9LQF,CAAC9M,C0CPE,CAACmW,Q1COO,K0CPM,GAAGE,GAAG,CAAC,KAAK,IAAIJ,QAAQ,KAAKoR,WAAW,IAAIA,WAAW,KAAK,CAAC,CAAC,EAAE,IAAI,CAAClR,aAAa,GAAGkR,WAAW,CAAC,KAAK,IAAI,CAAClR,aAAa,GAAGoR,UAAU;AiHL/K,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AMAA,ARCA,A0FVA,AhLQA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E2CCE,AuDHA,ACGA,ANHA,AJ7DA,AoFyEA,AzKZA,ACGA,APHA,AL7DA,ARwEE1hB,C0DRD,A8ChEA,AhGAA,CFuFC,CkGvFC,AhGAA,CyG6DC,ACGA0M,ANHA,AGvBA,A5FuBA,ACGAA,APHA,AIvBA,AnB6BE,CmHNDe,ALAAA,AzFAAA,ANAAA,CdeC,EgHtCEpC,AzGiDAhG,AWjDAgG,AnB6BE/O,CoHHD,A9FAA,C6FHC,ALAA,AzFAA,ANAA,CP0BC,C4GvBC,AH1BA,AzGiDA,AcvBA,AH1BA,AjBkCE,AFLA,CmHND,ALAA,AtG0BA,Aa1BA,ANAA,EkGvBE,A9FAA,AjBkCE,CkHRD,A9FAA,E6FHE,ALAA,AzFAA,ANAA,AdeA,CgHtCC,A9FAA,AjBkCE,C+GlCD+b,A9FAAA,AlBsCD,IAAI,CAAChe,EgHtCG,A9FAA,C8FAC,A9FAA,C8FACqe,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,AlBsCD;A2JZpC,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AMAA,ARCA,A0FTA,AhLOA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E2CCE,AuDHA,ACGA,ANHA,AgFYA,AtLcA,Aa1BA,ACGA,APHA,AbWE3Y,AyCHF,EoENE,AL/DAkH,A1F+DA,AN/DAA,EyG6DE,ACGA,AH1BA,A5FuBA,ACGA,AH1BA,A4K8BE,A/LCA,CmHRDyG,AT7DA,ArF6DAA,AX7DA,CoLyECzG,A7LGA,C8KrBCuhB,ArEvDA,AhGAA,CuGsCCnd,A9FAAA,AjBkCE,AFHAnP,C8LID,E1ETE,A9FAA,ApBQE,C0DRD,AqD1BA,A6EmCA2xB,A3KnCA,EyC0BE,A8ChEA,AhGAA,AVqEE,CmHRD,ACGA,A0ESA,AzKZA,ACGA,C8FACxO,A0ESA2E,AxKTA3E,ApBQE,C+GlCD,A9FAA,C4JiBCmJ,A5DMA,A9FAA,ArBQE,C+KdDE,A/KcE,EiH/BA,A9FAA,AnB+BE,CoHLD,A9FAA,ArBYA,C8KrBC,A5DMA,AFvBA,A5FuBA,AFvBA,C2KmCC,A7LGC,C8KrBA3qB,CAAC,C3DSC,A9FAA,ArBYA,C8KrBC,G9KqBG,CAACrB,KmHZK,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA,GrBYG,CmHZC,A9FAA,ArBYA6B,CmHZCqO,A9FAAA,MrBYM,CAAC,CAAC,CAAE,KmHZI,A9FAA,C8FACC,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA;AsIA3E,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AMAA,ARCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,AwECA,AvKDA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JRE6b,A5DMA,ALAA,AgFYA,AtLeA,Aa3BA,ANAA,AbWE9oB,AyCHF,EiBLE,AmDDA,AKCA,AVhEA6D,A1F+DA,AMCA,AZhEAA,EqKuDE,A5DMA,ALAA,AgFYA,AtLeA+B,Aa3BA,ANAA,A4BQA,A1COA,A8LRE+qB,C5EPD/iB,ALAAM,AgFYA7G,AzKZAuG,ANAAM,A4BQAwC,A1COA,CmHZC,AH1BA,A3F0BA,AH1BA,AlBuCH,ADRO,C+KdHkX,A3DSAnI,AVhEA,ApFgEAA,AZhEA,CkDgEC,AkISA,CpFzEC,AhGAA,CkDgEC,AkISA,A9LJI,CQmBH,ARnBInmB,CmHRH,A9FAA,C+FGC,ANHA,AGvBA4O,A3F0BA,APHA,AIvBAA,A4K8BE,C3EJD,A5GwBA5C,AcxBA,AyKIEksB,CnIJD,AmHTA,A5DMA,A9FAA,AnBWE,C6KjBD1I,AjEMA,A/FAA,AbWEroB,EwGxEAkL,AhGAAA,AiCqEA,C3CAK,C+KdH,A5DMA,AFvBA,AzGkDA,Aa3BA,AFvBA,AnB+BI,C8GRH,AGvBAxD,AzGkDA/C,AO3BA,AIvBA+C,AwB+BA3M,CoIdC2C,CAAC,ArEvDAwN,AhGAAA,ARwEE,C6KjBD,A3DSAnG,AVhED,ApFgECA,AZhED,ARwEG,CMgBD,AmCnBA,AoJDE,C3EJD,AVhEA,AlGwFA,AcxBA,AZhEA,AiCqEAsL,AoJDEugB,E3EJA5lB,AH1BA,A3F0BAA,AH1BA,C8FACiN,A9FAAA,A4K8BE,CAAC,CpJCD,A3CAI,CoHLH,A9FAA,AqBKA,A3CAI,EoHLF,A9FAA,CtBKG,C2CAD,CAAChI,G3CAK,KiH/BG,A9FAA,C8FACjF,A9FAAA,I8FAI,A9FAA,AwB+BA,CAAC,CsE/BC,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AyI0B7D,ACCA,AFAA,AOAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AMAA,ARCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADSA,AoLTA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JREqd,AvKkCA,EoDzBE,AmDDA,A+EUA,A9KVA,AfcF,CAAC,C8KtBG,A3DSAnQ,AH1BA,APtCA,AlGyFA/S,AczBA+S,AH1BA,ATtCA,AqLqEE,EhFNA,A/FAA,AhBMI,C+KdHmQ,AhEQA9b,A/FAAA,C4CCC,AwDAA,AVhEA,AoFyEA,AxKTA,AZhEA,AqLqEE,C3ELDF,AVhEAzB,ApFgEAyB,AZhEAzB,AT6EF,C2DbG,A5DKI,C+KdH,AvKkCA,ARpBI/R,C+KdHuuB,AekBApoB,CpFzEC,AhGAA,C0GgEC,A9FAA,CyJTC,AgBcEoE,ChBdD1F,A3DSAqH,AVhEA,AlGyFAxL,AczBAwL,AZhEA,CqKuDC,AekBA,ClITC,AmHTA,A3DSA,A0ESA,AxKTA,CtBKK,CoHLHiG,AVhEA,ApFgEAA,AZhEA,AqLqEE,A/LAE,C+GNH,AL/DAH,A1F+DA,AN/DAA,CqG+DC2B,A/FAAA,EoGCE,A9FAA,C8FAC,AVhEA,AlGyFA,AczBA,AZhEA,AqLqEE,EvLqBzB,CkG1F0B,AhGAA,GqG+DG,A/FAA,C0F/DC,AhGAA,AVqEI,C+LAD,A/LAE,C+GNHpJ,AvG2BzB,AQ3ByBA,C+KMG,C/LAC,G+GNC,AvG2BzB,AQ3ByB,EhBMI,e8LIa,CAAC;AlCT3D,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AMAA,ARCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUAxE,AoLVA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E8JRE,A5DMA,ALAA,AgFYA,AtLkBA,Aa9BA,ANAA,A4BQA,EiBLE,AmDDA,AKCA,ApGDA,AMCA,C8FAC,A9FAA,CyJTC6U,A3DSA,AH1BAoF,APtCA,AlG2FA,Ac3BA,AH1BAA,ATtCA,AT6EF,CCJG,C0DTC,AmDDA,A/FAA,AdUA1Y,A6LJE,A/LAE,C+KdH,AhEQAuM,A/FAAA,C4CCC,A8ChEA,AhGAA,CgGAClT,AhGAAA,CqKuDCP,AgBcEoH,A/LAE,CiH/BH,AzGqDA8E,AWrDA,AlBuCF,ADRMtM,GiH/BD,A9FAA,AjBmCA,CwGzEC,AhGAA,AT6EF,A8LRI,ChBdD,AgBcEmW,ChBdD9V,A7KkBA,C+GnCCuO,APtCA,AlG2FA,AWrDAA,ATtCA,CgGAC,AhGAA,AVqEI,CAAC,C+KdH,AhEQA,A/FAA,C+JRC4gB,AhEQA7b,A/FAAA,CR4BC,AuLtBE,CAACpJ,C9E/BD,A9FAA,C4JiBC,A9DjBA,A9FAA,C4JiBC0kB,A7KkBAzoB,E6LJI,C9E/BD,A9FAA,AjBmCA,A6LJE,A/LAE,C+GNH,AEzBA0Y,AjGyBA,AGzBAA,AnB+BI,CEIH,A6LJE,CvLsBD,CuKpCC,AhEQA3U,A/FAAA,AhBME,C+KdD,AvKoCA,CuKpCC,CAAC,EhEQE,A/FAA,AhBME,MiH/BI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AyI0BjD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AMAA,ARCA,AtFFA,AoLCA,ADAA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,E2CCE,AmHTA,AhEQA,AIFA,ACGA,ANHA,A9FEA,AKFA,ACGA,APHA,AbYE,AyCJF,CiBLC,AwDAA,A9FAA,C2F1BC,APtCA,AlG2FAf,AWrDA,ATtCA,AT6EF,E8KtBIoR,AjEMA,A/FAA,AbYErT,AyCJF,CmERCoM,A/FAAA,A4BQAe,C3CAK,C+KdH,A3DSA,A9FAA,CyJTC/T,A7KkBE,A6LJA,E/LAI,CEID,AFJEX,G+KdD,AjEMA,AtG8BA,AO9BA,CP8BCsM,ANlBE9E,CyCJD,CoIdC3C,AjEMA,A/FAA,CgKNC,CAACgpB,ApIcA,A3CAI,CEID,AFJE,CEIDpmB,C4GZD,AtG8BA,AO9BA,EP8BE,AmCtBA,InCsBI,CuKpCC,CAAC,AvKoCAF,ANlBE,C6KlBD,A7KkBE5G,AFJE,CAAC,C+KdH,CvKoCC,CAAC,ARtBE,EEIE,EFJE,CEIC,CAAC,CAAC;A0JT9C,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0BDA,AhHDA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,A3GAA,A4HCA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,C8FAC,A/FAA,C4CCC,AmDDA,AIFA,AT7DA,AoFyEA,AtLkBA,AQ5BA,AKFA,AX7DA,ARyEE,ADIJ,CyG7EG,AlG2FA,AE3FA,CqKuDC,A3DSA0e,AH1BA,A3F0BAA,AH1BA,CuFtCC,AhGAA,CRyEG5X,E6KlBA0nB,A3DSA,AH1BA,A3F0BA,AH1BA,AnB+BI,CoHLH,AH1BAlQ,AzGqDA,Ac3BA,AH1BAA,C4K+BG,E/LAI,C+KdH,A3DSA,A9FAA,AtBKIjf,EoHLF,A9FAA,ApBSE,A6LJA,ChBdDI,A7KkBEO,C0DTD,EAAE,AwDAA,A9FAA,AyKKE+G,CAAC,C3ELD,AH1BA,A3F0BA,AH1BA,AnB+BI,C+KdH,A9DjBA,A9FAA,AjBmCE,AFJE,C+KdH6K,AgBcE,CAAC,C3ELD,AH1BAyN,A3F0BA,AH1BAA,AjBmCE,CkHTD,A9FAA,ApBSE,A6LJAtY,CAAC,ChBdD,A7KkBE,C6KlBD7C,CAAC,AgBcE0F,ChBdDsjB,C9DjBC,A9FAA,G4K+BK,CAACltB,E/LAI,CAAC,E+KdF,CAAC,AgBcE,A/LAAqC,C+KdD,CgBcG0E,CAAC,ChBdDkT,CgBcG,C/LAC,C+KdD,AgBcE,ChBdDja,MAAM,CAAC;AnBSzD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,AtFFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AoBCA,ArCDA,EkGFE,ACGA,ANHA,AgFYA,AzKZA,ACGA,APHA,A4BQA,A1CQA8B,E2DbE,AmHTAmY,A9DjBA,APtCA7M,AlG2FA,AWrDA,ATtCAA,ARyEI,EFHA,C+KfD,ArEvDA,AhGAA,AVsEE,C8LGD8mB,AtLkBAztB,CkG3FC,AhGAA,ARyEI,C0DTH,AmHTAhH,C9DjBC4f,AzGqDA,AWrDAA,CyC0BC,AmIKE,C7LIGtY,AFHF,CQqBD4E,ANlBI,CwGzEH,AhGAA,CqKuDC,CnHSC,AmHTArF,A7KkBI,AFHFjE,CiHhCD,A9FAA,AjBmCI,ADIJP,A8LRE01B,CDID,A7LIAjzB,CCJKwC,CMkBH,ANlBI,C4LAHitB,AtLkBAh0B,CuKpCC,A/KeE,C+KfD,A7KkBI8G,C6KlBH0nB,AekBA,CAAC2F,CCJG,A/LCA,CQqBD,EuKpCE,A9KsBA,A8LREvqB,A/LCA,E+KfAqQ,A9KsBAzV,ADPE,CEGG,CAACxE,C6KlBH,AgBcE,ChBdD,AgBcE+G,ChBdD,AgBcE,CDID,ACJE,CDIDyD,C5LAK,E4LAF,A5LAIzD,C4LAH,A5LAI,ADIJ,ECJM,ADIJ,ECJM,S4LAK,CAAC;AlCTzD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,E8JRE,A5DMA,ALAA,AGvBA,A6EmCA,AzKZA,ANAA,AIvBA,AwB+BA,EiBLE,A8ChEA6C,AlG2FA,AE3FAA,AT6EF,EkHhBI,A2EYA,AzKZA,AnBYMhD,AyCJN,CwERCyS,A2EYA6a,AzKZA7a,AsBQAN,CnCsBC3Q,APdF,ADPM,C0GtEH,AhGAA,AT6EF9H,C2DbG,A1DSM,CiHZL,AT7DA,ArF6DA,AX7DA,ARyEMyG,C0DTL,A1DSM,A6LJJ,A/LCE,CAAC1H,CmHTH,A9FAA,CnBYO,CAAC,AyCJN,CnCsBC,ANlBM,CiHZL,A2EYA,AzKZA,A0KQEo4B,CpJAD,A1CQF,C2DbG,A8ChEA9lB,AoFyEA,AtLkBA/F,AE3FA+F,ARyEM7K,CFHD,CCOLvC,ADPM,E0GtEFoN,AhGAAA,AiCqEA,C+DrEC/N,AhGAAA,CgGAC,AhGAA,EgGAE,AhGAA,CRyEO,CMkBL,ANlBMmD,A6LJJ,CvLsBD4E,ANlBM,CAAC,CDIP,A8LRIkqB,A/LCE,CAAC,GAAC,CQqBD,EAAEpvB,CuLtBG,CAAC4wB,A/LCA,CQqBD,CAAC,WuLtBa,CAAC,KAAK,CAAC;AnCLhE,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA3S,AH1BA,AlHwBA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCAA,AH1BA,AyH0BA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,CgGzBC,A9FAA,C4JiBC,AjEMA,A/FAA,A4BQA,CsE/BCpV,A9FAAA,CyC0BC,AkISA,AtLkBA,ANlBI,ADIN,EyG7EI,AhGAA,EkDgEE,A3DaF,ADPM,C+KfH2K,A3DSA,A5G2BA,Ac3BA,ArBaFzZ,C2DbG,AwDAA2G,AVhEA,AoFyEA,AxKTAA,AZhEA,EqKuDE,AgBcEswB,A/LCE,CQqBH1wB,ARrBI1H,C0GtEH,AoFyEAmG,AtLkBA,AE3FA,CgGACxF,AhGAAA,EF2FE,CyGrDC,AzGqDA,AWrDA,CiG0BC,AH1BAie,A6EmCA,AxKTA,AH1BAA,AlBuCF,CmHbGjX,A0ESA,AtLkBAD,Ac3BAC,CoFhEC,AlG2FA,AE3FA,AVsEI,CCOLxC,ADPM,EoHNF,A5G2BAiC,Ac3BA,AyKKE,CAAC6wB,CrFrED,AhGAA,C0GgEC,AVhEA,AlG2FA,Ac3BA,AZhEA,EgGAE,AlG2FA,AE3FA,EF2FEvwB,CAAC,CPdD,COezB8B,AuLvB8B,A/LCE,CAAC,C0GtEH,AhGAA,C0GgECoO,A9FAAA,AyKKEygB,CrFrED,AhGAA,AVsEE,EiHhCA,A9FAA,C4K+BG,C3ELD,AH1BAjnB,A3F0BA,AH1BAA,A4K+BEknB,A/LCA,EoHNAzgB,A9FAAA,Ed4B1B,CAAC9O,CyGtD6B,A9FAA,C8FACkX,A9FAAA,E4K+BI,C3ELD,A9FAA,AyKKEkY,E3ELA,A9FAA,Ed4B1B,CAACzwB,CAAC,CAAC,EAAE,AuLvB8B,C9E/BD,A9FAA,A4K+BE,E9E/BA,A9FAA,CXsD3B,CsLnB6B,CAAC,AtLmB5BH,IAAI,CAAC,IyGtDgC,A9FAA;AyI0B5E,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0FTA,AhLOA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AiBCA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,A1ICA,AEHA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,E2CCE,AuDHA,ACGA,ANHA,AGvBA,A6EmCA,AtLmBA,Aa/BA,ACGA,APHA,AIvBA,AjBmCE,AyCJF,CiBLC,C3DaD,EmHbI,ANHAoS,AJ7DA,ApFgEA,APHAA,AL7DA,AiCqEA,CyELC+L,A9FAAA,AqBKAjR,C3CCK,CiHhCH,A9FAA,CuFtCC7P,AhGAAA,AT6EFY,CyG7EG,AhGAA,CT6ED,A8LRIuyB,A/LCE,CiHhCH,A9FAA,AwB+BA,A3CCI/3B,C8GTH,AJ7DA,A3F6DA,AL7DA,CT6ED,A8LRI,CpJAD,AoJAEk4B,CjFRD/kB,A/FAAA,C2F7DC,AhGAA,CgGACpB,AhGAAA,AT6EF,CAACtM,C0CRG,A3CCI,CoHNH,A9FAA,AtBMI,CoHNHqgB,AVhEA,ApFgEAA,AZhEA,CoG6DC,A/FAA,C+FAClM,A/FAAA,EgLQI,CAACwe,I9LQA,ADPM,CCOL,ADPM,GoHND,A9FAA,AtBME,CCOH,C6GhBG,A/FAA,AdgBFn3B,CmHbG,A9FAA,CyKKG,CAAC,A/LCA,E8GTA,A/FAA,CqGGC,A9FAA,IwFHI,A/FAA,AdgBF,CAAC;A2Jb/C,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0FRA,A9DlBA,AlHwBA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AxGzBA,AyH0BA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,CgGzBC,A9FAA,CyC0BC,AuDHA,ACGA,ANHA,AGvBA,AzGuDA,AahCA,ACGA,APHA,AIvBA,AjBmCE2F,AyCJF,EsE/BEqJ,A9FAAA,AlBuCF,E6GhBI,AJ7DA,A3F6DA,AL7DA,CoG6DC2J,A/FAAA,AbYE,CAACjS,AFHE,C+KdH+mB,A3DQAxW,A5G6BA,Ac7BAA,CoFhECvJ,AhGAAA,AT6EFjJ,A8LRI,E7LIE,ADIJ,ADPM,C0GtEH,AlG6FA,AE7FA,ARyEE,AFHE1F,EoHNF,A9FAA,ArBaF,C8KrBG0uB,A3DQA5mB,AVhEA,ApFgEAA,AZhEA,CqKwDCjD,A7KiBE+C,C6KjBD,ArExDA,AhGAA,CuGsCC,A9FAA,AlBuCF,C2DbG,AmHRA4mB,AjEKA,AGvBA5P,AlGuBA,AIvBAA,AlBuCFnZ,CyG7EGb,AhGAAA,ARyEE,AFHE,C4DNH,AmHRA,ArExDA,AhGAA,ARyEE4B,AFHE,C8GTH,AJ7DA2L,A3F6DA,AL7DAA,CqKwDC6Z,AjEKArS,A/FAAA,CqGGC,A9FAA,ApBSE,CkHTDhS,A9FAAA,CoFhEC,AhGAA,ARyEEJ,C6KjBD,EAAE,A3DQA,A9FAA,C8FACd,A9FAAA,ApBSE,C4GZD,A/FAA,AbYE,ADIJ,CCJK,ADIJ,ADPM,CAAC,CoHNH,A9FAA,C8FAC,A9FAA,CrBaD,ADPI,CCOHtF,EmHbI,A9FAA,C2F1BC,A9FAA,CiG0BCyW,A9FAAA,AtBME,CiHhCD,A9FAA,IiG0BI,A9FAA,CrBaD,CmHbGC,A9FAAA,ArBaF,EgHvCI,A9FAA,E8FAE,A9FAA,IiG0BI,A9FAA,C8FAC,A9FAA,I2F1BIqI,A9FAAA,O8FAOA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AyI0BxE,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AnH8BA,Ac7BA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,CmGCC,A5G6BA,Ac7BA,CyJRC,A5DKA,AFvBA,A6EmCA,AzKZA,AFvBA,AjBmCE,AyCJF,EiBLE,A3DaF,E8KrBIpb,A5DKA,AFvBAqb,APtCA,ArF6DA,AFvBAA,ATtCA,ARyEEvZ,AyCJF,CoIbC,A5DKA2a,A9FAAA,AsBQAhN,C1CQD,A8LRI,A/LCE,CCOL/Q,A8LRI,CnILD,C1DSG,C0DTD,AqD1BA,A9FAA,AjBmCE7C,AyCJF,A3CCI,C0GtEHiE,AhGAAA,AVsEI5E,C0GtEH,AhGAA,CuGsCC,A9FAA,AwB+BA,AoJAE,EnILA,A8ChEA4E,AhGAAA,CgGAC,AhGAA,ARyEE,CiHZD,AFvBA,APtCAwN,ArF6DA,AFvBA,ATtCAA,CiCqEC,C3CCK,CmHTH,A9FAA,ApBgBF,ADPM,C0GtEH,AhGAA,ARyEE,CAAC,CwGzEDzD,AhGAAA,AT8ErBnJ,EkHjBuB,A9FAA,ApBiBrB,CyG9EsB,AhGAA,ARyEE,CAACqB,EDKrBnB,CyG9EsBnB,AhGAAA,CgGAC,AhGAA,AT8ErB,GyG9EwBK,AhGAAA,AT+E5B,CyG/E6B,AhGAA,ARyEE,ADM9BY,CyG/E6B2M,AhGAAA,AVsEI,CEGD,ADM9B,ADTgC,G0GtED,AhGAA,AT+E5B,ADT8BnP,ICS1B,EDTgC,GCS3B0C,EAAE,GAAG,IAAI,CAAC,GACzB,CAACA,EAAE,GAAG,IAAI,KAAKF,EAAE,GAAG,IAAI,CAAC;A2JhBjC,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,AtFFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AnH+BA,AoI9BA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,E8JPE,A5DKA,ALAA,AGvBA,A6EmCA,AzKZA,ANAA,AIvBA,AwB+BA,EiBLE,A1DSIe,ADQN,E8KzBIklB,A5DKA,AT7DA,ArF6DA,AX7DA,AVsEE,C+KdD,A5DKAjK,A9FAAA,ArBSE,C8LGDuT,CtLqBCvoB,CoD9BC,AmIKE,C9LYH,C2DjBG,C8ChECmC,AhGAAA,AVsEE,CEGG,CAACzH,ADQN,CyGjFG,AhGAA,ATiFF1D,CDXKR,G4DNC,CpD8BCwJ,C2GjCC,A2EYA,AtLqBA/C,AajCA,CrBSG,EmHTA,A2EYC,AzKZD,AnBYI,CAAC,CFHD,CQwBD,ARxBE,CCWH,CkHpBG,A3GiCAqC,AajCA,ArBSE,IQwBE,EAAEf,KsLrBK8pB,GtLqBG,EAAEpoB,MsLrBM,CAACuoB,AtLqBA,EAAE,SsLrBS,CAAC,CAAE,EAAC;AlCTpE,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,E8JNE,A5DIA,ALAA,AGvBA,A6EmCA,AtLqBA,AajCA,ANAA,AIvBA,AjBmCE,AyCJF,A1CYF,E2DjBI,A8ChEA,AhGAA,CqKyDC,C5DIC,A3GiCAtoB,AajCA,AsBQA,CwERC+U,A3GiCA,AajCAA,AsBQA7M,CiBLC,AkISAyf,A9LHI,E4DNF,AmIKEwD,E/LCI,CAAC73B,E2CDF,GmJIG,AnJJA,GmJIGoF,A9LHI,CAAC,C2CDH,CwERC,A9FAA,G8FAG,A2EYA,AzKZA,CyKYC2uB,ACJE,CAACxpB,G5ERC,A9FAA,CrBSK,C8LGH,ACJE,A/LCE,C8LGHwqB,CCJGgD,C/LCC,E+LDE,CAAC,E/LCE,O8LGK,CAAC,EAAC;AlCTnD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUA,AoLVA,AxIFA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,CfUC,C0DTC,AuDHA,ALAA,AGvBA,APtCA,AoFyEA,AtLqBA,AajCA,ANAA,AIvBA,ATtCA,ATiFAtyB,C2DjBC,A8ChEA,AhGAA,CqKyDCX,CAAC,ArEzDA,AhGAA,CyG6DC,A2EYA,AtLqBAkH,AajCA,C8FAC0V,A2EYA2S,AzKZA3S,C0JJCthB,AgBYE,A/LCE,IQwBA,ARxBI,CAACJ,C+KbH,A9KwBAyF,C8KxBC8M,A9KwBA5M,E6LRE,EAAE,CfhBC,CAAC,A/KaI,C+KbH,A5DIA,A9FAA,ArBSI,C+KbH,C9KwBC,CkHpBC,A9FAA,CpBoBC,IkHpBI,A9FAA,IrBSQ,CAAC,GAAC,KAAK;A4JN7C,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AIAA,AEAA,AjBAA,E2CCE,AuDHA,ALAA,AGvBA,AzGwDA,AajCA,ANAA,AIvBA,AwB+BA,EoIXE,ArE1DAoI,AoFyEA,ApLzEAA,ATiFF,EkHpBI,ALAA,AtGiCApB,AajCA,ANAA,AgLQE,C5ERDgV,ALAA9H,AJ7DA,ArF6DA8H,ANAA9H,AL7DA,AqLqEE,C9LYH,ADXM,CiHhCH,APtCA,AvFsCA,ATtCA,ATiFFpW,C6LRG,CffCqB,CAAC,A/KYI,C+KZHnE,A5DGA,AFvBAiO,A5FuBA,AFvBAA,A4K+BE,A/LCE5O,C8LGHmG,AtLqBA,E2GjCE,A9FAA,CuCGC,A8ChEA,AhGAA,ATiFF,E2DjBI,AmHNA,AeeA,C3EZC,AFvBA,A6EmCC,AzKZD,AFvBA,AlB2CFR,CgH3CG,A9FAA,AnBgCI,C+KZH,AjEGA,A/FAA,AfSI,C+KZH,EjEGEwN,A/FAAA,CgKHCtO,CAAC,CAAC4qB,C9KuBD,EgH3CI5gB,A9FAAA,C2FuBC,A/FAA,AfSI,C8GTHgL,A/FAAA,AfSI,GAAC,C+KZD,CAAC,A9DpBA,A9FAA,C4JoBC,C9DpBC/K,A9FAAA,AnBgCE,C+KZD,K9DpBK,A9FAA,E2FuBE,AGvBA,AlGuBA,AIvBA,I2FuBI,A/FAA,M+FAM,A/FAA,qB+KYqBimB,cAAe,2BAA0B,CAAC;AlCTzH,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUA,AoLVA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,E6KUE,AtLsBAjqB,AmC1BA,EiBLE,AqD1BAqV,APtCA5V,AvFsCA4V,ATtCA5V,ATiFF,E8KvBIikB,ApIWA,CAAC7a,CoIXC,AgBWE,A/LCE,C+KZH1B,ArE1DA,AhGAA,CkDgEC,AmHNA,A9DpBA,A9FAA,AlB2CF/N,CgH3CGib,APtCA,AvFsCAA,ATtCA,ATiFF,C2DjBG,A5DMI,C+KZHwN,A/KYI3sB,CCWL0B,COcG,CAACqJ,AmC1BA,CiBLC,CqD1BC,A9FAA,C8FAC,A9FAA,AwB+BA,CsE/BCuI,APtCArM,AvFsCAqM,ATtCArM,CVsEK,CCWL,ADXM,C+KZH,A9KuBF,C8KvBG+kB,AvKqCA,AmC1BA,CnC0BC,CkG/FC/kB,AhGAAA,CuGsCC,APtCAyE,AvFsCA,ATtCAA,ATiFF,C8KvBG,A9DpBA,APtCA,AvFsCA,ATtCA,ATiFFjI,E8KvBI+qB,ArE1DA,AhGAA,EqK0DE,A9DpBA,A9FAA,C4JoBC/C,A/KYI,C+KZH,A9DpBA,A9FAA,AnBgCI,C+KZH,CAAC/D,A9KuBF,CAAC7mB,ADXI,K+KZG,A9KuBF,ADXI,C+KZD2tB,A9KuBF,CgH3CGriB,A9FAAA,AlB2CF,C8KvBG,CAAC8F,A9KuBF,C8KvBG,A9DpBA,A9FAA,AlB2CF,C8KvBG,A9KuBF,C8KvBG0V,A9DpBA,A9FAA,ClB2CD,EAAE,CAAC,E8KvBI,CAAC,A9KuBF,C8KvBG,E9KuBA;A2JjBzD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUA,AoLVA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,ALAA,AgFaA,AtLsBA3b,AanCA,ANAA,E6CGE,A3DiBF,E8KvBIlH,A9DpBA,APtCA,AvFsCA,ATtCA,CqK0DC,CvKsCC,AuL3BE,A/LCE,C8LIH,A5LDA8C,C0DTC,AmHNAxH,A9DpBA+L,APtCA,AvFsCAA,ATtCA,ATiFFhI,COeGsF,APfF,C2DjBG,A5DMI,CiHhCH,A9FAA,AjBmCA7B,AFHI5H,C0GtEH,AhGAA,ARyEAwG,ADQF9E,A8LZI62B,C9E/BD,APtCA53B,AvFsCA,ATtCAA,CqK0DC,CAACsG,AvKsCA,ANvBA,CMuBCyD,CNvBC7C,C0DTC,C8ChEC,AhGAA,AqLqEE,A/LCE,CCWL,ADXM,C+KZH,A9KuBF,C8KvBG,A7KeA,A6LJE2uB,ChBXD1xB,AvKsCA,CuKtCC,ArE1DA,AhGAA,ARyEA,CwGzEC,AhGAA,ATiFF,C8KvBG0pB,A9KuBF/qB,CyGjFG,AhGAA,CqK0DC,CAACwO,CAAC,AgBWE,ChBXD,AgBWE+lB,ChBXD,ErE1DE53B,AhGAAA,ATiFF,CAACS,CDXO,CAAC,G0GtED,AhGAA,ATiFF,ADXImC,C0GtEDuP,AhGAAA,ATiFF,CAAC,EAAE,A8LZI,C9LYH,A8LZI,CrFrED,AhGAA,ATiFF,ADXI,C0GtED,AhGAA,CgGAC,AhGAA,ATiFF,CyGjFG,AhGAA,CTiFD,A8LZI,C9LYH,A8LZI,G9LYD,GAAG;A2JjBzD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,ALAA,AtGmCA,AanCA,ANAA,AbYE,AyCJF,EiBLE,AmHNA,AeeO8hB,A7LQT,EkHpBI,AT7DA,AlGgGAroB,AanCA,AX7DA,ARyEE,AFHA,CmHTDoI,A9FAAA,AnBYE5N,AFHA,C4DND,AqD1BAsI,A9FAAA,A4K+BEypB,EnILA,A8ChEA5pB,AhGAAA,ARyEE,ADQJvK,CAAC,COeG,CkGhGC,AhGAA,ARyEEoC,AFHA,CiHhCD,A6EmCO,A3KnCP,AlB2CF9E,CgH3CGyK,A9FAAA,A4K+BE,C5ERD,AT7DA/L,ArF6DA,AX7DAA,ARyEE,A6LJA63B,CvL2BDv3B,CyG1DC,A9FAA,CgGuBCyS,AFvBA,A5FuBAA,AFvBA,GuFtCG,AhGAA,ATiFF,CyGjFGX,AhGAAA,ATiFF,E8LZM,C5ERD,A3GmCA,AanCA,C8FAC4B,A9FAAA,ApBoBF,COeG,APfF3Q,A8LZI8G,KAAK,CrFrED,AhGAA,AqLqEEjK,CrFrEDoL,AhGAAA,CyG6DC,AT7DA,ArF6DA,AX7DA,ATiFF,CAAC7K,IkHpBM,AT7DA,ArF6DA,AX7DA,CgGAC,AhGAA,ATiFF,A8LZI,CrFrED,AhGAA,ATiFF,A8LZI,C9LYH,A8LZI,E5ERA,A9FAA,ApBoBF,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG;A2JjBzD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,E2CCE,AkDHA,A/FAA,AbYE,AyCJF,CiBLC,CmHLC4qB,AeamB1d,AtLwBnB/B,APdF,C8KvBG,CrE3DC,AhGAA,ARyEE,CAACnE,C6KdDymB,A9DrBA,A9FAA,A4K+BEyJ,A/LCE,E0GtEFnzB,AlGgGA,AEhGAA,ATkFFgB,CyGlFG,AhGAA,AqLqEE,C7LIC,A6LJAsyB,A/LCE,CQ0BHzuB,AR1BIzJ,C0GtEH,AhGAA,ATkFF,CCTK6H,C6KdD,CAAC/C,A9KuBF,C8KvBG,ArE3DA,AhGAA,ATkFFZ,CyGlFG6N,AlGgGA,AEhGAA,ATkFF,C8KvBGlN,AvKqCA6F,ANvBE,C6KdD,A9KuBFvG,ADZM,C+KXH,A9KuBF,ADZM,C0GtEH,AhGAA,AqLqEE,C9LaHC,A8LbIm0B,C9LaH,CAAC,COcG,APdF1yB,GOcKiE,APdF,CAAEhE,A8LbG,CAAC,C/LCG,CAAC,EQ0BF,CAAC0F,AR1BE,CCYF,GDZM,CCYD,COcC,CAAC,IAAI,CAAC;AoJhCjD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUA,AoLVA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,E2CCE,AuDHA,ALAA,AgFUyB,AzKVzB,ANAA,A4BQA,CmJE0B,CfZxBgjB,AvKqCA/kB,EuKrCE,AjEEA,AGvBA,APtCA,A3F6DA,AIvBA,ATtCA,ATkFF,A8LbI,ChBVDgiB,AjEEA9qB,A/FAAA,CgKFC,A/KWI,E0GtEF+G,AlGgGA,AEhGAA,ATkFF5B,C8KvBG6mB,ArE3DA,AlGgGAhiB,AEhGA,CVsEK,C8GTH,A/FAA,AfSI3K,C0GtEH,AhGAA,CgGAC,AhGAA,CoG6DC,A/FAA,C+FAC,A/FAA,AdqBF,I8KvBM,A9KuBF,ADZM,C+KXHgsB,A/KWI,CQ0BH,CoDhCC,EAAE,AmHLA,AvKqCA,CAAC,CuKrCCwC,A9KuBF,E8KvBI,A9KuBF,C8KvBG/C,CAAC,CAAC,CAAC/D,A/KWI,CAAC,GAAC,E+KXA,CAAC8G,EAAE,A/KWE,C+KXDvc,CAAC,CAAC,CAACyV,MAAM,CAACtnB,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACsnB,MAAM,CAAC,CAAC;AnBKhF,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A5GCA,ACAA,AHAA,AmCDA,ANAA,A6FQA,AhEPA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUA/f,AoLVA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,A3GmCA,AanCA,AsBQA,CnC2BC,CoDhCC,AmHLA4mB,A7KcA,A6LJE,C7LID1mB,C6KdC,A5DEA,AFvBA+G,APtCA,ArF6DA,AFvBAA,ATtCA,AiCqEA8K,CoIVC1H,A5DEAgD,A9FAAA,C0JFC,A9KuBF,ADZM,CQ0BH,CoDhCC,CmHLC0X,CnHKC,A5DMI,CiHhCH,APtCA/nB,AvFsCA,ATtCAA,AVsEI5E,CiHhCHof,APtCA,AvFsCAA,ATtCA,ARyEA,AyCJA,CzCIC/X,ADSFvB,CyGlFG,AhGAA,CkDgEC,AjBKAqN,CwERC,A9FAA,AnBYA,G6KdG,A5DEA,A9FAA,AnBYA,AFHI,C+KXH6Y,A5DEA,A9FAA,ApBqBF,ADZM,CmHTH7Y,A9FAAA,CsBQC,CAACyG,A1CaF,C8KvBG,EAAE4U,EAAE,A5DEA,AFvBA,A5FuBA,AFvBA,AlB4CF,C8KvBG/C,A5DEAxW,AFvBAvU,A5FuBAuU,AFvBAvU,C4JqBC,A/KWI,C+KXH,A7KcA,AFHI,C+KXHgnB,E/KWI,E2CDA,EoIVE,A9DrBA,A9FAA,C4JqBC8G,A/KWE,CmHTD,AFvBA,A5FuBA,AFvBA,C4JqBC,ApIUA,CoIVCvc,CAAC,CAAC,A9DrBA,A9FAA,C4JqBC0V,A9DrBA,A9FAA,C8FAC,A9FAA,AwB+BA,KoIVK,CAAC,CAAC;AnBKvD,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6FSA,AhERA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,E8JJE,AjEEA,A/FAA,AbYE,AyCJF,AoJAE,ChBVD,CnHKC,AqD1BA,AzG0DA,AW1DA,C8FAC,A9FAA,C8FAC,A9FAA,AjBmCE,AyCJF,A1CaF,CCTKnhB,AyCJFoT,C+DrECjI,AhGAAA,AVsEI,C8LEHiiB,ClIRC,A1DSE,C6KdDnI,A7KcE1jB,C0DTD,AmHLA,A/KWI,C+KXH4nB,A/KWI3vB,G+KXD,A7KcE,C0DTD,AmHLA6E,A7KcE,C6KdD,ArE3DA,AhGAA,CqK2DC,ArE3DAD,AoFwEAgvB,ApLxEAhvB,CgGAC,AoFwECuO,ApLxED,AiCqEA,C+DrEChB,AhGAAA,ARyEE,AFHE,CAAC,CEGD,AyCJF,CoIVC,ApIUAwH,CoIVC,ArE3DA,AhGAA,CqK2DC,CrE3DChL,AoFwEC,ApLxEDA,ARyEE,CAAC9G,C4LDA,CpFxEA,AhGAA,EgGAEH,AhGAAA,AiCqEA,C+DrEC,AhGAA,ARyEE,AFHE,C0GtEH,AhGAA,ARyEE,AFHE,GAAC,KAAK;A4JN5C,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAA2d,ArHFA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCAA,AsHAA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUA,AoLVA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,A8KME,C7LID,C6KbC,A5DCA,ALAA,AGvBA,A6EkCA,AzKXA,ANAA,AIvBA,C8FAC,A9FAA,CyC0BC,AqD1BA,AzG0DA,AW1DA,E2FuBE,AgFWA4P,A/KXA,AdqBF,C6GrBGnb,A/FAAA,C6CGC,A8ChEApS,AhGAAA,AVsEI,C+KVH+jB,A3DIA,AVhEA,ApFgEA,AZhEA,CkDgEC,AmHJA,A3DIA3jB,A9FAAA,EtBMM,C0GtEHlD,AhGAAA,ATkFF1C,ADZMlC,C8GTH,AJ7DA,A3F6DA,AL7DA,CgGACmS,AhGAAA,CoLwEC,ChFXC,A/FAA,AdqBF,CAAChQ,CmHlBG,AVhEA,AoFwEA6wB,AxKRA,AZhEA,C0GgEC/M,AVhEAtlB,ApFgEAslB,AZhEAtlB,CTkFD,ADZM,C8GTH,A/FAA,AdqBF,ADZM,C8LEH,A7LUFmF,C6LVG+I,EpFxEE,AhGAA,I0GgEI,A9FAA,ArBkBF,C6LVG,CAAC9I,C1ERC,A9FAA,ArBkBF,KAAK,ADZM,C8LEH,A9LFI,C8LEHmD,E7LUA,ADZIlG,CoHND4U,A0EQA,AxKRAA,CwKQC,CAAC,EAAE,A7LUF,CmHlBG,A9FAA,AtBME,CCYH,CmHlBGC,A9FAAA,ErBkBA,C6LVG,A7LUF,C6LVG,I1ERI,A9FAA,E8FAEtE,A9FAAA,E8FAE,A9FAA,E8FAE,A9FAA;AsIAhE,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0FJA,A9DtBA,AlHwBA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AxGzBA,AyH0BA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADUAxN,AoLVA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,CgGzBC,A9FAA,CyC0BC,AuDHA,ACGAwN,AH1BA,A6EmCA,AzKZA,ACGAA,AH1BA,AwB+BA,CiBLC,CwDAC,AH1BAqL,AzG0DA,AchCA,AH1BAA,AlB4CF,CmHlBG,A9FAA,ArBkBF,CkHrBG,A2EYAzL,AzKZA,ApBqBF,ADZI,CmHTDQ,A9FAAA,AnBYA,CwGzEC/O,AlGgGAoH,AEhGApH,ARyEAoD,CkHTCiR,AVhEA,ApFgEAA,AZhEA,GgGAGrU,AhGAAA,CgGAC,AoFyEA,ApLzEA,ARyEA,CwGzECwN,AlGgGA,AEhGAA,CFgGCxF,C2GnCC,A9FAA,AnBYA,C4LACuG,CpFzEC,AhGAA,CyG6DC,A9FAA,K8FAK,A2EYA,AzKZA,C4FvBC,A6EmCA6f,A3KnCA,AjBmCA,CMuBC,EyG1DEnT,A9FAAA,C2KmCC,EtLuBEnf,EsLvBEyS,E1ETE,A9FAA,C8FAC,A9FAA,IwKSI,AtLuBA,CsLvBC6f,CtLuBC,GsLvBG,CAACryB,I1ETI,AH1BA,A3F0BA,AH1BA,CiG0BC,AH1BA,A3F0BA,AH1BA,CiG0BC,A0ESA,AxKTA,GwKSG,CAAC,EAAE;AlCT1D,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0FHA,A3DGA,AH1BA,AlHwBA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AH1BA,AyH0BA,AHAA,ANAA,AxGDA,AuEAA,A/FAA,ADWAoF,AoLXA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,CmGCC,A9FAA,CsCAC,AkDHA,A/FAA,A4BQA,EsE/BEqa,A6EmCA6U,A3KnCA7U,AlB6CF,EyGnFI,AlGgGA3W,AEhGA,AVsEF,CEIG,CAACxB,C6KbC0mB,EnHGE,A1DUA,ADSF,COaG,CoDhCC,ApDgCA/lB,AR1BF,C+KTG+lB,AeYA,A5LCA,C6KbCxqB,A7KaA,C6KbC,A7KaA,C4LDCgP,AtLuBA,APbF,ADbA,C+KTGsY,AvKmCA,AR1BFzrB,C+KTG,C9KsBD4F,C8KtBGhB,CAAC,EAAEC,AeYA,A7LUF,C8KtBG,AeYAmuB,A7LUF,CAAC,ADbA,C+KTG,A9KsBF,E6LVI,C7LUD,COaG,EAAElnB,GPbC,CgH7CG,AzG0DA,AW1DA,EX2DnBf,APdmBnF,CgH7CG,A9FAA,GlB6CC,CAAC,CAAC,CAAC,COclB,CAACmF,CyG3DsBqV,A9FAAA,AlB6CF,MAAM,COclB,EPdqBxa,COclBmF,GPdsB,CAAC,CAAC,CAAC,EOcjB,CAACA,QAAQ,GAAGA,GyG3DwBqV,A9FAAA,C8FACtL,A9FAAA,IX2DjB,CAAC,CyG3DsB,A9FAA,E8FAE,A9FAA;AyI0B3F,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A+BAAuQ,ArHFA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCAA,AmHAA,ANAA,AxGDA,AuEAA,A/FAA,ADWAtf,AoLXA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,E8JFE,A5DAA,ALAA,AGvBA,A6EmCA,AzKZA,ANAA,AIvBA,AwB+BA,A1CcF,E2DnBI,A5DMI,E8GTF,AGvBAsa,APtCA,A3F6DA,AIvBAA,ATtCA,CoG6DCtG,A/FAAA,AbaA,CAAC7R,C6KbC/D,A3DGA,A9FAA,CsCAC,AmHHA,A3DGA2D,A9FAAA,CyJHC8nB,CnHGC,A1DUA,C4GbC,AJ7DAjhB,A3F6DA,AL7DAA,ER0EE,C6KbC,AjEAA,AJ7DA,A3F6DA,AL7DA,CkDgEC,AmHHAoe,AjEAA,A/FAA,AbaA,E6KbE,A3DGA,A9FAA,CyJHC8C,A3DGA5U,AH1BA,A3F0BAA,AH1BA,I4JuBI,CAACrW,CAAC,A3DGA,A9FAA,CyJHC,CAAC,CAACkrB,A3DGA,A9FAA,MyJHM,CAACrE,CAAC,CAAC,CAACsE,A3DGAnY,A9FAAA,K8FAK,A9FAA,EyJHE,A3DGAC,A9FAAA,CyJHC,CAAC,CAAC0W,GAAG,CAAC1pB,CAAC,A3DGA,A9FAA,CyJHC,C3DGC0O,A9FAAA,E8FAE,A9FAA,E8FAE,A9FAA;AsIA5D,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0FHA,AhLCA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADWAxN,AoLXA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,AhBoBA,EkHtBE,ACGA,AH1BA,A5FuBA,ACGA,AH1BA,AwB+BA,A3CCC,E4DNC,A8ChEA,AhGAA,E0GgEE0f,AH1BAnF,AzG2DA,AcjCAmF,AH1BAnF,AwB+BA,CzCKC,AyCLAzG,CyELC,A9FAA,ApBUA1R,E0DVE,CwDAC,A9FAA,CsCAC,EqD1BE,A9FAA,CiG0BC,A9FAA,ApBUA,CkHVCud,A9FAAA,CsCAC,AqD1BA5b,A9FAAA,CjBoCC,EAAE,CAAC,CAAC,AyCLA,CsE/BC,A9FAA,C8FAC0B,A9FAAA,CwB+BC2H,KsE/BK,A9FAA,CiG0BC,AH1BA2M,A3F0BA,AH1BAA,CwB+BC,CAACjG,eAAe,IAAI,MAAM,SsE/BS,A9FAA,G8FAGwG,A9FAAA,c8FAc,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,E8FAEpQ,A9FAAA,e8FAe,A9FAA,C8FACoQ,A9FAAA,c8FAc,A9FAA,E8FAElB,A9FAAA,O8FAO,A9FAA,E8FAE,A9FAA;AyI0BpI,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0FFA9b,AhLAA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADWA0C,AoLXA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,AjBOA,EmHTE,ACGA0f,ANHA,AgFYA,AzKZA,ACGAA,APHA,E6CGE,AwDAA,AH1BAlb,A3F0BA,AH1BAA,CiG0BC4P,A9FAAA,CyJFC,AvKmCA,CuKnCC7W,A7KYA,C0DVC,A1DUA8E,C+GpCC,A9FAA,CyC0BC,CqD1BC0M,A9FAAA,CiG0BC,A9FAA,EyJFE,C3DECvB,A9FAAA,CpBUC,C6KZC4Z,A3DEA,AH1BA,A3F0BA,AH1BA,EjBoCE,CAAC,C6KZC,A7KYA;A0JVrB,ACCA,AKAA,AHDA,ANAA,A7JCA,A4HDA,AjCAA,AFCA,A0FFA9pB,AhLAA,AmLCA,A3GCA,AHAA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADYA,AoLZA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,AhBoBA,ADZAA,E4DPE,AuDHA,ACGAoiB,ANHA,AgFYA,AzKZA,ACGAA,APHA,A4BQA,EyELE,AH1BAlV,APtCA,ApFgEA,AH1BAA,ATtCA,C0GgECqV,A9FAAA,CyJFC,A5DDA,A3GoCA5Z,AapCA,ArBUA,C+KTC1I,A5DDAuW,A9FAAA,ArBUAvW,E8LEE2xB,A5LEA5sB,G+GrCG,AzG2DA,AW3DA,CjBqCCA,C6KbC,A9DxBA,A9FAA,AjBqCD,AFJC,C+KTComB,A3DEA,A5GiCAhlB,AcjCA,CpBWC,CAAC,AFJApK,CoHPCuY,A9FAAA,CwKSC,CAACpB,CfXC,AvKmCA,AR1BA,CmHVC,A3GoCA9L,AapCA,C+FGC,A9FAA,CyJFC+jB,C5DDCtb,A9FAAA,GyKYG,CAAC,AtLwBA,CuKnCC,E5DDE,A9FAA,C8FAC0G,A9FAAA,IyKYI,CAAC,GAAGob,O3EZO,A9FAA,GyKYG,C3EZC,A9FAA,EyKYG,GAAEA,C3EZC,A9FAA,SyKYU,QAAO;AlCT3E,ACCA,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AzBAA,AmHFA5xB,AhLAA,AmLCA,A9GCA,AmCDA,ANAA,A6FUA,AhETA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADaA0C,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,AhBoBA,C2DnBC,CwDAC0f,ANHA,AGvBA,APtCA,ApFgEAA,APHA,AIvBA,ATtCA,AiCqEA,CsE/BC,APtCA,AvFsCA,ATtCA,C0GgEC,AH1BA,AzG2DA,AcjCA,AH1BA,CiG0BCM,AVhEA,ApFgEAA,AZhEA,CqK8DC,A9DxBA9V,A9FAAA,C4JwBC3M,A7KcA,CAACgF,EAAE,GAAGD,C6KdC,CAACqmB,E7KcE,CkHZC,A9FAA,G8FAG7W,AH1BA,A3F0BAA,AH1BA,C4JwBC,A9DxBAwI,A9FAAA,G4JwBGqO,I3DEI,A9FAA,GyJFG,I9DxBI,A9FAA,E8FAE7P,A9FAAA,Y8FAY,A9FAA,E8FAE,A9FAA;AyI0BpD,ACCA,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,AmCDA,ANAA,A6FWA,AhEVA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADaA9Y,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,AhBoBA,EkHtBE,ACGA,ANHA,AzFAA,ACGA,APHA,A4BQA,EsE/BEwE,APtCAwD,AlGiGApB,AW3DApC,ATtCAwD,E0GgEE,A9FAA,C8FAC0X,AVhEA,ApFgEAA,AZhEA,AR4EA,CAACld,CkHZC,AH1BA,APtCA,AoF0EA2sB,AxKVA,AH1BA,ATtCA,C0GgECvP,A9FAAA,C2F1BC,A9FAA,CX2DC,GyG3DG,AzG2DA3Z,AW3DA,GuFtCG,AhGAA,CR4EC,E4LFEkpB,AtLuBA,C4GjCC,A0EUCC,AtLuBDrpB,AcjCA,ApBYAzD,EkHZE,A9FAA,EdiCE,ANrBA,CMqBC,EsLvBG,EAAE;AlCVhC,ACCA,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADaAtC,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,AhBoBA1C,EkHtBE,ALAA,AgFaA,AtLuBA,AapCA,ANAA,A4BQA,EyELE,AH1BAkN,APtCAhG,ApFgEA,AH1BAgG,ATtCAhG,EyG6DE,ALAA,AzFAA,ANAA,A4BQA,A1CcA,CkHtBCqX,ALAA5H,AzFAA4H,ANAA5H,AbeA,AyCPArZ,A1CcA2C,CmHnBCuiB,A9FAAA,ApBYArd,CwG5EC,AoF0EA2sB,ApL1EA,C0GgEC,A9FAA,CwFHC,AJ7DA,A3F6DA,AL7DA,CuGsCC,A9FAA,AjBsCA,CkHZC,A9FAA,AqBKA,CmERC,AGvBA,AlGuBA,AIvBA,AlB6CA,CCPC9sB,C4LFC,AnJLA,CwERC,ACGA,A0EUA,AzKbA,ACGA,AqBKA,A1CcA9E,CmHnBCmQ,ANHA,AgFaA,AxKVAA,APHA,C+KaC,A5LEA,CiHfC,AT7DAjB,ArF6DA,AX7DAA,CyG6DC,A9FAA,GyKaG,GpF1EGA,AoF0EA,ApL1EAA,CgGAC/G,AhGAAA,ATmFA,CyGnFC,AhGAA,CoL0ECsnB,CpF1ECtgB,AhGAAA,C0GgEC,A9FAA,EwKUE,CAACJ,IAAI,CAAC2gB,CpF1EC,AhGAA,CoL0EC,CpF1EC,AoF0EAmC,ApL1EA,OoL0EO,CAAC,CAAC,EAAED,OAAO,CAACt0B,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGs0B,OAAO;AlCVjF,ACCA,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,AmCDA,ANAA,A6FWA,AhEVA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADaApvB,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EgGzBE,AzG4DA,AW5DA,C8FAC,A9FAA,CiG0BC,AH1BA,A3F0BA,AH1BA,E8FAEkK,APtCA,AlGkGAtD,AW5DAsD,ATtCA,CR4EC,CkHZCwV,A9FAAA,ApBYAhd,EkHZE,AVhEAkG,ApFgEA,AZhEAA,C0GgECmX,A9FAAA,ApBYA,EwG5EE,AhGAA,CFkGC,ANtBAzd,IAAI,CMsBC3H,EyG5DE,A9FAA,C8FAC2f,A9FAAA,EiG0BE,A9FAA,I8FAIwF,A5GkCA,AclCAA,E8FAE,A5GkCA,AclCA,C8FACtE,A9FAAA,K2F1BK,A9FAA,E8FAEzC,A9FAAA,KiG0BK,A9FAA,I8FAI+G,A9FAAA,E8FAE,AH1BA,A3F0BA,AH1BA,CiG0BCllB,A9FAAA,C2F1BC,A9FAA,KiG0BK,A9FAA,G8FAGklB,A9FAAA,E8FAE,A9FAA,C8FACzO,A9FAAA,a8FAa,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC2K,A9FAAA,K8FAK,A9FAA,C8FAC8D,A9FAAA,E8FAE,A9FAA,C8FACzO,A9FAAA,a8FAa,A9FAA,C8FAC,A9FAA;AuICzG,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,AmCDA,ANAA,A6FYA,AhEXA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADaArR,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,ACGA,ANHA,AzFAA,ACGA,APHA,A4BQA,EsE/BEwE,AzG4DA,AW5DAA,EuFtCE,AhGAA,CR4EC,CAAC7B,C+GtCC,A6EqCA2sB,A3KrCA,CuFtCC3pB,AhGAAA,CuGsCC,APtCA,AvFsCA,ATtCA,GgGAG,AhGAA,CuGsCC,A9FAA,GuFtCG,AhGAA,CgGACqG,AhGAAA,EoL2EEsjB,CAAEliB,A5LCD,CwG5EC,AhGAA,CgGAChB,AhGAAA,CR4EC9J,GwG5EG,AhGAA,CgGAC1H,AoF2EC,ApL3EDA,AR4EA,E4LDG,IpF3EG,AhGAA,EgGAE,AhGAA;AmJiErC,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AmHAA,ANAA,AjCDA,A/FAA,ADaAoF,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,CmGCC,A9FAA,C6FHC,ALAA,AgFcAuuB,AzKdA,ANAA,A4BQA,EsE/BE/jB,AzG4DA5D,AW5DA4D,EgGuBE,A2EcA,AzKdA,AsBQA,CwERCsR,A2EcA,AzKdAA,AnBeA,AyCPA/H,C+DrEC,AhGAA,AR4EAnR,I+GtCI,AzG4DA,AW5DA,E8FAE,A9FAA,AwB+BA,CnC6BCqD,EmC7BE,CwERC,A9FAA,G8FAG,A3GqCA,AarCA,CbqCCF,AmC7BA,IwERI,A3GqCA,AarCA,AnBeA,CMsBC,ENtBEzD,CMsBC0C,GNtBG,KMsBK,QsLvBQ,CAAC;AjCV/C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADaAhF,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,ALAA,AGvBA,A6EsCA,AzKfA,ANAA,AIvBA,C8FAC,A9FAA,C8FAC,AzG4DA,AW5DA,EgGuBE,AFvBAkK,AzG4DAxG,AarCA,AFvBAwG,CgGuBC6R,A9FAAA,AnBeA,CwG5ECnT,AoF4EAolB,ApL5EAplB,AR4EA/F,GwG5EG,AhGAA,CFkGC,ANtBA,CMsBC+B,C2GrCC,AT7DA,AoF4EA,AzKfA,AX7DA,CR4ECtC,EiHfE,A2EeAwrB,AzKfA,CqF7DC,AhGAA,CgGAC9hB,AhGAAA,AR4EA,EiHfE,AFvBA,A5FuBA,AFvBA,C8FACsO,A9FAAA,CuFtCC,AhGAA,CgGAClO,AhGAAA,CFkGC,GkGlGG,AhGAA,CgGACtR,AoF4EA,ApL5EAA,CoL4EC6yB,IpF5EI,AhGAA,CgGAC,AhGAA,CuGsCC,APtCA,AvFsCA,ATtCA,EuGsCE3U,APtCArT,AvFsCAqT,ATtCArT,CgGAC,AhGAA,CgGAC,AhGAA,CoL4EC,CAACyH,E7EtCE,A9FAA,E8FAE,A9FAA,G2KsCG,CAAC;AjCXlD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AmHAA,ANAA,AjCDA,A/FAA,ADaApN,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,ALAA,AgFgBA,AtLqBA,AarCA,ANAA,A4BQA,CnC6BC,CyG5DCwE,A9FAAA,EgGuBE,ALAA,AgFgBA+qB,AzKhBA,ANAA,CoGACzd,ALAAoC,AzFAApC,ANAAoC,AbeA,CwG5EC,AhGAA,AR4EApR,C+GtCC,AzG4DA,AW5DA,E8FAE,A9FAA,CuFtCC,AhGAA,CgGACkJ,AhGAAA,EyG6DE,AFvBA,A5FuBA,AFvBA,C2KuCC,CpF7EC,AhGAA,CyG6DC,AT7DAI,ArF6DA,AX7DAA,CoL6ECpM,G3EhBG,AT7DA,ArF6DA,AX7DA,CoG6DC,A/FAA,AbeA,EwG5EE,AhGAA,CoG6DC,AgFgBA,A/KhBA,AbeAsC,C4LCCJ,EpF7EE,AhGAA,CgGAC8J,AoF6EA,ApL7EAA,AR4EA,C4GfC,A/FAA,G2F7DG,AhGAA,CgGACI,AhGAAA,IgGAI,AhGAA,CgGACtR,AhGAAA,KgGAK,AhGAA,CgGAC6K,AhGAAA,CgGAC,AhGAA,CgGAC,AhGAA;AmJiEhD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AmHAA,ANAA,AjCDA,A/FAA,ADaA3F,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,A2EgBA,AzKhBA,AsBQA,EsE/BEwK,AzG4DA,AW5DAA,EgGuBE4C,AT7DA,AoF6EAA,AzKhBAA,AX7DA,AiCqEA,C+DrEC,AhGAA,AR4EA,AyCPA4G,CnC6BC,ANtBAjR,I+GtCI,A9FAA,CgGuBC,AT7DA,AoF6EA,AzKhBA,AX7DA,AiCqEA,CwERC+O,AFvBA,A5FuBAA,AFvBA,CX4DClL,CmC7BC,C+DrECjB,AoF6EAyH,ApL7EAzH,AiCqEA,C+DrEC,AhGAA,IyG6DI,A9FAA,CqF7DC,AlGkGA,AElGA,CyG6DC,A2EgBA,AzKhBA,CyKgBC4pB,EpF7EE,AhGAA,AR4EA,CwG5ECvjB,AlGkGA,AElGAA,ER4EE1J,EwG5EE,AhGAA,CgGAC8J,AhGAAA,CR4EC,C4LCC,EpF7EE,AhGAA,CgGACxR,AlGkGA,AElGAA,CoL6EC,CtLqBC,GsLrBG,CpF7EC,AhGAA,CoL6EC,CpF7EC,AhGAA;AmJiE9C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCA,AmHAA,ANAA,AjCDA,A/FAA,ADcAoF,AoLdA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,E6FFE,AGvBA,AlGuBA,AIvBA,C8FAC,A9FAA,CgGuBC,AFvBA,A6EuCAuvB,AzKhBA,AFvBA,E8FAErlB,AzG4DA,AW5DAA,CjBuCC,CiHhBC,AT7DA,ArF6DA,AX7DA,AR6EAlH,CiHhBCgY,A9FAAA,KyKgBK,GAAG5N,A5LAA,GAAG,C+GvCC,A9FAA,CgGuBC,AFvBAkN,A5FuBA,AFvBAA,EgGuBEU,A2EgBA,AzKhBAA,CyKgBCuU,K5LAKtsB,IAAI,C4LAC,C7EvCC,A9FAA,AjBuCA,CiHhBC,A9FAA,C4FvBCgW,A9FAAA,EgGuBEzP,A9FAAA,I4FvBI,A9FAA,E8FAE,A9FAA,CgGuBC,A9FAA,C8FAC,A9FAA,iB8FAiB,A9FAA,C8FAC,A9FAA,C8FACwR,A9FAAA,a8FAa,A9FAA;AwIIhF,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAAsE,ArHFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGCAA,AmHAA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,E6FFE,AgFgBA,A/KhBA,AbeoC,AyCPpC,EwERE,AFvBA9a,A5FuBA,AFvBAA,E2FuBE,AtGqCAoC,AOrCA,C+FACuN,A/FAAA,CoGAC,AT7DAvL,ArF6DA,AX7DAA,CyG6DCmT,ACGA,AH1BA,A5FuBAA,ACGA,AH1BA,AjBsCoC,CkHZnCha,A9FAAA,C2F1BCgN,APtCA,AvFsCAA,ATtCA,AR4EoC,G4GfjC,AJ7DA,AlGkGA,AOrCA,AL7DA,EyG6DE,A9FAA,CyFAC,AGvBA,AzG4DA9I,AOrCA,AIvBA,C8FAC0H,APtCA,AvFsCAA,ATtCA,CyG6DC,ACGA,AVhEA9F,ArF6DA,ACGA,AZhEAA,C0GgECmU,A9FAAA,G6FHGhB,A3GqCA,AarCAA,CqF7DC,AlGkGAjV,AElGA,C0GgEC,AVhEA,ApFgEA,AZhEA,CgGAC,AhGAA,CoG6DCI,A/FAAA,CqGGC,A5GkCA,AclCA,CwFHC,AtGqCA,AOrCA,E+FAE,A/FAA,CkGvBC,AzG6DxBO,AW7DwB,C8FAC+H,A9FAAA,GgGuBG,A9FAA,C8FACrB,A9FAAA,C+FGCzH,A9FAAA,C8FAC,A5GmCxB,AcnCwB,E8FAE,A9FAA,CdmCvB,CyG7DyB,AzG6DxBX,AW7DwB,CgGuBC,A9FAA,C8FAC8M,A9FAAA,MbsClB,E2GtC0B,A3GsCxBlL,AatCwB,C8FAC,A9FAA,ObsCjB,CAAC,GAAG,CAACA,QAAQ,EAAE5B,QAAQ,CAAC;AqJlC7D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADYgD,AoLZhD,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,CfYiD,CkHX/C,A0EcA8oB,AxKdA,AqBKA,EwERE,ALAA3Z,AGvBA3J,A5FuBA,ANAA2J,AIvBA3J,EiG0BEkV,AVhEA,AlGmGA,AcnCAA,AZhEA,CgGAC,AhGAA,CyG6DC,ACGA,A/FHA,ACGA,C6FHC5N,A9FAAA,E+FGE,ANHA,AxFGA,APHA,C+FAC/C,AGvBA,AlGuBAA,AIvBA,CuFtCC,AhGAA,CuGsCC,A6EwCA,A3KxCA,CiG0BC,A0EcAygB,AxKdA,C8FAC7P,A9FAAA,C6FHC,A9FAA,CyFAC,A/FAA,EoGAEvS,ALAAjH,AzFAAiH,ANAAjH,E+FAE,A/FAA,C+FAC,AgFiBA,A/KjBA,C+KiBCopB,G3EjBG,A9FAA,C8FACzd,A9FAAA,G+FGG,A9FAA,GwKcG,E3EjBE,A2EiBAkc,AzKjBA,MyKiBM,EAAE5gB,OAAO,CAAC;AjCbpD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADaApN,AoLbA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EkGFE,ACGA,ANHA,AGvBA,A6EyCA,AzKlBA,ACGA,APHA,AIvBA,AwB+BA,CmERC,AGvBA,AlGuBA,AIvBA,C8FAC,AzG6DA,AW7DA,CX6DC,C4GnCC0f,AH1BAxV,A3F0BAwV,AH1BAxV,CjBsCC,CkHZC,AVhEA,ApFgEA,AZhEA,AR4EAhH,CkHZC2c,A0EeA,AxKfAA,EdmCE,IAAInZ,ANvBA,GAAG,CkHZC,A9FAA,E2F1BE,A9FAA,C8FAC4T,AzG6DA,AW7DAA,EiG0BE,A5GmCA,AcnCA,I8FAI,A9FAA,ApBYArX,IkHZI,A9FAA,ApBYA,CkHZCyc,A9FAAA,CpBYC,CkHZC,A9FAA,C8FACE,AH1BA,A3F0BAA,AH1BA,E8FAEzG,A9FAAA,UiG0BU,A9FAA,E8FAE,A9FAA,E2F1BE,A9FAA,E8FAE,A9FAA;A0I2BtD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A8BHA,ApHCA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AjBAA,AMAA,AjBAA,EfaI,AyCPF,EyELEuG,AH1BAlb,A6EwCOwpB,AxKdPtO,AH1BAlb,EiG0BE,A5GmCAoC,AcnCA,C8FACgZ,A9FAAA,CoFhEChX,AhGAAA,AR4EE,C+GtCD,A9FAA,E8FAE,APtCA,AvFsCA,ATtCA,CR4EGxI,EwG5EAuM,AlGmGA,AEnGAA,CFmGC7F,ENvBI,CAAC,CkHZD,A9FAA,C2F1BCtC,A9FAAA,EiG0BE,A5GmCA,AcnCA,CdmCCQ,CkGnGC,AhGAA,CuGsCCR,A9FAAA,CiG0BC,AH1BAsE,A3F0BA,AH1BAA,CuFtCC,AhGAA,IgGAI,AlGmGA,AEnGA,CgGAC8D,AlGmGA,AEnGAA,CuGsCC,A9FAA,E8FAE7D,A9FAAA,M8FAM,A9FAA,CuFtCC,AhGAA,CuGsCC,APtCApD,AvFsCA,ATtCAA,CgGAC,AhGAA,CgGAC,AhGAA,GgGAG,AhGAA,IgGAI,AhGAA,AR4EE,CwG5EDkH,AhGAAA,AR4EE,UwG5EQ,AhGAA,CgGAClH,AhGAAA,CgGAC,AhGAA,CgGAC,AhGAA;AmJiElE,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A8BHA,ApHCA,AmLCA,A9GCA,AmCDA,ANAA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,ADaA,AoLbA,AxIFA,ACGA,AFDA,AXAA,AjBAA,CfaC,C4GfC,AgFgBgB,A/KhBhB,A4BQA,CmJQiB,C1Ebf,A5GmCA,AcnCA,CdmCC,CyG7DC,APtCA,AvFsCA,ATtCA,AiCqEA,CAACsO,CyELC,A9FAA,C6FHCqD,ACGA4I,A/FHA5I,ACGA4I,C2F1BC9T,A9FAAA,CX6DC,AmC9BA,GsE/BG,A9FAA,AwB+BA,GwERGkL,AFvBAiD,A5FuBAjD,AFvBAiD,CgGuBCnN,A9FAAA,AsBQA,CyELC,A9FAA,C8FACsS,A9FAAA,E8FAE,A9FAA,C8FACG,A9FAAA,E6FHE,AFvBA,A5FuBA,AFvBA,C8FACzG,A9FAAA,CgGuBC,A9FAA,M+FGM,AH1BA,A3F0BA,AH1BA,C8FAC,A9FAA,CiG0BCsG,AH1BAjG,A3F0BAiG,AH1BAjG,EiG0BE,A9FAA,C8FACuG,A9FAAA,C2F1BC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,UiG0BU,A9FAA,E8FAEN,A9FAAA,E8FAE,A9FAA,C8FACD,A9FAAA,c8FAc,A9FAA,C8FAC,A9FAA;AuICvE,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6FcA,AhEbA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADcAzf,AoLdA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFEmS,ACGA,ANHA,AzFAAA,ACGA,APHA,CqGGC,A9FAA,GwFHG,AGvBA,APtCA,AlGmGAvL,AOtCA,AIvBA,ATtCA,CoG6DCwN,A/FAAA,AbgBA,CiHhBC,A9FAA,AnBgBAjR,CkHbC,A9FAA,C2F1BCiJ,A9FAAA,CgGuBC+F,A9FAAA,AnBgBA,EwG7EEvJ,AhGAAA,CoG6DC,AGvBA,AzG6DA,AOtCA,AIvBA,AjBuCA,CMsBChH,CyG7DC,APtCA,AvFsCA,ATtCA,CyG6DC,ALAA,AzFAA,ANAA,EPsCE,CAACoD,C2GtCCwE,ALAA,AzFAAA,ANAA,KbgBK,EiHhBE,A3GsCA,AatCA,C8FAC,A3GsCA,AatCA,kB8FAkB,A9FAA,C8FAC,A9FAA;AwIIhD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6FeA,AhEdA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,A9FAA,AnBe0B,AyCP1B,EyELE,AVhEA,AlGmGA,AcnCA,AZhEA,EyG6DE,A9FAA,E8FAE,AFvBA+Q,A5FuBA,AFvBAA,C2KwCCwT,A5LF0B,GiHfvB,A9FAA,AnBe0B,I+GtCtB,A9FAA,C8FAC7U,A9FAAA,I2KwCI6U,CAAE3gB,E3EjBCkK,A9FAAA,K4FvBK,A6EwCC,A3KxCD,C8FAC,A9FAA,C2KwCE,C3EjBA,A9FAA,C8FAC,AFvBA,A5FuBA,AFvBA,EgGuBE,A9FAA,E4FvBE,A9FAA,KgGuBK,A9FAA,I8FAIA,A9FAAA,Q8FAQ,A9FAA,C8FAClK,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AwII/D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADYuC,AoLZvC,AxIFA,ACGA,AFDA,AXAA,AjBAA,CfYwC,C4GdtC,AJ7DA,AoF8EA,A/KjBA,AL7DA,AiCqEA,C+DrEC,AhGAA,C0GgEC,A9FAA,CoFhEC,AhGAA,CoL8EC8hB,E7ExCE3U,A9FAAA,Q8FAQ,A6EwCA,A3KxCA,C8FACzB,A9FAAA,E2KwCEmU,IAAI,CAACnkB,K7ExCK,A9FAA,C8FAC,A9FAA,C2KwCC,CAAC9I,C7ExCC,A9FAA,I8FAI,A9FAA,E2KwCE,CAACmD,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;AjCbtD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADYAnD,AoLZA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,ALAA,AgFiBA,AzKjBA,ANAA,A4BQA,EyELE0f,AVhEA1X,AlGmGA,AcnCA0X,AZhEA1X,E0GgEE,ANHA,AgFiBA8J,AxKdA,APHA,CqGGCiO,ANHA1L,AJ7DA,ApFgEA0L,APHA1L,AL7DA,AR2EA,C+GrCCkG,A9FAAA,AjBqCAnX,CwG3EC,AhGAA,IR2EI,C4LGC,ChFjBC,A/FAA,CkGvBC,APtCA,AvFsCA,ATtCA,AR2EA,C+GrCC2V,A6EwCA,A3KxCAA,C2FuBC,A/FAA,C+FAC,A/FAA,CqGGC,A9FAA,G8FAG,A0EcA,AxKdA,GpBWG1V,CkHXC,A9FAA,C2F1BC,A9FAA,C8FAC,A9FAA,AjBqCA,EAAE,C+GrCC,A9FAA,I8FAI,A9FAA;A0I2BpC,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,ACGA,ANHA,AgFiBA,AzKjBA,ACGA,APHA,AbcE,AyCNF,E+DrEEmB,AlGmGAmC,AEnGAnC,CFmGC,CsGtCC,A/FAA,A4BQA,CmERC8P,A/FAAA,A4BQAJ,CsE/BCpL,A6EwCA8R,AtLqBAhV,AW7DAkD,AjBqCE,CwG3ED,AhGAA,EgGAE,AhGAA,CR2EG1I,C4LGD,E7ExCE,A9FAA,C8FACiZ,A6EwCAoW,A3KxCApW,CjBqCG,CAAC,EwG3EAvM,AhGAAA,EoG6DE,A/FAA,C+KiBC,AnJTA,CmJSCM,AtLqBA,CsGtCC,AJ7DAN,AlGmGApJ,AOtCA,AL7DAoJ,CgGAA,AhGAA,AiCqEC,E+DrEE,AhGAA,CoG6DC,A/FAA,E+KiBE,AtLqBA,AmC9BA,CsE/BC,AzG6DA,AW7DA,C8FACV,A9FAAA,E2KwCEgB,E7ExCE,A9FAA,E8FAE,A9FAA,G2KwCG,CAACwN,C7ExCC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,E2KwCE,CAAC,C5LHG,CAAC;A2JVrD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,ArGCA,AmHAA,ANAA,AjCDA,A/FAA,ADYA,AoLZA,AxIFA,ACGA,AFDA,AXAA,AjBAA,CmGCC,A9FAA,ApBWA,CiHdC,ALAA,AgFkBA,AzKlBA,ANAA,EPsCE,E2GtCEzJ,ALAA,AGvBA,APtCA,AoF+EA/D,AzKlBA+D,ANAA,AIvBA,ATtCA,CoG6DCoD,AGvBA,AlGuBAA,AIvBA,CX6DC5N,CAAC,GAAG,CyG7DC,APtCA,AoF+EA,AtLoBA,AW7DA,ATtCA,CyG6DC,A9FAA,CyKkBC,E3ElBE,AT7DA,AlGmGAC,AatCA,AX7DA,CgGACoF,AhGAAA,GyG6DG,A9FAA,CqF7DC,AhGAA,CgGACI,AhGAAA,EFmGE,CsGtCC,AtGsCAxR,AOtCA,C2F7DC,AhGAA,EoG6DE,A/FAA,GPsCG,C2GtCCuX,ALAA,AzFAAA,ANAA,EPsCExL,CAAC,G2GtCG,A9FAA,CbsCC,CAACC,QAAQ,CAACG,MAAM,EAAE;AqJlC1D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAAuY,ArHFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,ArGCAA,AmHAA,ANAA,AjCDA,A/FAA,ADYAtf,AoLZA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,A9FAA,AsBQA,E+DrEE,AoF+EA,ApL/EA,EyG6DE,A3GsCA4G,AatCA,C8FAC+G,A9FAAA,AnBcA,C+GrCC4M,A6EyCAnN,A3KzCAmN,AjBqCAjX,CkHXC,A9FAA,C8FACvB,A9FAAA,GpBWG,CMwBC,CsLpBC,AtLoBAgF,CyG7DC,A6EyCAkmB,A3KzCA,AjBqCA,C+GrCCnU,A9FAAA,EiG0BE,A9FAA,C8FAC7K,A0EeA,AxKfAA,C6FHC,A3GsCA,AatCA,G8FAG,A2EkBA,AtLoBA,AatCA,I8FAIuM,ACGA,A0EeA,AtLoBA,AatCAA,ACGA,ApBWD,C+GrCE,A9FAA,C8FAC,A6EyCA,A3KzCA,CiG0BC,A9FAA,E2F1BE1R,A9FAAA,O8FAO,A9FAA,CgGuBC,ACGA1C,A/FHA,ACGAA,C6FHCgH,A9FAAA,E+FGE,A9FAA,E8FAEI,A9FAAA,E8FAE,A9FAA,C6FHC,A9FAA,C+FGC,A9FAA,C6FHC,A9FAA,I8FAI,A9FAA,E8FAE2D,A9FAAA,Q8FAQ,A9FAA,C8FAC,A9FAA;AwIIlE,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EmGCEgB,ANHA,AxFGAA,APHA,Aba2B,AyCL3B,ImJUI+c,AtLoBA,AmC9BA,CAAC/a,CyELC,AH1BAoG,A3F0BA,AH1BAA,CiG0BCxY,A9FAAA,ApBU2B,CAAC,IyCLvB,EsE/BE,A6EyCA,A3KzCA,C8FACgX,A9FAAA,AwB+BA,CyELC,A9FAA,C8FAC9K,A0EeAkhB,AxKfAlhB,Q8FAQ,A9FAA,AqBKA9H,CyELCzF,AH1BA,A3F0BAA,AH1BA,C8FAC,A9FAA,AwB+BA,EmJUE,AnJVA,CyELC,AH1BAqI,A6EyCAqE,AxKfA,AH1BArE,CiG0BC,A9FAA,I8FAI,A9FAA,C2F1BC,A9FAA,CiG0BC3C,A0EeA,AxKfAA,CwKeC6mB,E1EfE,A9FAA,E8FAE,A0EeA,AxKfA,CwKeC,S1EfS5M,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA;AuIC5D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,ADUuC,AoLVvC,AxIFA,ACGA,AFDA,AXAA,AjBAA,CfUwC,CiHZtC,ALAA,AzFAA,ANAA,EqGGE7S,AVhEA,AoF+EA,AxKfAA,AZhEA,AiCqEA2G,EyELE,AH1BA,AzG6DA,AcnCA,AH1BA,CiG0BCkM,A9FAAA,I8FAI,A9FAA,AqBKA,CyELC,A9FAA,AqBKAtR,MAAM,EAAE5I,EAAE,CAAC;AkHJvB,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,ACGA,ANHA,AJ7DA,ArF6DA,ACGA,APHA,AL7DA,AiCqEA,CyELC,AVhEA,ApFgEA,AZhEA,AiCqEA,CyELC,AH1BA,A6EyCA,AxKfA,AH1BA,C8FAC,APtCA,AvFsCA,ATtCA,CyG6DC,ALAA,AtGsCA,AatCA,ANAA,CoGACsR,ALAAjD,AzFAAiD,ANAAjD,C+KkBCpH,EtLoBEpG,CAAC,GAAG,C2GtCC,A2EkBA,AzKlBA,CyFAC,AgFkBA8K,A/KlBA,EoGAE,A3GsCA1R,AatCA,CyFAC,A/FAA,C+FAC,A/FAA,EoGAE,A9FAA,CbsCC,CsLpBC,AtLoBA,IsLpBI,IAAI,EAAE,oCtLoBoC,GAC5CwG,QAAQ,CAAChM,MAAM,GAAG,GAAG,GAAGqM,MAAM,CAAClB,IAAI,CAAC,GAAG,aAAa,GACpD,0CAA0C,GAC1C,gBAAgB,CAAC;AqJrC3C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,ArGCA,AmHAA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,CmGCC,A9FAA,C6FHC,A9FAA,E4FvBEyE,APtCAxC,AvFsCAwC,ATtCAxC,EyG6DEoF,A2EkBA0E,AtLuBA9K,AazCAoG,CqF7DC,AlGsGA,AEtGA,CFsGCnK,CkGtGC,AhGAA,GuGsCG,AzGgEA,AWhEA,CgGuBC,A9FAA,C4FvBC,A6EyCA,A3KzCA,CgGuBC,A3GyCA,AazCA,EyKkBEmK,IpF/EI,AhGAA,GoL+EG,CAAC0E,QAAQ,WtLuBW;AqJrC5C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,ArGCA,AmHAA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,AGvBA,AlGuBA,AIvBA,AwB+BA,CsE/BC,A9FAA,CgGuBC,AFvBA,APtCAtN,AoF+EA,AzKlBA,AFvBA,ATtCAA,EuGsCE8V,AzGgEAtT,AWhEAsT,CXgEC,C2GzCC,A3GyCApT,AazCA,C+FGCoS,AVhEA,ApFgEAA,AZhEA,EgGAE,AhGAA,E0GgEEA,A9FAAA,C8FACvK,A9FAAA,C6FHC3B,A3GyCA,AazCAA,GbyCG1J,E4GtCE,AH1BA,APtCAkJ,ApFgEA,AH1BA,ATtCAA,CuGsCC,A9FAA,CgGuBC,ACGAzG,AH1BA,A5FuBA,ACGAA,AH1BA,CgGuBCsT,A9FAAA,C+FGC,A5GsCA,ActCA,E8FAErN,A9FAAA,C6FHC,A9FAA,G+FGG,AVhEAQ,ApFgEA,AZhEAA,CgGACjH,AhGAAA,CyG6DC,ACGA,AVhEA,ArF6DA,ACGA,AZhEA,EgGAE,AhGAA,QyG6DQ,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FACqW,A9FAAA,K8FAK,A9FAA,G8FAG5O,A9FAAA,O8FAO,A9FAA,C8FACqM,A9FAAA,I8FAI,A9FAA;AwIIrE,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EmGCE,ANHA,AGvBAc,A6EyCA,AxKfA,APHA,AIvBAA,AwB+BA,EwERE,A9FAA,E+FGEpU,AVhEA,AlGsGAa,ActCAb,AZhEA,AiCqEA,CnCiCC,AmCjCAiO,CwERC,ACGA,A5GsCArO,AazCA,ACGA,E8FAE,AH1BA,APtCAlH,ApFgEA,AH1BA,ATtCAA,CuGsCCqa,APtCA,AvFsCAA,ATtCA,CFsGC,EkGtGE,AhGAA,AiCqEA,CwERC9L,A3GyCArH,AazCAqH,E+FGE2B,A9FAAA,AqBKA,C+DrEC,AhGAA,CgGAC/C,AlGsGA,AEtGAA,EiCqEE,CwERC,A9FAA,C8FACuB,ACGA,AH1BA,APtCA,ArF6DAA,ACGA,AH1BA,ATtCA,C0GgEC1K,AH1BA,A3F0BAA,AH1BA,G8FAG,A9FAA,CiG0BC,A9FAA,C8FAC,A9FAA,C6FHC,A9FAA,C4FvBC,A9FAA,IgGuBI,A9FAA,C+FGC,A9FAA,E8FAEsD,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA,I6FHI,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC8H,A9FAAA,Q8FAQ,A9FAA,G8FAGb,A9FAAA,O8FAO,A9FAA,C8FACG,A9FAAA,O8FAO,A9FAA;AwII9E,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,ACGA,ANHA,AGvBAsB,A6E0CA,AzKnBA,ACGA,APHA,AIvBAA,IiG0BIzC,ANHA,AJ7DA,AoFgFA,AtLsBApF,ActCAoF,APHA,AL7DA,CoG6DCwC,AtGyCA,AOzCAA,CPyCC9U,E4GtCE,AH1BA,APtCAiT,ApFgEA,AH1BA,ATtCAA,CuGsCCgC,APtCA,AvFsCAA,ATtCA,EFsGE,C4GtCC,AVhEA,ApFgEA,AZhEA,CgGAC,AhGAA,CFsGCnI,CyGhEC,A9FAA,CiG0BC,ANHA,AxFGA,APHA,CkGvBC,A9FAA,E2FuBE,A/FAA,GPyCG,CAAChM,CsGzCC,A/FAA,GkGvBGwL,A9FAAA,EXgEE,CyGhEC,A9FAA,E8FAE,A9FAA;A0I2BlC,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFEmM,A9FAAA,AsBQA,EyELE,AH1BA,A6E0CA,AxKhBA,AH1BA,EuFtCE,AlGsGArO,AEtGA,EyG6DE,AFvBAkC,A5FuBA,AFvBAA,CgGuBC1F,A9FAAA,CqF7DCkI,AhGAAA,CuGsCC,A9FAA,EgGuBE,AT7DA,ArF6DA,AX7DA,CyG6DC,A9FAA,C4FvBCxC,A9FAAA,CuFtCCvH,AhGAAA,CgGAC,AhGAA,CyG6DC,AFvBA,APtCAuN,ArF6DA,AFvBA,ATtCAA,CyG6DC,AFvBAqD,A5FuBA,AFvBAA,GuFtCG,AhGAA,CuGsCC,A9FAA,CXgEC,CAACzI,CAAC,CAAC,CyGhEC,A9FAA,4B8FA4B,A9FAA,E8FAE,A9FAA;A0I2B1D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A8BHA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,A/FAA,A4BQA,EyELE+H,A0EgBA,AtLsBA,ActCAA,E2F1BE,APtCApJ,AvFsCA,ATtCAA,AiCqEA,C+DrEC,AhGAA,AiCqEA0O,GyELG,AH1BAtL,A6E0CAilB,AxKhBA,AH1BAjlB,CiG0BCnH,AVhEAgH,ApFgEAhH,AZhEAgH,GgGAG,AhGAA,C0GgEC,AVhEAhO,ApFgEA,AZhEAA,AiCqEA,CyELCwR,AH1BA,A6E0CA,AxKhBAA,AH1BA,EwB+BE,CsE/BCmO,A6E0CAuT,A3K1CAvT,AwB+BA,CyELC,A9FAA,C8FAC,AVhEA,ApFgEA,AZhEA,MuGsCM,A9FAA,C8FACxB,A9FAAA,G2K0CG,CAACsU,KAAK,CAACL,C7E1CC,A9FAA,C8FAC,A6E0CA,A3K1CA,C2K0CC0C,YAAY,CAACR,UAAU,EAAE;AjCflE,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A8BHAnrB,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AtGFAA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,AtGyCA,AOzCA,A4BSA,IwETI,ALAA,AGvBA,APtCA,AoF+E8D+N,AzKlB9D,ANAA,AIvBA,ATtCA,AiCsEA,CwETC5M,ALAA8I,AzFAA9I,ANAA8I,A4BSAsG,M+DtEMzV,AhGAAA,CgGAC,AhGAA,GgGAGA,AhGAAA,CgGAC,AhGAA,CoG6DC,AJ7DAwN,A3F6DA,AL7DAA,EyG6DE,A9FAA,C8FACiL,ALAA,AzFAAA,ANAA,A4BSA,C+DtEC,AhGAA,EgGAE,AhGAA,AiCsEA,EmETE,A/FAA,E4BSE,CwETC,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA,W8FAW,A9FAA,E8FAE,A9FAA;AwIIvD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,ACGA,A5GuCA,Aa1CA,ACGA,AqBMA,EmJQ2E,CAAC,C7ExCxE,A6EwCyE,A3KxCzE,AwBgCA,CmJQ0E,AnJRzEwS,C+DtEC,AhGAA,CFuGC7Q,GkGvGGsJ,AhGAAA,GgGAG,AlGuGA,AEvGA,GgGAGnO,AhGAAA,CgGAC,AhGAA,CgGACuN,AhGAAA,IgGAI,AhGAA,EiCsEE,GAAG,IAAI;AkHLjC,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnHwCA,AiIvCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,ACGA,ANHA,AzFAA,ACGA,APHA,E+KkBE,E7EzCE,A9FAA,EuFtCE,AoF+EAmjB,ApL/EA,EuGsCExmB,A9FAAA,EuFtCEkE,AhGAAA,EgGAE,AhGAA,EuGsCE,A9FAA,CuFtCCtH,AhGAAA,CgGAC,AoF+EA,ApL/EA,GuGsCG,APtCAqH,AoF+EAhN,A3KzCA,ATtCAgN,GgGAG,AhGAA,CuGsCC,APtCApS,AvFsCA,ATtCAA,EuGsCE,A9FAA,C2KyCC,CAACsH,EpF/EE,AhGAA,CoL+EC,EpF/EE8K,AhGAAA,GgGAG,AhGAA,CgGACpS,AhGAAA,MgGAM,AhGAA,GgGAG+K,AhGAAA,CgGAC,AhGAA;AmJiEhD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnHyCAlB,AiIxCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,ACGA,ANHA,AzFAA,ACGA,APHA,A4BSA,EmJSE,EhFlBE,A/FAA,C+FAC4J,A/FAAA,CkGvBCkM,APtCA,AoF+EAnN,A3KzCAmN,ATtCA,IgGAItN,AlGwGA,AExGAA,CFwGClL,CkGxGC,AhGAA,CoL+EC,ChFlBC,AGvBA,AlGuBA,AIvBA,C8FACmX,A9FAAA,E2FuBE9L,AJ7DAJ,AoF+EAI,A/KlBAA,AL7DAJ,GgGAG,AlGwGA,AExGA,CgGACpS,AlGwGA4H,AExGA5H,GoG6DG,AgFkBA,A/KlBA,C+FACyT,AgFkBAkhB,A/KlBAlhB,EkGvBE,APtCA,AvFsCA,ATtCA,CuGsCC,A9FAA,CuFtCCzF,AhGAAA,EuGsCE,A9FAA,CuFtCC,AlGwGA,AExGA,EoG6DE,A/FAA,CkGvBC,A6EyCA,AtLyBA,AWlEA,CuFtCCoE,AhGAAA,GoG6DG,AJ7DA,AoF+EA,A/KlBA,AL7DA,CgGAC,AhGAA,GoL+EG,ChFlBC,AtG2CAxK,AO3CA,C2F7DCoG,AoF+EA,ApL/EAA,GgGAG,AhGAA,IgGAIoE,AhGAAA,GgGAG,AlGwGAxK,AExGA,CgGAC1H,AlGwGAiL,AExGAjL,IFwGI,CkGxGC,AhGAA,CgGAC,AlGwGAkK,AExGA,CgGAC,AhGAA,EgGAEW,AhGAAA,CgGAC,AhGAA,CgGAC,AhGAA,GFwGG,EAAE;AqJvC1E,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFER,ACGA,A5GwCA,Aa3CAA,ACGA,AqBMA,IyENI4J,A0EeAwgB,AxKfAxgB,E2F1BEwL,APtCA5U,AvFsCA4U,ATtCA5U,CgGAC,AlGwGAc,AExGA,GyG6DG,ACGA,A/FHA,ACGA,C8FACqH,AVhEAb,ApFgEAa,AZhEAb,CyG6DC,A9FAA,CqF7DC,AhGAA,CuGsCC,A6EyCA,A3KzCA,C8FAC6L,A9FAAA,EgGuBE,A2EkBA1L,AzKlBA,Eb2CE,CAAC,IsLzBI,AtLyBA,C4GxCC,A0EeAmiB,AxKfA,C8FAC30B,A5GwCAmL,AcxCAnL,C2F1BC,A9FAA,C8FAC,A9FAA,EXkEE,CyGlEC,A9FAA,CiG0BC,A5GwCAoK,AcxCA,E8FAE,A9FAA,C2F1BC,A6EyCA,A3KzCA,KiG0BK,A5GwCA,AcxCA,EdwCE,E4GxCEwa,A9FAAA,GdwCG,CAAC,uB4GxCuB,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AuIC3E,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnHyCA,AiIxCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,CTyCC,C2G3CCpa,ACGA,ANHA,AzFAAA,ACGA,APHA,A4BSA,EmJSE,C3ElBC,A9FAA,C+FGC2J,A9FAAA,AqBMA,CwETC,A9FAA,AsBSAyF,CsEhCC+F,APtCA,AvFsCAA,ATtCA,I0GgEI,AVhEA5U,ApFgEA,AZhEAA,C0GgECga,AVhEA,ApFgEAA,AZhEA,GyG6DGva,AFvBA,A5FuBAA,AFvBA,AwBgCA,CsEhCC2T,A9FAAA,CuFtCC,AhGAA,CyG6DC3T,AT7DA,ArF6DAA,AX7DA,AiCsEA,CwETA,A9FAA,AsBSC,C+DtEC,AhGAA,CyG6DC,A9FAA,M+FGM,AH1BA,A3F0BA,AH1BA,CiG0BCwa,AH1BA,A3F0BAA,AH1BA,G8FAG,A9FAA,I8FAI,A9FAA,KiG0BK,A9FAA,E8FAE,A9FAA,M8FAM,A9FAA,I8FAIL,A9FAAA,kC8FAkC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AuICzF,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnH0CA9a,AiIzCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EmGCE,ANHA,AxFGA,APHA,EoGAE,A2EmBAqpB,AzKnBA,EyFAE,A/FAA,C+FAC5e,A/FAAA,CoGAC,AFvBAnG,A5FuBA,AFvBAA,CiG0BCgG,A9FAAA,CoFhEC,AhGAA,EyG6DE,A3G4CA,Aa5CA,C8FACpB,A3G4CA5L,Aa5CA4L,C4FvBC,APtCAV,AvFsCA,ATtCAA,C0GgEC,AH1BA7G,A3F0BA,AH1BAA,CiG0BCxE,AVhEA,AoFgFA,AxKhBAA,AZhEA,CoLgFC4tB,ChFnBC,AGvBA,AlGuBA,AIvBA,C8FAC,A9FAA,CiG0BC,A9FAA,C8FAC,ANHA,AJ7DAxiB,ApFgEA,APHA,AL7DAA,CoG6DC,AtG4CA,AO5CA,C+FACI,AtG4CA7K,AO5CA6K,C2F7DC,AhGAA,C0GgEC,AVhEAxS,AoFgFA,AtLyBA,AczCA,AZhEAA,C0GgEC,A0EgBA20B,AxKhBA,C6FHC,A9FAA,Cb4CC9qB,EsG5CE,A/FAA,C+FACyK,AJ7DA,A3F6DAA,AL7DA,CyG6DCvU,A9FAAA,CqF7DC,AhGAA,GoLgFG,EAAEqzB,EtLyBE,C2G5CC,A3G4CAjsB,Aa5CA,CyFAC,A/FAA,CoGAC,A9FAA,CyKmBC,EAAEqL,ItLyBI,CAAC5K,EsLzBE,CAAC,QtLyBQ;AqJxC9D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,A+BAA,ArHFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnH2CAiC,Ac1CA,AmHAA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E0BOE,EmJWE,E3EpBE,AFvBA,A5FuBA,AFvBA,K2K2CK,CpFjFC,AlG0GA,AE1GA,CyG6DC,A3G6CA1C,Aa7CA,CqF7DCgL,AhGAAA,CgGAC,AhGAA,GyG6DG,A9FAA,Ib6CI,CAACjK,eAAe,GAClC,SAASA,eAAeA,CAACiD,IAAI,EAAEf,QAAQ,EAAE;AqJ1C7C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,AtG8CI,AO9CJ,A4BSA,EwETE,A9FAA,E4FvBEuV,A6E0COyT,A3K1CPzT,GXqEO9T,GkG3GD,AhGAA,EuGsCE,A9FAA,C8FACuS,A9FAAA,CuFtCCna,AhGAAA,CgGAC,AhGAA,CgGACwN,AhGAAA,GuGsCG,AzGqEI,AWrEJ,C8FAC,APtCA,AlG2GI,AWrEJ,ATtCA,EgGAE,AhGAA,CuGsCCjG,A9FAAA,CXqEK,EyGrEF,APtCA,AlG2GIL,AWrEJ,ATtCA,CgGACiG,AhGAAA,GF2GO,CkG3GH,AhGAA,CF2GKhH,EkG3GFnG,AhGAAA,CgGAC,AhGAA,CgGACwN,AhGAAA,IgGAI,AlG2GI,AE3GJ,CgGAC,AhGAA,CF2GK,IkG3GA,AlG2GI,AE3GJ,CF2GK,GkG3GD,AhGAA,CgGACL,AhGAAA,IgGAI,AhGAA,GgGAG,AhGAA,IgGAI,AhGAA,CgGACC,AhGAAA,IgGAI,AhGAA,GgGAG,AhGAA,IgGAI,AhGAA;AmJiE5E,AKAA,AHDA,ANAA,AjCAA,AjCAA,AFCA,AtFFA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnH4CI,AiI3CJ,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,CT4CK,CsG9CH,A/FAA,A4BSA,EwETE,A2EkBgB,AzKlBhB,CyKkBiB,ChFlBf,AGvBA,AlGuBA,AIvBA,AwBgCA,CmETCwI,A/FAAA,A4BSA7F,G+DtEG,AhGAA,CyG6DC,AT7DA,ArF6DA,AX7DA,IyG6DI,A9FAA,C8FACjB,A9FAAA,CqF7DC,AhGAA,CiCsEC,GAAG,KAAK,CmETC,A/FAA,GoGAG,ALAA,AzFAA,ANAA,CoGACC,ALAA,AzFAAA,ANAA,SoGAS,A9FAA;AwIIxC,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnH6CA,AiI5CA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFE,A2EkBA,AzKlBA,C8FAC,A2EkBA,AzKlBA,C4FvBC,A6EyCA,A3KzCA,KXsEKzG,EsL7BE5K,CpF/EC,AoF+EA,ApL/EA,EoL+EE,EpF/EE,AhGAA,CgGACyP,AhGAAA,GF4GG7E,CkG5GC,AlG4GD,AE5GC,EF4GE,CkG5GCtI,AhGAAA,CgGAC,AhGAA;AmJiEzB,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFEwG,ALAA,AtG+CA,Aa/CAA,ANAA,A4BSA,EsEhCE,A6EyCA,A3KzCA,CgGuBC,A9FAA,Cb+CC,C2G/CC,A3G+CA,Aa/CA,C4FvBCyD,A6EyCA8R,A3KzCA9R,GXsEG,CkG5GCjK,AlG4GAuI,AE5GAvI,CgGAC,AoF+EA,ApL/EA,CgGACuN,AhGAAA,CuGsCC,A6EyCA,A3KzCA,CgGuBC/G,A9FAAA,Cb+CC,CyGtECkV,APtCA,AvFsCAA,ATtCA,CyG6DClV,A3G+CA,Aa/CAA,C8FACb,A9FAAA,CqF7DCwI,AhGAAA,GgGAG,AhGAA,CyG6DC,AT7DAlS,ArF6DA,AX7DAA,CuGsCC,A9FAA,CgGuBC,AFvBAge,A5FuBA,AFvBAA,GuFtCG,AhGAA,CgGAC7L,AhGAAA,EgGAE,AhGAA,CgGAC,AhGAA,KuGsCK,A9FAA,C8FAC,A9FAA;A0I2BxC,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,A/FAA,A4BSA,EwETE,AFvBA,AzGsEA,Aa/CA,AFvBA,E2KyCEwhB,AnJTA,CAACzgB,CsEhCClF,AzGsEA,AWtEAA,CXsECpF,CkG5GC,AhGAA,EoL+EE,CAAE,E7EzCC,AzGsEA,AWtEA,CXsECf,GmCtCG,CsEhCC,A9FAA,EwBgCE,EsEhCE,A9FAA,E8FAE,A9FAA,CwBgCC,GnCsCG,CsL7BCusB,AtL6BA,IAAI,CAACnpB,IAAI,CsL7BE,CtL6BA,GsL7BGxJ,CAAC,AtL6BA,CsL7BC8J,AtL6BAgB,MAAM,CsL7BE,AtL6BD,EsL7BE,CAAC;AjCdzD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,A/FAA,EoGAE,A2EkBA,AtL6BA,Aa/CA,EyFAE,AGvBAkT,AlGuBA,AIvBAA,C2FuBC7F,A/FAAA,CP+CC,CAACtN,CkG5GC,AhGAA,IuGsCI,AzGsEA,AWtEA,C8FAC8R,A9FAAA,EXsEE,IAAI,IsG/CI,A/FAA,EkGvBE,A9FAA,C2FuBC,AGvBA,AlGuBA,AIvBA,G8FAG,A9FAA,C2FuBClH,A/FAAA,GkGvBG,A9FAA,U2FuBU,A/FAA,C+FAC,A/FAA,I+FAI,A/FAA,C+FAC,A/FAA;A8IInD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AuBFA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E0BOE,EwETE,A2EmBA,AtL4BA,Aa/CA,E4FvBEuI,A9FAAA,EgGuBE,AT7DA,AlG4GA7Y,Aa/CA,AX7DA,CyG6DC,A9FAA,EyKmBE,E3EnBE,A9FAA,C8FACiM,AFvBA,A5FuBAA,AFvBA,C8FACmL,A9FAAA,EXsEE,CAACle,MAAM,GyGtEG,A9FAA,CgGuBC,AFvBA,A5FuBA,AFvBA,CXsEC,C2G/CC,A3G+CA,Aa/CA,C4FvBC,A9FAA,CXuEzB,GyGvE6B,A9FAA,IXuEtB,IAAI,CAACoK,QAAQ,CAACtE,IAAI,CAAC,IAAI,CAACgD,MAAM,CAAC;AqJ5C5C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AuBFA0O,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,A5GFAA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E0BOE,EnCuCE,E2GhDE,AFvBAmI,A6EyCOrU,AzKlBP,AFvBAqU,AwBgCA,CAAC9F,C+DtEC,AhGAA,EgGAE1H,AhGAAA,CgGAC,AoF+EO,AtL8BP,AE7GA,EoG6DE,AgFkBOxQ,A/KlBP,C+FACwF,AGvBA,AlGuBAA,AIvBA,C8FACgX,AzGuEA,AWvEAA,CXuEC/T,OsGhDO,A/FAA,C+FAC2P,AtGgDA,AOhDAA,CPgDC3S,CyGvEC,A9FAA,C8FAC,A9FAA,AwBgCA,GsEhCG,AzGuEA,AWvEA,AwBgCA,CnCuCC,AmCvCA,EmETE,A/FAA,CkGvBC,A9FAA,CXuEC,CsGhDC,AtGgDA0B,AOhDA,MPgDM,EAAEhC,CsGhDCiT,A/FAAA,QPgDQ,CsGhDCA,AtGgDA,AOhDAA,C+FAA,A/FAA,E+FAG,A/FAA;A8IIzD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,AtGgDA,AOhDA,EoGAE,A2EiBkB,AzKjBlB,CyKiBmB,ChFjBjBC,AGvBA9L,APtCA,A3F6DA8L,AIvBA9L,ATtCA,OoG6DO,AGvBA,AlGuBA,AIvBA,C8FACuQ,A9FAAA,E2FuBE,A/FAA,I+FAI,A/FAA,C+FAC/E,A/FAAA,SkGvBS,A9FAA,C8FAC3Z,A9FAAA,K2FuBK,A/FAA,IkGvBI,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;A0I2BhD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnH8CA,AiI7CA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,AgFiBA,A/KjBA,A4BSA,EsEhCE,A9FAA,E2FuBEka,AJ7DA,A3F6DAA,AL7DA,GoG6DG,A/FAA,C2F7DC,AhGAA,CgGACja,AhGAAA,CoG6DC,A/FAA,E+FAE,A/FAA,G2F7DG,AhGAA,IgGAImS,AhGAAA,CgGAC,AhGAA;AmJiEtB,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6FeA,AhEdA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AnH+CA,AiI9CA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,A/FAA,A4BSA,EwETE,AFvBAwN,A5FuBA,AFvBAA,EuFtCE,AhGAA,GoG6DG3F,AtGiDAtN,AOjDAsN,GkGvBG,A9FAA,C8FACqE,APtCArQ,AvFsCAqQ,ATtCArQ,GoG6DG,AJ7DA,A3F6DA,AL7DA,EoG6DE,AtGiDAtB,AOjDA,CkGvBC,AzGwEA5D,AWxEA,C8FAC,A9FAA,G8FAG,A9FAA,EXwEE,EyGxEE,AzGwEAqC,AWxEA,IXwEI,EAAEf,QAAQ,EAAE;AqJ7C3C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EgGzBE,AzGwEA,AWxEA,AwBgCA,CsEhCC,A9FAA,CgGuBC,ALAA6P,AGvBA,APtCA,ArF6DA,ANAAA,AIvBA,ATtCA,EF8GEtN,AmCxCA,CmETC,A/FAA,A4BSAmN,CmETC9S,A/FAAA,GPiDG,CsGjDC,A/FAA,C+FACgT,A/FAAA,CPiDC,MsGjDM,A/FAA,C+FAC,A/FAA,I4BSI,GAAG,IAAI5C,aAAa,CAAC,IAAI,CAAC;AkHLnD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6FeA,AhEdA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AJMA,AEPA,AXAA,AjBAA,EgGzBEjD,A9FAAA,EgGuBE,ALAA6F,AtGgDYxN,AahDZ,ANAAwN,IoGAI,AFvBA,A5FuBA,AFvBA,CgGuBCjH,AFvBApL,AzGuEY,AahDZoL,AFvBApL,E2FuBE,AGvBA,AzGuEY,AOhDZ,AIvBA,C8FAC,A9FAA,E2FuBEqS,A/FAAA,EPgDc,KsGhDP,A/FAA,C+FACvI,AGvBA,AlGuBAA,AIvBA,CgGuBC,A9FAA,C8FACuB,AFvBA8L,A5FuBA9L,AFvBA8L,E2FuBE,A/FAA,OoGAO,A9FAA,C4FvBC,A9FAA,C8FACjS,A9FAAA,CgGuBCjD,A9FAAA,G4FvBG,A9FAA,C8FAC,A9FAA,CgGuBC,A9FAA,G4FvBG,A9FAA,E8FAE+V,A9FAAA,Q8FAQ,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;A0I2BxD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6FeA,AhEdA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AJOAnI,AERA,AXAA,AjBAA,EkGFE,ALAA,AGvBA,A5FuBA,ANAA,AIvBA,EuFtCE,AlG4G0B/K,AE5G1B,KuGsCKkT,A6EwCAoV,A3KxCApV,CXsE2B,EAAE5f,CmCrCzB,CAACoH,CmJOC4tB,CAAEviB,C7ExCA,A9FAA,IXsE8B,EsL9BvB,AnJPD,CAACuH,CmJOE,QnJPO,GAAG,SAASA,SAASA,CAAA,EAAG;AkHNzD,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA,AFvBA,AlHwBA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AtGFA,AFvBA,AsH0BA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,CkGFC,AFvBA,A5FuBA,AFvBA,CgGuBC,ALAA,AJ7DA,AoF8EA,AzKjBA,ANAA,AL7DA,AiCuEA,C+DvEC,AhGAA,CF2G8CjR,CkG3G5C,AhGAA,CiCuECkR,EmJOEgZ,ChFjBC/Y,A/FAAA,CP8C8C,EsG9C3C,AtG8C6CnR,AO9C7C,C4BUC,GAAG,CmJOC,CtL6B8C,EsL7B3CmqB,AnJPA,CAACvZ,SmJOS,CAAClH,KnJPK,EmJOE,CAAC;AjCbvC,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFAkK,ALAA,AGvBAha,AlHwBA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AtGFAga,ANAA,AIvBAha,AsH0BA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,C6FFC,A/FAA,C4BUC,E+DvEE0K,AlG0G6DjC,AE1G7DiC,EuGsCE,A9FAA,AwBiCA6M,CsEjCCtX,APtCA,AvFsCAA,ATtCA,CyG6DC,A3G6C6D,Aa7C7D,C8FACwE,AT7DA,ArF6DAA,AX7DA,AiCuEA,CnCmC8DgE,EmCnC3D,EsEjCE,AzGoE6D,AWpE7D,AwBiCA,GsEjCGsU,A9FAAA,CgGuBC,A9FAA,C8FAC9M,A9FAAA,EqF7DE,AhGAA,KyG6DK,A9FAA,G8FAGwF,A9FAAA,W8FAW,A9FAA,C8FACxF,A9FAAA,O8FAO,A9FAA,E4FvBE,A9FAA;A0I2BlD,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA+J,ALAA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AtGFAA,ANAA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,C6FFC,A/FAA,C+KiBC,AnJPA,E+DvEE9S,AlGyGyEQ,AEzGzER,IyG6DI,A9FAA,C8FACzC,AT7DA,ArF6DAA,AX7DA,AiCuEA6S,E+DvEE,AhGAA,CFyG0E,CsG5CxE,A/FAA,CP4C0E5P,EmClCvE,EwEVE,A9FAA,AsBUA,CwEVCoS,A9FAAA,CqF7DCvK,AhGAAA,SyG6DS,A9FAA,CqF7DCA,AhGAAA,CgGAClH,AhGAAA,CyG6DCoN,AT7DA,ArF6DAA,AX7DA,EgGAE,AhGAA,SyG6DS,A9FAA,C8FACzE,A9FAAA,S8FAS,A9FAA;AwIIrD,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFAgJ,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFAA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,AgFiBA,AtL0B8F,AO3C9F,CP2C+F,CmCjC7FzC,EmEVE,AJ7DA,AoF8EAoZ,A/KjBA,AL7DA,CiCuEC,CwEVC,A9FAA,AsBUArsB,CwEVCG,A9FAAA,CqF7DC6G,AhGAAA,EiCuEE,C+DvEC,AhGAA,AiCuEAgM,G+DvEGva,AoF8EA,ApL9EAA,CoL8EC+S,C3EjBC,A9FAA,C8FACa,A9FAAA,CsBUC,CAAC,C+DvEC,AhGAA,CgGACxB,AhGAAA,CoL8EC,CAAC,CAAC7R,C3EjBC,A9FAA,G8FAG,A9FAA,EyKiBE,EpF9EE,AhGAA,CgGAC+K,AhGAAA,CgGAC,AhGAA,CgGAC,AoF8EA,ApL9EA,CoL8EC,E3EjBES,A2EiBA,AzKjBAA,G8FAG,A9FAA,E8FAEoH,A9FAAA,E8FAE,A9FAA,E8FAE,A9FAA;AwIIjD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,EkGFEA,A3G2CA,Aa3CAA,E8FAE,ALAAzJ,AgFiBA,AzKjBA,ANAAA,A4BUA6Q,CwEVCxO,A9FAAA,CqF7DC,AlGwGAoB,AExGA,EyG6DE,A9FAA,C8FAC,A9FAA,CyFAC,AJ7DA3I,A3F6DA,AL7DAA,CoG6DCqG,AJ7DA,AoF8EA4oB,A/KjBA5oB,AL7DA,AiCuEA,EnCiCE,CkGxGC,AhGAA,AiCuEA0P,EnCiCEzN,EkGxGE,AhGAA,CgGAC6E,AhGAAA,EiCuEE,CAACK,C+DvEC,AoF8EA,ApL9EA,CoL8EC0hB,ChFjBC,A/FAA,C+FAC3b,A/FAAA,A4BUA,CnCiCC,CAAC3K,IAAI,CAACF,GsL1BG,CAAC6F,CtL0BC,CsG3CC,AtG2CA,AO3CA,C+FACrL,A/FAAA,I+KiBI,CAAC,IhFjBI,A/FAA,E+FAE,A/FAA,Q+FAQ,A/FAA,E+FAE,A/FAA;A8II7D,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,CkGFC,A9FAA,CyKiBC,AtL0BAyF,AmCjCA,ImEVIpC,AJ7DA,A3F6DAA,AL7DA,GoG6DG,AtG2CA,AO3CA,C2F7DC2H,AlGwGA/H,AExGA+H,CoG6DCsF,AJ7DA,A3F6DAA,AL7DA,GgGAG,AhGAA,CgGAC,AhGAA,GFwGG,GAAGrN,EsG3CE,A/FAA,C+FACsN,A/FAAA,KP2CK,IsG3CI,A/FAA,C+FAC,A/FAA,S+FASwC,A/FAAA,yB+FAyBA,A/FAAA,C+FAA,A/FAA,E+FAG,A/FAA;A8IIvE,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,ETyCEvN,AmCjCA,I+DvEI1I,AhGAAA,CgGAC,AlGwGA,AExGA,CoG6DC,AJ7DAuN,AlGwGA/E,AO3CA,AL7DA+E,CiCuECyI,G+DvEG,AhGAA,AiCuEA,C+DvECpM,AhGAAA,CFwGC,CsG3CC,A/FAA,E2F7DE,AlGwGAjB,AExGA,CgGACoB,AhGAAA,CoG6DC,A/FAA,C+FAC+L,A/FAAA,C2F7DC,AhGAA,CgGAC,AhGAA,EFwGE,KsG3CK,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA;A8II/B,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AJOA,AERA,AXAA,AjBAA,C0BQC,CmJOC,AtL0BA,IsG3CI,AJ7DAhP,A3F6DA,AL7DAA,CoG6DC,AJ7DA,A3F6DA,AL7DA,EoG6DE,AtG2CA6B,AO3CA,E2F7DE3I,AhGAAA,CgGAC,AhGAA,CgGACuN,AhGAAA,GFwGG,CkGxGC,AhGAA,CgGACxR,AhGAAA,MgGAM,AhGAA,qDoG6DqD,A/FAA,G+FAG,A/FAA,U+FAU,A/FAA,E+FAE,A/FAA,S+FAS,A/FAA;A8IIrG,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AnHyCA,Aa3CA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AJQA,AETA,AXAA,AjBAA,C0BSC,CmJMC,EhFjBE,A/FAA,C+FAC,A/FAA,C+FAC,AJ7DA,AoF8EA,A/KjBA,AL7DA,CoL8ECoyB,EAAE,CAAC4C,GpF9EG/wB,AhGAAA,AiCwEA,C+DxEC,AhGAA,GgGAGA,AhGAAA,CgGAC,AhGAA,CgGACwN,AhGAAA,CoL8EC,CAACuhB,EpF9EE,AhGAA,EgGAE,AhGAA,KoL8EK,CAAC,EAAE;AjCbjC,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AnH0CAnpB,Aa5CA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ACGA,AFDA,AXAA,AjBAA,E6FFE,A/FAA,A4BWA,CmEXC,A/FAA,C+FAC,AgFiBA+pB,A/KjBA,E4BWE,E+DxEE,AhGAA,CoL8EC,CAAE,ChFjBArhB,A/FAAA,C+FAC,AJ7DAD,AlGyGA,AO5CA,AL7DAA,CFyGCnL,CsG5CC,A/FAA,C+FAC,AJ7DA,A3F6DA,AL7DA,GgGAGlD,AhGAAA,CgGAC,AhGAA,CgGACuN,AhGAAA,EFyGE,CAAC3J,CkGzGC,AhGAA,GFyGG,GAAG,SAASA,IAAIA,CAACsD,IAAI,EAAEf,QAAQ,EAAE,asL3Ba4oB,SAAU,+BAA8B,CAAC;AjCblH,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA,ALAA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFA,ANAA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,C6FFC,A/FAA,CP4CC7oB,CsG5CC,A/FAA,C+FAC,AgFkBA,A/KlBA,A4BWAhB,I+DxEI,AhGAA,EiCwEE,CmJOC+pB,AnJPA5oB,C+DxEC+H,AhGAAA,EgGAE,AhGAA,CFyGC,CAACjI,CkGzGCW,AhGAAA,CgGAC,AhGAA,GgGAGuH,AhGAAA,EoL+EE,CpF/EC,AoF+EA6gB,AtL0BA,AEzGA,CgGACnzB,AlGyGA,AEzGAA,AiCwEA,CAACwX,K+DxEK,AhGAA,GgGAGlF,AhGAAA,EoL+EE,CpF/EC,AoF+EAE,ApL/EA,CgGACxS,AhGAAA,CiCwEC,CAACmH,I+DxEI,AoF+EA,ApL/EA,CoL+EC,EpF/EE4D,AhGAAA,CgGAC,AhGAA,CiCwEC,EAAE,QAAQ,EAAE;AkHP7D,AKAA,AHDA,ANAA,AjCAA,AjCAA,A4BFA2R,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFAA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6KgBE,AtL0BA,IAAI,AmCjCAlS,CnCiCC7C,C2G5CC,AT7DA2K,ArF6DA,AX7DAA,CyG6DCnL,A3G4CA,Aa5CAA,AsBWA,CnCiCCgE,CkGzGC,AhGAA,AiCwEAsM,C+DxEC5J,AhGAAA,EFyGE,EkGzGE,AlGyGAnB,AEzGA,CgGACsB,AhGAAA,CyG6DC,A9FAA,C8FAChH,A9FAAA,CqF7DC,AhGAA,EgGAEgH,AhGAAA,CyG6DC,A9FAA,AsBWA,CAAC0J,C+DxEC,AlGyGA,AEzGA,CyG6DC,AT7DA1X,AlGyGA,Aa5CA,AX7DAA,IFyGI,EkGzGE,AlGyGAmL,AEzGA,CiCwEC,CAAC,C+DxECJ,AhGAAA,CyG6DCkM,AT7DA,AlGyGA,Aa5CAA,AX7DA,EgGAE,AlGyGA7M,AEzGA,CgGAC,AhGAA,EyG6DE,AT7DAiI,ArF6DA,AX7DAA,EyG6DE6E,AT7DA,ArF6DAA,AX7DA,CgGAC,AhGAA,EFyGE,AmCjCA,CnCiCC,CAAC,G2G5CG,A9FAA,E8FAE,A9FAA;AwIIrD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AuBFA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,A2EmBA,AtLyBA,Aa5CA,I8FAIvK,A9FAAA,EqF7DE5B,AhGAAA,AiCwEA,C+DxEC,AoFgFAmoB,AtLyBA,AEzGA,EyG6DE,A9FAA,EqF7DE7gB,AlGyGA,AEzGAA,CyG6DC,A9FAA,CqF7DC,AhGAA,AiCwEA,GwEXG,A9FAA,C8FACU,A9FAAA,AsBWA,CAACgH,CmJQC,CAAC2a,OnJRO,CAAC,CAAC,EwEXE,A9FAA,CyKmBC,CAACliB,OAAO,CAAC;AjCf3C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AuBFA,A/GCA,AmLCA,A9GCA,A6BDA,A6FiBA,AhEhBA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AnH0CA,AO5CA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,CT0CC,C2G5CC,A9FAA,I8FAI6O,A9FAAA,AsBWA,CAAC,C+DxEC,AhGAA,CiCwEC,G+DxEGtW,AhGAAA,CgGAC,AhGAA,KgGAK,AhGAA,CgGAC,AhGAA,CyG6DC,A9FAA,CqF7DC,AhGAA,wDiCwEwD,GAAG,UAAU,EAAE,SAAS;AkHPrG,AKAA,AHDA,ANAA,AjCAA,AjCAA,AuBFA,A/GCA,AmLCA,A9GCA,A6BDA,A6FkBA,AhEjBA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AnH2CAlB,AO7CA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,A9FAA,EyFAEsQ,A/FAAA,A4BWA,CAAC,CwEXC,A9FAA,AsBWA,CwEXCxN,A9FAAA,EyKoBE8mB,CpFjFC,AhGAA,EyG6DE,A3G6CA,Aa7CA,C8FAC3c,A3G6CA3P,Aa7CA2P,CqF7DCzE,AhGAAA,EgGAE,AoFiFAohB,ApLjFA,CoLiFEwB,EhFpBC,A/FAA,E2F7DE3iB,AhGAAA,CF0GC,C2G7CC,A3G6CAnK,Aa7CA,CqF7DC,AhGAA,CyG6DC,AT7DAnI,ArF6DA,AX7DAA,CoLiFE,EAAEk1B,GpFjFE,AhGAA,EgGAE,AhGAA,CoLiFE,EAAE,MtLyBK,GACtC,SAAS/sB,mBAAmBA,CAACgD,IAAI,EAAEf,QAAQ,EAAE;AqJ1CjD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AuBFA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6KkBE,AtL0BID,AmCnCJ,CAAC,CwEXC,ALAA,AzFAA,ANAA,A4BWA,IwEXI,A2EoBAiD,AzKpBA,GyFAGqD,AgFoBA,A/KpBAA,A4BWA8B,C+DxEC,AhGAA,AiCwEA,E+DxEEJ,AoFiFA1S,ApLjFA0S,AiCwEA,CwEXC8E,AT7DA,AlG2GI,Aa9CJA,AX7DA,AiCwEA,CnCmCK7M,CsG9CH,A/FAA,GoGAG,A2EoBA,AzKpBA,CyKoBC1K,ChFpBC,A/FAA,EP8CM,C2G9CH,A2EoBA,AtL0BI,Aa9CJ,CyKoBCw1B,MhFpBM,AgFoBA,A/KpBA,CoGAC,A2EoBAh1B,AzKpBA,E8FAE,A9FAA,CyFACuQ,A/FAAA,E+KoBE,CAAC,CAAC,EhFpBE,AgFoBA,A/KpBA,C+FAC2J,AgFoBA,A/KpBAA,E+KoBE,KAAK,CAAC,GhFpBG,A/FAA,I+FAI,A/FAA,O+FAOpR,A/FAAA,Q+FAQ,A/FAA,C+FAC7B,A/FAAA,S+FAS,A/FAA,C+FACsJ,A/FAAA,M+FAM,A/FAA,C+FAC2J,A/FAAA,W+FAW,A/FAA,C+FAC,A/FAA,K+FAK,A/FAA,U+FAU,A/FAA,E+FAE,A/FAA;A8IIxH,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHWA,AETA,AXAA,AjBAA,C0BSC,CmEXCD,AgFoBA,AtL0BI,AO9CJA,C4BWC,CAAC,EwEXEjD,A2EoBAwc,AtL0BI,Aa9CJxc,Cb8CKhP,KkG3GC,AhGAA,EyG6DE,A9FAA,EqF7DEjE,AoFiFA,ApLjFAA,CyG6DCiT,ALAA,AJ7DA,ArF6DAA,ANAA,AL7DA,CgGACzF,AhGAAA,CoLiFChS,ChFpBCuJ,A/FAAA,E2F7DE,AlG2GI,AE3GJ,CF2GKmC,CkG3GH,AhGAA,CyG6DC,A2EoBA,AzKpBA,CyKoBCzL,CtL0BK,CsG9CH,AJ7DA,A3F6DA,AL7DA,CyG6DCiN,ALAAxF,AJ7DAiK,AlG2GI1E,Aa9CJC,ANAAxF,AL7DAiK,CoLiFC,CAAC6jB,EpFjFE,AhGAA,CyG6DC,A9FAA,C8FAC/b,A9FAAA,CqF7DCjV,AhGAAA,CgGAC,AhGAA,CoG6DC,AJ7DAwN,AlG2GI,AO9CJ,AL7DAA,CoG6DChB,AtG8CI,AO9CJA,C+KoBC,EpFjFE,AoFiFA,ApLjFA,CgGAC,AlG2GI,AE3GJ,EoG6DE,AtG8CItF,AO9CJ,C+FACiP,A/FAAA,E2F7DE,AhGAA,CF2GK,C2G9CH,A2EoBA,AzKpBA,CyKoBC,AtL0BIhQ,CkG3GH,AhGAA,CgGACgH,AhGAAA,IoG6DI,AJ7DA,A3F6DA,AL7DA,CoG6DC,A/FAA,CP8CK,CkG3GH,AlG2GI,AE3GJ,CF2GK,GkG3GD,AhGAA,CgGACC,AhGAAA,IgGAI,AhGAA,GgGAG,AhGAA,IgGAI,AhGAA;AmJiE5E,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFElI,AgFqBA,AtLyBI,AO9CJA,IoGAI,A9FAA,EyFAE,AgFqBAgsB,A/KrBA,C+FAC7qB,AtG8CI,AO9CJA,CoGAC4M,AT7DA,ArF6DAA,AX7DA,CgGAC,AhGAA,EoLkFE,AtLyBI,GsLzBDwc,CpFlFC,AhGAA,CyG6DC,A9FAA,K8FAK/mB,ALAA,AzFAAA,ANAA,C+FACoK,A/FAAA,E+KqBE,CAAC7W,C3ErBC,A9FAA,C8FACgX,A9FAAA,GyFAG,AgFqBA,A/KrBA,C+KqBC,ChFrBCzG,AgFqBA,A/KrBAA,E+KqBE,C3ErBC,A9FAA,CyKqBC,C3ErBC,A2EqBA,AzKrBA,CyFAC,A/FAA,C+FAC2J,A/FAAA,W+FAW,A/FAA,E+FAE,A/FAA;A8IItD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AnH4CI,AiI3CJ,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHWA,AETA,AXAA,AjBAA,CT4CK,CsLzBH,EhFrBExQ,A/FAAA,IoGAIqN,A2EqBAme,AzKrBAne,CyFAC,A/FAA,E+FAE,A/FAA,C2F7DC,AhGAA,CyG6DC,A9FAA,EyKqBE,C3ErBCxX,AT7DA,ArF6DAA,AX7DA,CgGAC2R,AhGAAA,CoLkFCsiB,EhFrBE9pB,A/FAAA,C2F7DC,AhGAA,CyG6DC,A9FAA,C8FAClK,A9FAAA,CqF7DCuE,AhGAAA,CoG6DC2F,AJ7DA,A3F6DAA,AL7DA,CoG6DCiF,A/FAAA,CoGAC,A9FAA,C8FACoI,A2EqBA,AzKrBAA,CyKqBC/W,GhFrBG,A/FAA,CoGAC,A9FAA,CyFAC,AgFqBA,A/KrBA,CoGACgX,A2EqBA,AzKrBAA,CyKqBC,EAAE,CAAC,I3ErBI,A9FAA,C8FAC,A9FAA;AwII5C,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHWA,AETA,AXAA,AjBAA,E6KmBEwc,IhFrBI,A/FAA,EoGAExc,A9FAAA,EyFAEiD,A/FAAA,E2F7DElW,AoFkFA,ApLlFAA,CgGAC,AhGAA,CgGACuN,AhGAAA,CoLkFCkiB,C3ErBC,A9FAA,EqF7DE,AhGAA,CyG6DC,A9FAA,E8FAE,AT7DAphB,ArF6DA,AX7DAA,GgGAG,AhGAA,CoG6DC,AJ7DApS,AoFkFA,A/KrBA,AL7DAA,CoG6DC4F,AgFqBA5F,A/KrBA4F,I+FAI,AJ7DA,A3F6DA,AL7DA,CoG6DC,AJ7DAuM,AoFkFA,A/KrBA,AL7DAA,CoLkFC,CpFlFC,AhGAA,CgGAC,AoFkFA,ApLlFA,CoG6DC,A/FAA,C+KqBC,ChFrBCxD,AgFqBA,A/KrBAA,E+KqBE,CAAC,GhFrBG,A/FAA,C+FAC,A/FAA,E+FAE,A/FAA,O+FAO,A/FAA,I+FAI,A/FAA;A8IIzD,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AnH4CA,AiI3CA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHWA,AETA,AXAA,AjBAA,E6KoBE,EnJXEsL,EwEXE,ALAA,AgFsBA,AzKtBA,ANAA,I+FAI,AJ7DA,A3F6DA,AL7DA,IoG6DI,A/FAA,K+FAKpD,A/FAAA,A4BWA,QmEXQ,A/FAA,E+FAE,A/FAA,O+FAO,A/FAA,K+FAK,A/FAA;A8IIzC,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AnH4CAlN,AiI3CA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHWA,AETA,AXAA,AjBAA,I6KoBI,AnJXA,EwEXEwX,ALAA,AzFAAA,ANAA,I2F7DI,AoFmFAgU,ApLnFA,CiCwEC5kB,CnCmCC,CsG9CC5B,AtG8CA1H,AO9CA0H,G+KsBG,CnJXC,EmEXE,AgFsBAoc,A/KtBA,CoGAC,A9FAA,Eb8CE,AmCnCA,CwEXC,ALAApc,AtG8CA9G,Aa9CA,ANAA8G,E+KsBE,CAACymB,C3EtBC,A9FAA,EyFAE,A/FAA,C+FACpiB,A/FAAA,E4BWE,IAAIzC,CnCmCC,GACjC,EsLzBsC,AnJXA,CmJWC,AnJXA2J,CmEXC,A/FAA,KP+C/BrS,KmCpCyC,EmEXEyP,AgFsBA,A/KtBAA,E+KsBEpK,AnJXA,GmJWG,EAAE+nB,AtLyBpCptB,CAACoD,CmCpCqCnC,GmJWG,AtLyBpC,CsG/CqC,AgFsBA,A/KtBA,CP+CnCoB,GmCpCuC,CAACjD,InCoChC,EAAE,GmCpCuC,CAACsJ,MAAM,CAAC2J,WAAW,CAAC,KAAK,UAAU,EAAE;AkHPxH,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,ET6CM,AmCpCJD,EwEXE,ALAA,AgFsBAkb,AzKtBA,ANAA,EP+CMvoB,EkG5GF,AhGAA,EoLmFE,AtLyBI,CsLzBHyoB,CtLyBKlqB,KmCpCC,CnCoCK,EAAE0B,AmCpCJ/D,CmJWC,CAACosB,MtLyBU,AmCpCJ,CmJWC,AnJXAjuB,CmJWC,AtLyBIJ,CAAC,EAAEiG,KmCpCC,CAACyD,MAAM,CAAC2J,GnCoCO,QmCpCI,CAAC;AkHP1D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,ALAA,AtGgDIjQ,AahDJ,ANAA,A4BWAhB,CwEXC,ALAA,AzFAA,ANAA,C+FAC,AgFsBA,A/KtBA,I2F7DI,AhGAA,AiCwEA,CwEXC,A9FAA,AsBWAmB,C+DxEC6H,AhGAAA,CgGAC,AoFmFC,ApLnFD,GoLmFGkjB,CtL0BK,CAACjrB,IsL1BA,CAAC2c,EnJXE,CnCqCK,AmCrCJhQ,CnCqCK,EsL1BF,CAAC2c,InJXI,EAAEjjB,ImJWI,CAAE,CnJXA,CAAC2J,CmJWCib,MAAM,CAAC5a,GnJXG,EmJWE,AnJXA,CmJWC,CAAE,EAAC;AjClB1D,AKAA,AHDA,ANAA,AjCAA,AjCAA,AuBFA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,C6FFC,A/FAA,C+KsBC,AtL2BIpP,CsL3BH,C3EtBCgW,A2EsBA,AzKtBAA,AsBWAzX,E+DxEE,AhGAA,CoG6DC,A/FAA,CPiDK,CmCtCH,EmJWE0B,AtL2BI,AmCtCJ,InCsCQ,CsL3BH,AtL2BIvB,E2GjDF,A2EsBA,AzKtBA,EsBWPH,CwEXU,A9FAA,AsBWAiF,EnCsCM,E2GjDF,A9FAA,EsBWE,EAAE;AkHP7B,AKAA,AHDA,ANAA,AjCAA,AjCAA,AxFDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,ALAAsL,AtGiDI,AajDJ,ANAAA,E+KsBE,EpFnFE,AlG8GI9O,AE9GJ,AiCwEA,I+DxEI,AoFmFAmqB,ApLnFA,AiCwEArb,C+DxECna,AhGAAA,CF8GK,KsGjDC,AJ7DA,AoFmFA,AtL2BID,AOjDJ,AL7DA,GoG6DG,AgFsBAuL,A/KtBA,C2F7DC6G,AhGAAA,CgGAC,AhGAA,GoLmFG,AnJXA,CnCsCK,AmCtCJrM,EnCuClB,CsGlDqBqU,A/FAAA,C4BWC,CAAC,InCuChB,AmCvCoB,EmJWExP,AnJXAkE,EnCuClB,ImCvCwB,CmEXCsL,A/FAAA,A4BWA,CmEXCtL,A/FAAA,C4BWC,CmJWC,IhFtBI,A/FAA,E+FAE,A/FAA,A4BWA,IAAI;AkHPzD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,A3GmDI/B,AanDJ,EyFAE,AgFsBA,A/KtBA,E2F7DE,AlGgHI,AEhHJ,AiCwEA,GwEXGwU,A3GmDIjW,AanDJiW,CyKsBCmU,AnJXA,CmEXC5mB,A/FAAA,E2F7DEb,AhGAAA,CiCwEC,CnCwCK,CkGhHH,AlGgHI7C,AEhHJ,CoG6DC,A/FAA,E4BWE4L,CnCwCK,CAAC,I2GnDA,A9FAA,C8FAC,A2EsBA,AzKtBA,CsBWC,EmEXE,AgFsBAzL,A/KtBA,A4BWA,CwEXC,A9FAA,E8FAE2L,A9FAAA,CyFAC,A/FAA,C+KsBC,CAACxL,CnJXC,CwEXC,A9FAA,E8FAEyL,A9FAAA,EsBWE,CmJWC,K3EtBK,A2EsBA,AzKtBA,E8FAE,A9FAA,K8FAK,A9FAA,E8FAEmK,A9FAAA,WyKsBW,G3EtBG,A9FAA,C8FAC,A9FAA;AwIIvE,AKAA,AHDA,ANAA,AjCAA,ALFA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,CkGFC,A9FAA,CyFAC,AtGmDI,AOnDJ,C+FAC,A/FAA,C2F7DC,AoFmFA,ApLnFA,EFgHMvU,AmCvCJ,ImJUI4oB,AtL6BI,GmCvCD7mB,EnCuCM9O,ImCvCA,IAAI8O,CnCuCK,EsL7BF,AtL8BlB,GsL9BqBvD,AnJVA,CAAC4H,GnCwCf,CsL9BmB,CAACzH,EtL8BhB,KsL9BuB,EnJVE,GmJUG,SnJVS+L,aAAa,4BmJU4B;AjClBjG,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,ETmDM,EsL9BF,AnJXA,EnCyCM1K,EsL9BF0oB,EtL8BM,KsL9BC,AtL8BIprB,IsL9BAqrB,ItL8BQ,IAAI3oB,IAAI,CAAC1C,GsL9BD,EAAE,GtL8BO,KAAKA,QAAQ,EAAE;AqJjD3D,AKAA,AHDA,ANAA,AjCAA,ALFA,ALAA,A/GCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFA,ANAA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E0BUE,CAAC,C+DzEC,AlGkHI,AElHJ,AiCyEA,EmJWE,EtL8BM,CsGrDH2M,A/FAAA,CPqDK,EsL9BFX,EtL8BM,CsL9BH,AtL8BIpM,EsGrDF+M,A/FAAA,C+FACvE,AgFuBA,A/KvBAA,O+FAO,A/FAA,E+FAE,AtGqDI,AOrDJ,KPqDS,CAAC,EAC3B,IAAI,CAACzI,OAAO,GAAGZ,MAAM,CAAC0B,MAAM,CAAC,IAAI,CAAC,CAAC,KAChC,IsLhCkE;AjCnB/E,AKAA,AHDA,ANAA,AjCAA,ALFA6R,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFAA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHYA,AEVA,AXAA,AjBAA,C0BUC,CmEZCnF,AJ7DA,A3F6DAA,AL7DA,CgGAC,AhGAA,EgGAE,AhGAA,CoLoFC,AtLgCI,CmC3CH,CwEZC,ALAA,AzFAA,ANAA,CoGACpQ,A9FAAA,EyFAEoQ,A/FAAA,C+KuBC,CtLgCKlM,GsLhCD7F,ChFvBC,A/FAA,CoGAC,A9FAA,C8FAC0G,A3GuDI,AavDJA,CbuDKf,CsGvDHyD,AgFuBA,A/KvBAA,C+KuBCwH,EtLgCM,CsLhCH,AtLgCI,C2GvDH,A2EuBA,AzKvBA,EyFAE,A/FAA,CoGAC,ALAA,AzFAA,ANAA,UoGAUa,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA,CyFAC,A/FAA,C+FAC,A/FAA;A8IIhD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,A9FAA,AsBYAkD,E+DzEE/M,AoFoFA,ApLpFAA,CoLoFC,CtLgCK,CkGpHH,AhGAA,EyG6DEkU,AT7DAvQ,ArF6DAuQ,AX7DAvQ,CFoHK1F,CsLhCH,IpFpFI,AoFoFAqqB,ApLpFA,CFoHK,CAAC3tB,AmC3CJ,GAAG,KwEZK,A9FAA,C8FAC,A9FAA,GsBYNoS,CwEZU,A9FAA,AsBYAtL,CmJWC,AtLgCI,C2GvDHoI,A9FAAA,CyKuBC,AtLiCrB,GmC5CwB,CwEZC,A3GwDrB,AaxDqB,CbwDpBhP,AmC5CqB,CwEZC,A9FAA,GbwDlB,C2GxDsB,A3GwDrB,AaxDqB,E8FAE,A9FAA,I8FAI,A9FAA,E8FAE,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,EbwDnB,EAAEkD,IAAI,EAAE2B,IAAI,CAAC1C,QAAQ,IAAIA,QAAQ,CAAC;AqJpDxE,AKAA,AHDA,ANAA,AjCAA,ALFA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,CkGFC,A9FAA,CyFAC,A/FAA,E2F7DER,AlGqHI,AErHJA,AiCyEA,EmJWE,GpFpFG,AhGAA,EgGAE,AhGAA,AiCyEAiF,CmJWCuH,GAAG,EnJXE,CmJWC,EpFpFExM,AhGAAA,KgGAKA,AhGAAA,CgGAC2I,AhGAAA,CgGAC,AhGAA,EgGAEC,AhGAAA,AiCyEA,IAAI,G+DzEG,AhGAA,EgGAE,AhGAA,6BoLoF6B;AjCnBnE,AKAA,AHDA,ANAA,AjCAA,ALFA,ApHCA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AtGwDI,AOxDJ,A4BYA,CnC4CK,AmC5CJ,G+DzEG,AoFoFA,ApLpFA,GyG6DG8O,A3GwDI,AaxDJA,GyKuBG,CpFpFCxQ,AlGqHI,AErHJA,GoLoFGtL,IpFpFI,AlGqHIsH,AErHJ,CgGAC,AoFoFA,ApLpFA,CoLoFCsJ,EtLiCM,C2GxDHkL,AT7DA,AoFoFA,AzKvBAA,AX7DA,CyG6DCnN,A2EuBA,AzKvBAA,CqF7DChF,AhGAAA,EFqHM,G2GxDD,A9FAA,E8FAE8H,A9FAAA,K8FAK,A3GwDI,AaxDJ,CqF7DC,AhGAA,CyG6DCC,AT7DA/H,AlGqHI,AaxDJ+H,AX7DA/H,QyG6DQ,A9FAA,E8FAEoS,A9FAAA,GqF7DG,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,EgGAE/O,AhGAAA,EyG6DE,A9FAA,E8FAE6O,A9FAAA,GqF7DG,AhGAA,CgGAC,AhGAA,EgGAE,AhGAA,CgGAC,AhGAA,CgGAC,AhGAA,EgGAE,AhGAA,IyG6DI,A9FAA,E8FAE,A9FAA;AwII/E,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHYA,AEVA,AXAA,AjBAA,EkGFErB,ALAA,AzFAAA,ANAA,E+KuBE,AtLiCIjT,CsLjCH,E3EvBE,A9FAA,C8FAC,AT7DA,ArF6DA,AX7DA,GoLoFG,CtLiCK,GAAG,CAAC,CAAC,S2GxDK,A9FAA,E8FAEkK,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwIIlC,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHaA,AEXA,AXAA,AjBAA,EkGFE,A9FAA,EbyDM,E2GzDFtK,A2EuBA/K,AzKvBA+K,EqF7DE8F,AhGAAA,CFsHK1L,AmC5CJgQ,CnC4CK,C2GzDH,A9FAA,EqF7DE,AoFoFA,AtLkCIjK,AEtHJ,CyG6DCqH,A2EuBA7I,AzKvBA6I,CqF7DC,AhGAA,CgGAC,AhGAA,CFsHK,AmC5CJ4C,CnC4CK/W,AmC5CJwS,CmJUC,C3EvBC,A2EuBA,AzKvBA,C8FACO,A9FAAA,GbyDO,CmC5CH,EnC4CM,AmC5CJ,CnC4CK,CsLlCH,CtLkCKhM,CsLlCHuE,AtLkCI,I2GzDA,A3GyDI,AazDJ,CyKuBC,AtLkCI,CsLlCHuJ,CtLkCK9N,CAAC,EsLlCF,AtLkCI,CsLlCH,CtLkCK;AqJrD/C,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,ALAA,AzFAA,ANAA,A4BaAwQ,IwEbIN,A2EuBArV,AtLkCI,AazDJqV,EqF7DE,AhGAA,AiC0EA,EnC4CMnK,C2GzDH,A9FAA,AsBaAyK,EmJUE,CAACjM,AtLkCI,CAACvE,C2GzDH,A3GyDI,AazDJ,CbyDK,AmC5CJ,EmJUE,C3EvBC,A2EuBA,AzKvBA,CsBaC6H,CwEbC,A3GyDIxE,AazDJ,MsBaM,CmJUC,AnJVA,CnC4CK,CsLlCHkB,GtLkCOwB,EsLlCF,CAACrB,CtLkCK,CAAC1E,CAAC,CAAC,CAACqD,EsLlCF,CAAC,EnJVE,CAAC,EnC4CM,KAAKA,QAAQ,EAAE;AqJrDrE,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,A/FAA,EoGAEuC,A9FAAA,EyKuBE,EpFpFE+F,AlGsHI1F,AEtHJ0F,CyG6DC,A9FAA,C8FACiB,A9FAAA,EyKuBErI,K3EvBK,A2EuBA,AzKvBA,G8FAG,A9FAA,CqF7DC,AhGAA,EgGAE,AhGAA,CFsHK,C2GzDH,A9FAA,EbyDMwB,IAAI,CAAC/F,CAAC,CAAC,CAACqD,QAAQ;AqJrD/C,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,A/FAA,A4BaA,EwEbEoX,A2EuBA,AzKvBAA,EqF7DE,AhGAA,CgGAC,AhGAA,CgGAC,AlGsHIzU,AEtHJ,CgGAC,AhGAA,KyG6DK,A9FAA,C8FACoH,A9FAAA,CbyDK,GAAGpN,CAAC,C2GzDH,A9FAA,E8FAE4F,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII7B,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,EkGFE,A2EuBA,AzKvBA,AsBaA,CwEbC,A9FAA,CqF7DC,AhGAA,IFsHQ,C2GzDH,A9FAA;AwIIT,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6FqBA,AhEpBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AJ7DA,A3F6DA,AL7DA,AiC0EA,C+D1EC,AhGAA,CyG6DC,AT7DA,ArF6DA,AX7DA,CgGAC,AhGAA,CFsHK,E2GzDFpB,A9FAAA,E8FAE,A9FAA;AwIIV,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AJ7DA,A3F6DA,AL7DA,EyG6DE,A3GyDI,AazDJ,I8FAI,A9FAA,C8FAC8V,AT7DAlQ,ArF6DAkQ,AX7DAlQ,UgGAU,AhGAA,IyG6DI,A9FAA,E8FAE5F,A9FAAA,E8FAE,A9FAA,G8FAGkW,A9FAAA,Y8FAY,A9FAA,C8FAC9U,A9FAAA,K8FAK,A9FAA,E8FAEsK,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwIIxD,AKAA,AHDA,ANAA,AjCAA,Ad/DA,A3G8DA,AmLCA,A9GCA,A6BDA,A6FqBA,AhEpBA,AGAA,AFAA,AgBAA,ApBDA,AjH/DA,A+HgEA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,CyF/DC,AhGAA,CoG6DC,AJ7DA,A3F6DA,AL7DA,AiC0EA,C+D1EC,AhGAA,CyG6DC,A3G0DI,Aa1DJ,EyFAEV,A/FAAA,EoGAEhL,A3G0DIwB,Aa1DJxB,E8FAE,A9FAA,E8FAE,A9FAA,EyFAE,A/FAA,EP0DM,CsG1DH,A/FAA,EP0DM,CAAC,CsG1DH,A/FAA,CP2DX,OAAO,IsG3DgBgM,AtG2DZ,AO3DYA,M+FAM,A/FAA;A8IIvC,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6FqBA,AhEpBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,A/FAA,A4BaA,EnC+CM,E2G5DFrD,ALAA,AzFAAA,ANAA,C+FACqC,A/FAAA,CP4DKxJ,CsLrCH6nB,MhFvBM,A/FAA,CP4DK,CsLrCHA,CAAED,ChFvBA,A/FAA,CoGAC,ALAAxa,AzFAA,ANAAA,CoGAChG,A3G4DI,Aa5DJA,Cb4DK,EAChBrH,G2G7DiB,A9FAA,CyKuBE,AtLsCf,C2G7DevB,A3G6Dd0B,Aa7Dc1B,CyKuBE6nB,C3EvBA,A9FAA,C8FAC,A9FAA,Eb6DZ,CsG7De,AtG6Dd,AO7Dc,C+FACttB,AgFuBC,AtLsCf,AO7DcA,CP6Db,CsLtC8B,EhFvBb,A/FAA,C+FACiR,A/FAAA,CP8D5B,OsG9DoC,A/FAA,E+FAE,A/FAA,I+FAI,A/FAA,C+FAC,A/FAA,E+FAE,A/FAA,O+FAO,A/FAA,I+FAIA,A/FAAA,Q+FAQ,A/FAA,C+FACvE,A/FAAA,O+FAO,A/FAA,C+FAC,A/FAA;A8IItF,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AgFsBmD,A/KtBnD,A4BaA,EwEbE,A9FAA,C8FAC,A9FAA,CyFAC,AgFsBiCA,AtLwC7BtF,AO9DJ,C+FACgG,A/FAAA,IoGAI,A9FAA,EyKsBmC,E3EtB/BvG,A3G8DI,Aa9DJA,CyKsB+B7F,AtLwC1BgG,I2G9DA,A3G8DI,Aa9DJ,C8FACgK,ALAA,AzFAAA,ANAA,CP8DK/J,EsG9DF,A/FAA,C+KsBsB,CAAA/M,EhFtBlBwX,A/FAAA,EP8DM,C2G9DH,A3G8DI,Aa9DJ,CyKsBe,G3EtBXP,A9FAAA,K8FAK,A2EsBMnQ,AzKtBN,CyFAC,A/FAA,C+FAC0L,A/FAAA,EoGAEyE,A9FAAA,K8FAK,ALAA,AgFsBH,AzKtBG,ANAA,CoGACjX,A9FAAA,CyFAC,A/FAA,I+FAI,A/FAA,CoGAC,A9FAA,CyFACuW,AgFsBXxW,A/KtBWwW,EoGAE,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA,GyFAG,A/FAA,C+FAC,AgFsBpB,A/KtBoB,G+KsBpBzP,SAAA,MAAG,CAAC,CAAC;AjClBnD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6KoBE,AnJTA,EnCiDM,E2G9DF,A9FAA,AsBaA,CAACqT,CmJSC6F,E3EtBE,A9FAA,GyKsBG,GAAG6U,C3EtBC5d,A9FAAA,K8FAK,A9FAA,AsBaA,CmJSC,AnJTAnR,CmJSC0M,G3EtBG,A9FAA,AsBaA,CAACuE,GmJSG,I3EtBI,A2EsBAvE,AzKtBA,CsBaC,EAAE,CwEbC,A9FAA,C8FAC7F,A9FAAA,EyKsBE,AnJTA,CmJSCqT,AnJTA,EwEbE,A9FAA,C8FAClJ,A9FAAA,CsBaC,CmJSC,CAAC,AnJTA,IAAI,GwEbG,A9FAA,I8FAI3N,A9FAAA,KsBaKoO,CwEbC,A9FAA,C8FAC3M,A9FAAA,IsBaI,CAAC,EAAE,OwEbO,A9FAA,C8FACqM,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,K8FAKxX,A9FAAA,M8FAM,A9FAA,C8FAC0H,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA;AwII/G,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AgFsBA,A/KtBA,EP+DM,AmClDJ,IwEbI8P,A2EsBA0e,AtLyCI7oB,Aa/DJmK,GsBaG,CnCkDK,C2G/DH,A3G+DIjX,Aa/DJ,EsBaE+W,CwEbCiB,A2EsBA,AzKtBAA,GyKsBG6c,AtLyCI,ImClDA,CnCkDK,AmClDJriB,CnCkDK,CsLzCH,CAACA,AtL0CjBnH,ImCnDqB,CAAC,CnCmDhB,CsL1CkB,AtL0CjBF,C2GhEkB,A9FAA,C8FAC8L,A9FAAA,EyKsBEzE,AtL0CjB,CAAC,E2GhEmB,A9FAA,C8FAC,A3GgEjB1F,AahEiB,GyKsBG,CAAC6oB,AtL0CjB,CAAC,CAAC,CAAC,KsL1CsB,CAAC;AjClBvD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AgFuBA,A/KvBA,A4BaA,EnCoDM,E2GjEF,ALAA,AgFuBA,AzKvBA,ANAA,C+FAC/lB,A/FAAA,CPiEKvE,KsL1CC+nB,CtL0CK,CsGjEH,AtGiEIrrB,AOjEJ,G+FAG,A/FAA,C+KuBC,GhFvBG,A/FAA,E+KuBE,KtL0CS,GsL1CD,EAAE,AtL0CIhI,SAAS,EACrC,IAAI,CAACkI,IAAI,CAAC,gBAAgB,EAAEkD,IAAI,EAAE6B,gBAAgB,IAAI5C,QAAQ,CAAC;AqJ9DzE,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AtGkEI,AOlEJ,A4BcA,EmJSE,E3EvBE,ALAAoI,AzFAA,ANAAA,A4BcA,CAACU,GwEdGqO,A2EuBA,AzKvBAA,GyFAG,A/FAA,C+KuBC/b,ChFvBC,A/FAA,I+KuBI,C3EvBC,A2EuBA,AzKvBA,CsBcC,CwEdC,A9FAA,EsBcE,IAAIgS,aAAa,CAAChF,OAAO,EAAE,IAAI,CAAC,4CmJS4C,CAAC;AjCnBrG,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6KqBE,AtL4CI,EsGnEF,A/FAA,IoGAI,ALAA,AzFAA,ANAA,CPmEK,G2GnED7F,A9FAAA,CbmEK,EsGnEF6F,A/FAAA,EoGAE,A9FAA,C8FACqB,A9FAAA,IyFAI,A/FAA,C+FACwG,A/FAAA,KoGAK,ALAA,AzFAA,ANAA,EoGAEnG,A9FAAA,GyFAG,A/FAA,U+FAU,A/FAA,CoGAC,A9FAA,C8FACC,ALAA,AzFAAA,ANAA,I+FAI,A/FAA,C+FACmG,A/FAAA,CoGAC,A9FAA,E8FAE,A9FAA,GyFAG,A/FAA,CoGAC6F,A9FAAA,EyFAE3N,A/FAAA,O+FAO,A/FAA,C+FAC6H,A/FAAA,K+FAK,A/FAA,mBoGAmB,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAKqH,A9FAAA,Q8FAQ,A9FAA,C8FACvN,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,E8FAEsK,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AwIIxI,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHiEI,AiIhEJ,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,CTiEK,CmCrDH,EmEdE,A/FAA,EoGAE,A9FAA,C8FAC,A9FAA,CyFAC,A/FAA,KoGAK,A9FAA,EyFAEzE,A/FAAA,EoGAE7F,A9FAAA,K8FAK,ALAA,AzFAA,ANAA,CoGACiH,ALAA2G,AzFAA3G,ANAA2G,KoGAK,A9FAA,CyFAC,A/FAA,CoGAC,A9FAA,IyFAI,A/FAA,U+FAU,A/FAA,E+FAE,A/FAA,I+FAI,A/FAA,C+FACC,A/FAAA,O+FAO,A/FAA,G+FAGhI,A/FAAA,O+FAO,A/FAA,C+FAC+H,A/FAAA,M+FAM,A/FAA;A8II3E,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHkEA1Q,AiIjEA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6KqBE,AnJTA,EmEdE,A/FAA,E4BcE,CAAC+F,CwEdCsE,ALAA,AzFAAA,ANAA,IPoEI,CAAC/M,EsGpEEqL,A/FAAA,A4BcA,GAAG,IwEdI,ALAA,AtGoEA,AapEA,ANAA,A4BcA,CwEdC2B,ALAAxB,AtGoEA7K,AapEAqM,ANAAxB,GPoEG,G2GpEG,A3GoEA9I,AapEA,CyFAC,A/FAA,CoGAC,A9FAA,I8FAIqW,ALAA,AzFAAA,ANAA,MPoEM,CAAC/Y,GsGpEG,A/FAA,E+FAE,A/FAA,I+FAI,AtGoEA,AOpEA,C+FACkM,AtGoEAtL,AOpEAsL,QoGAQ,ALAA,AzFAA,ANAA,CoGAC,A9FAA,C8FAC,A9FAA,C8FAC,ALAAb,AzFAA,ANAAA,GPoEG,IsGpEI,A/FAA,C+FACG,A/FAAA,O+FAO,A/FAA;A8II9E,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,A9GCA,A6BDA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHmEA9I,AiIlEA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6KqBE,AnJRA,EmEfE,A/FAA,EoGAE,A9FAA,AsBeA2I,CwEfC,A2EuBA,AzKvBA,CyFAC,A/FAA,IPqEI,C2GrEC,A2EuBApF,AtL8CAjG,AarEA,AsBeA,EmEfEqL,A/FAAA,A4BeA,CmJQC,C3EvBC7F,A9FAAA,GyKuBGxD,E3EvBE,ALAA,AtGqEA,AarEA,ANAA,CoGAC6J,ALAAyH,AtGqEAzS,AarEAgL,ANAAyH,G+KuBG,CAACtN,ChFvBC,A/FAA,G+KuBG,C3EvBC,A2EuBAimB,AzKvBA,CyFAC,A/FAA,CoGAC,A9FAA,IyKuBI,CAAC,EAAE,AtL8CA,EsGrEE,A/FAA,CPsEvC,CsGtEyC,A/FAA,I+FAI,A/FAA,C+FAC1Y,A/FAAA,GPsErC1S,GsGtE2C,A/FAA,G+FAGwK,A/FAAA,O+FAO,A/FAA,C+FACiI,A/FAAA,IPsEpCzS,CsGtEyC,AtGsExCmD,AOtEwC,IPsEpC,EAAE;AqJlEtC,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE,AtGsEI,AOtEJ,E+KuBE,AnJRA,EnCuDM/C,E2GtEF,A2EuBAe,AzKvBA,AsBeA,MmJQM,C3EvBC,A2EuBAhC,AtL+CI,AatEJ,AsBeAqL,EnCuDMnH,G2GtED,A9FAA,EsBeE,CnCuDK,AmCvDJgP,CmJQC,CAACub,AtL+CI7uB,CAAC,EmCvDF,KAAK,MmJQM,CAACjB,GnJRG,CmJQC,CAAC6uB,AnJRA,IAAI,CAACra,KmJQK,CnJRC,CmJQClN,EnJREoF,CmJQC,CAAC,EAAE,GnJRG,CAAC6H,KAAK;AkHXxE,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,E6FFE1C,AtGuEItM,AOvEJsM,E4BgBE,EwEhBE,A2EuBA,AzKvBA,C8FAC,A9FAA,CyFAC,AtGuEI,AOvEJ,A4BgBA,CmEhBC7R,A/FAAA,C+KuBC6vB,CtLgDK,E2GvEF,ALAA,AzFAA,ANAA,C+FAC,A/FAA,CPuEK,AmCvDJnjB,CnCuDKzI,EsGvEF,AgFuBA,A/KvBA,C+FAC,A/FAA,G4BgBG,CmJOC,AtLgDI,AmCvDJwQ,ImJOI,EAAE,AnJPA,KAAK,UAAU,EAAE,IAAI,CAACC,OAAO,GAAGhI,OAAO,CAAC+H,MAAM;AkHZ3E,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,ETqEM,EmCtDF,EnCsDMlP,E2GvEFsB,A2EuBAgoB,AzKvBAhoB,AsBiBA,InCsDQ,C2GvEH,A9FAA,C8FACgH,A9FAAA,CsBiBCnB,EnCsDMzS,CsLhDH,CAACqN,E3EvBE,A9FAA,CyKuBC,AnJNA,CmJMC,AnJNAuF,CwEjBC,A9FAA,EyKuBEygB,AtLgDI,EACtB,C2GxEqB,A9FAA,CsBiBC,EmJME,CAAChmB,EtLiDlB,AmCvDoB,CmJMC,CAAC,EtLiDlB,MmCvD0B,EAAE,IAAI,CAACiG,QAAQ,GAAGb,OAAO,CAACG,OAAO;AkHb9E,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,I0BgBI,EmJKE,E3EvBE,A9FAA,AsBkBA,IwElBIhG,A9FAAA,GsBkBG6F,EwElBE,A9FAA,C8FAC2O,A9FAAA,IsBkBI,CAAC1G,EwElBE,A9FAA,GsBkBG,CwElBC,A9FAA,C8FACvD,A9FAAA,GsBkBG,KwElBK,A9FAA,E8FAE,A9FAA,GsBkBG,EAAE,IAAI,CAACwD,MAAM,GAAGlI,OAAO,CAACiI,KAAK;AkHdxE,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,AXAA,AjBAA,ETsEM,AmCtDJ,ImJMI,I3ExBIxD,A2EwBA+I,AzKxBA/I,K8FAK,A2EwBA,AzKxBA,EyKwBE,C3ExBCtK,A9FAAA,K8FAK,A9FAA,C8FACwU,A9FAAA,O8FAO,A9FAA,C8FAC9G,A9FAAA,K8FAK,A9FAA,C8FACpD,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII5C,AKAA,AHDA,ANAA,AjCAA,AVFAF,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFAA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,ETsEM,AmCrDJY,InCqDQtM,EsGxEF,AgFwBA,A/KxBA,A4BmBA,CmEnBClE,A/FAAA,A4BmBArB,CwEnBC,A9FAA,EyKwBE6vB,AtLgDI,CAAC5tB,AmCrDJ,CwEnBC4E,A9FAAA,AsBmBA,ImEnBI,A/FAA,A4BmBA,CwEnBC,ALAAgO,AzFAA,ANAAA,A4BmBA,CwEnBC7D,A2EwBA,AzKxBAA,GyFAG,A/FAA,E+KwBE,ChFxBC,A/FAA,CPwEK,EsLhDF,C3ExBC,A9FAA,CyKwBC,CtLgDK/W,E2GxEFkX,A9FAAA,IyFAI,A/FAA,CoGAC,A9FAA,C8FACjX,A9FAAA,CbwEK,EAAE,G2GxED,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE0hB,A9FAAA,Q8FAQ,A9FAA,C8FACvN,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,E8FAEsK,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK0K,A9FAAA,a8FAa,A9FAA,C8FACxN,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII7H,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHmBA,AEjBA,A5BAA,E6FFEuH,A/FAAA,EPwEM,I2GxEA,A3GwEIpN,AaxEJ,C8FAC,A9FAA,CyKwBC+sB,K3ExBK,A9FAA,CyFAC,AgFwBA,A/KxBA,C+FAC,AgFwBC,AtLgDG,AOxEJ,CPwEK7zB,GsGxED,AgFwBAoN,A/KxBA,E+FAE,A/FAA,C+KwBE,AtLgDG,GsGxEDoL,A/FAAA,EPwEM,CAAC,EAAE,iBsGxEa,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,c+KwBc,CAAC;AjCpBnE,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,C6FFC,A/FAA,KPwES,EsLhDF,CAAC,C3ExBCkJ,A3GwEI,AaxEJA,CbwEK3X,IsLhDA,G3ExBG,A3GwEI,AaxEJ,C8FACoK,A9FAAA,EbwEMhL,I2GxEA,A9FAA,E8FAEwD,A3GwEI,AaxEJA,CbwEK9B,I2GxEA,A9FAA,E8FAEoM,A3GwEI,AaxEJA,CbwEK,I2GxEA,A3GwEI,AaxEJ,CbwEK,C2GxEH,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII/C,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHmBA,AEjBA,A5BAA,MTsEU,E2GxEF,A9FAA,CyFAC2D,A/FAAA,C+KwBCiZ,AtLgDI,CAAC7pB,KsLhDC,CAAE,IAAGoD,ChFxBCwN,A/FAAA,C+FACzG,AtGwEI,AOxEJA,C+KwBE,EtLgDK,CAAC,EsGxEF,A/FAA,E+FAEvB,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA,mC+KwBmC,CAAC;AjCpBvE,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHmBAmE,AEjBA,A5BAA,E6FFE,A/FAA,EPwEM,CAAC,C2GxEH,ALAAxL,AzFAA,ANAAA,E+FAE,AgFwBA,A/KxBA,A4BmBA,CAACpE,EmEnBE,AtGwEI,AOxEJ,I+FAIwR,AtGwEItN,AOxEJsN,G4BmBG,CAACgC,EnCqDM,CAACxP,CmCrDH,GnCqDO,AmCrDJ,CnCqDK,KAAKpL,MmCrDE,GmEnBG,AtGwEI,AOxEJ,C+FAC,A/FAA,C+FAC,AtGwEI,AOxEJ;A8II3C,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,E6FFE,A/FAA,A4BmBA,EwEnBE,A9FAA,C8FAC,A9FAA,CyKwBC,AtLgDI,AmCrDJ,CAACkI,GnCqDO,C2GxEH,A9FAA,AsBmBA,CnCqDK,AmCrDJ,GwEnBG,A9FAA,C8FACsZ,A3GwEI,AaxEJA,CbwEKvX,EmCrDF,EAAE,IAAIxE,CwEnBC,A9FAA,E8FAE,A9FAA,CbwEK,CmCrDH,CAAC,GnCqDO,CAAC,EAC3B,IAAI,CAACuE,OAAO,GAAGZ,MAAM,AmCtDyB,CnCsDxB0B,AmCtDyB,CAAC,KnCsDpB,CAAC,IAAI,CAAC,CAAC,KAEnC,OAAOQ,MAAM,CAACF,IAAI,CAAC;AqJvE/B,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHmBA,AEjBA,A5BAA,C0BiBC,CmEnBC+I,A/FAAA,E+KwBE,AtLmDI,CsLnDH,C3ExBCvH,A9FAAA,K8FAK,A2EwBA,AzKxBA,C8FACgH,A9FAAA,IyFAI,A/FAA,C+FACQ,A/FAAA,EoGAE,A9FAA,G8FAG,A9FAA,CyFAC,A/FAA,E+FAE5I,A/FAAA,EoGAE,ALAA,AzFAA,ANAA,C+FAC,A/FAA;A8II5B,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHoBA,AElBA,A5BAA,E6FFEnG,A/FAAA,EP2EM,E2G3EFuc,A2EwBAgT,AzKxBAhT,GyFAG,A/FAA,A4BoBA/G,CmEpBCjU,A/FAAA,CP2EK,IAAI,CsLnDH,CAACyG,ChFxBC,A/FAA,CoGAC,ALAAwF,AzFAA,ANAAA,CoGACuB,A2EwBA,AzKxBAA,CyFAC,AgFwBA,A/KxBA,C4BoBCyG,CmEpBCrP,A/FAAA,A4BoBA4I,CmJICif,ChFxBC,A/FAA,CoGAC,ALAA,AzFAA,ANAA,EoGAEzmB,A9FAAA,CsBoBC,CmJIC,CAACS,AnJJAwF,EwEpBE,A9FAA,AsBoBA,CwEpBC,A2EwBA,AzKxBA,CyKwBC,AnJJA;AkHhBnC,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,ETyEM,AmCvDJ,EwEpBE,A2EwBA,AzKxBA,EsBoBErH,EAAE,GAAG,IAAI/F,KAAK,CAAC,iBAAiB,CAAC;AkHhBvC,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,A2EwBA,AzKxBA,AsBoBA;AkHhBF,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6FsBA,AhErBA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,ETyEM,AmCvDJ2O,MAAM,CAAClM,IAAI,CAAC,OAAO,EAAEsD,EAAE,CAAC;AkHhB1B,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6FuBA,AhEtBA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,A3G2EI,Aa3EJ,AsBoBAgc,GAAG,CmJKC2L,AtLkDIpsB,AmCvDJH,QAAQ,CnCuDK,AmCvDJiM,CnCuDK5S,CmCvDH,CmJKC,CnJLCuL,EmJKE,AnJLA,CnCuDK,AmCvDJ,KnCuDS,CAAC,EAAE;AqJvElC,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHoBA,AElBA,A5BAA,EkGFE,A2EyBA4nB,AzKzBA,Eb2EM,IAAIhmB,IAAI,EsLlDF,CtLkDKhE,MAAM,CAACgE,IAAI,CAAC9B,MAAM,CAAC;AqJvEtC,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,A2EyBAqpB,AzKzBA,Eb2EM,IAAItnB,CsG3EHyN,A/FAAA,EP2EM,GsLlDD,KhFzBKA,A/FAAA,C+FAC1G,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,E+FAEsK,A/FAAA,K+FAK,A/FAA,E+FAErE,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8II9C,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHoBA,AElBA,A5BAA,EkGFE,ALAA,AgFyBAmgB,AzKzBA,ANAA,EP2EM,EsG3EFxnB,A/FAAA,E+FAE,A/FAA,CoGAC,A3G2EIxE,Aa3EJ,C8FAC4F,A3G2EI,Aa3EJA,GyKyBG,AtLkDI,CAAC,C2G3EH,A9FAA,C8FACiH,A3G2EI7M,Aa3EJ6M,Cb2EK,GAAGzG,C2G3EH,A9FAA,Gb2EO,CAACnN,C2G3EH2M,A9FAAA,K8FAK,A3G2EI,Aa3EJ,C8FAC3M,A9FAAA,Cb2EK,EAAE+G,CAAC,E2G3EF,A3G2EI,Aa3EJ,G8FAG4F,A9FAAA,K8FAK,A9FAA,C8FAC8J,A9FAAA,a8FAa,A9FAA,I8FAI9J,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AwIInF,AKAA,AHDA,ANAA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHoBA,AElBA,A5BAA,E6FFE,AgFyBA+0B,A/KzBA,I+FAI9d,AtG2EI7J,AO3EJ6J,E+KyBE,CtLkDK,EsG3EF,A/FAA,CP2EK9J,IsG3EA,AtG2EI,AO3EJ,CP2EKpG,CAAC,CAAC,CsG3EH,A/FAA,E+FAE,A/FAA;A8IItB,AKAA,AHDA,ANAA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,ANAA,AjCDA,A/FAA,AmLAA,AxIFA,AHoBA,AElBA,A5BAA,E6KuBE0sB,EhFzBEloB,A/FAAA,E+FAE,AtG2EI,AO3EJ,GoGAGmW,ALAA,AgFyBA,AzKzBAA,ANAA,CP2EKtU,GsG3EDsL,AtG2EI,AO3EJA,IoGAIgJ,A9FAAA,C8FACvN,A3G2EI,Aa3EJA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,E8FAEsK,A9FAAA,Cb2EK,CsG3EH,A/FAA,C+FAC,AtG2EI,AO3EJ,C+FAC,A/FAA,CoGAC,A9FAA,E8FAEsK,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA;AwIIpD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,AHoBA,AElBA,A5BAA,EkGFE,ALAA,AgFyBAkR,AzKzBA,ANAA,C+FAC,A/FAA,GoGAG9lB,A3G2EI,Aa3EJA,CyKyBC,EhFzBE,A/FAA,A4BoBAkO,CnCuDK,C2G3EH,A3G2EI7S,Aa3EJ,C8FAC2Y,A9FAAA,CyFAC,A/FAA,MoGAM,A9FAA,AsBoBA9F,CmEpBC5D,A/FAAA,A4BoBA9C,GwEpBGxH,A9FAAA,EyFAE,A/FAA,C4BoBC,EwEpBE,A9FAA,AsBoBAA,CwEpBC3M,A3G2EI,Aa3EJA,CyFAC,AtG2EIoN,AO3EJ,GP2EO,AmCvDJ,CnCuDK,C2G3EH,A9FAA,AsBoBA6J,GmEpBG,A/FAA,EoGAE,A9FAA,AsBoBA,CwEpBC,A9FAA,CyFAC,A/FAA,A4BoBArE,CmEpBCjG,A/FAAA,C4BoBC,CwEpBC,A9FAA,C8FACA,A9FAAA,AsBoBA,EmEpBE,A/FAA,C+FACmK,A/FAAA,EoGAE,A9FAA,C8FACuC,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA,CyFAC,A/FAA,E+FAE,A/FAA;A8II7D,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,E6KuBEub,AnJLA,EwEpBEjoB,ALAApB,AtG2EI,Aa3EJoB,ANAApB,E+FAE,A/FAA,A4BoBAuc,GwEpBG,ALAA,AzFAA,ANAA,CoGAC7G,A9FAAA,CsBoBC,EmEpBE5I,A/FAAA,C4BoBC,IAAI,EwEpBE,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,SyFAS,A/FAA,C+FAC,A/FAA,O+FAO,A/FAA,E+FAE,A/FAA,C+FAC,A/FAA,Q+FAQ,A/FAA,E+FAE,A/FAA,Q+FAQ,A/FAA,C+FAC,A/FAA,E+FAEpB,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8IIvE,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6FuBA,AhEtBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,C6KuBC,ChFzBC,A/FAA,A4BoBA,EwEpBE9C,A3G2EI,Aa3EJA,EsBoBE5I,EnCuDM,AmCvDJ,CnCuDKvD,C2G3EH,A9FAA,C8FACC,A9FAAA,AsBoBA,IwEpBI,A9FAA,C8FAC,A9FAA,AsBoBA,MwEpBM,A9FAA,E8FAEgP,A9FAAA,Gb2EO,CAAC,C2G3EH,A9FAA,C8FAC,A9FAA,cb2EkB,CAAC;AqJvEjD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6FwBAvU,AhEvBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,ALAA,AzFAA,ANAA,A4BqBA,CwErBC,A9FAA,Cb2EK,EsG3EF6I,AgF0BA,A/K1BAA,A4BqBA0L,CmJKCtU,ChF1BC,AtG2EI,AO3EJ,CoGAC,A3G2EIoH,Aa3EJ,CyFAC,A/FAA,C4BqBC,GmJKG,CAACopB,CtLiDK,AmCtDJ,GnCsDOhqB,CmCtDH,EAAE,GnCsDO,CAAC0B,CsLjDH,GAAGqoB,EtLiDM,CAAC,IAAI,CAAC,IsLjDA,CAACC,YAAY;AjCtBvD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6FwBAzwB,AhEvBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,IkGFI,ALAAwR,AtG2EI,Aa3EJ,ANAAA,A4BqBA3I,EmJKE,AnJLA,CmJKC5I,CtLiDK,CAACqH,AmCtDJ,IAAIK,CmJKC,CAACqqB,GhF1BG,A/FAA,C+FACvgB,A/FAAA,EP2EM,CmCtDH,CAAC,CnCsDK,CsG3EH,AtG2EI,AO3EJ,E+FAE5I,AgF0BA,A/K1BAA,E+FAE,A/FAA,C+FAC,AgF0BA2nB,A/K1BA,Y+K0BY,CAACwB,YAAY,KnJLK,CAAC;AkHjB7D,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6FwBAhyB,AhEvBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,E0BmBE,CAAC,CwErBCiK,ALAAvH,AtG2EI,Aa3EJuH,ANAAvH,E+K0BE,CAACzC,E3E1BE,A9FAA,AsBqBA,CwErBC3C,A9FAAA,CyFAC,AtG2EI,AO3EJ,C+FAC2G,A/FAAA,C4BqBC,CmJKC,CAACosB,AtLiDI,C2G3EH,A9FAA,I8FAIpmB,ALAA,AzFAAA,ANAA,A4BqBAsK,CmErBCrE,A/FAAA,E+FAE,A/FAA,EoGAE,ALAArH,AzFAA,ANAAA,A4BqBA,CwErBCuL,A2E0BA,AzK1BAA,CyFAC,A/FAA,C+FAC,A/FAA,C+K0BCoc,CnJLC,MwErBM,A9FAA,EsBqBE,CwErBC,A9FAA,C8FAC,A9FAA,CyK0BC,CAACH,AnJLA9b,CwErBCA,A9FAAA,IsBqBI,CwErBC,A9FAA,C8FACjX,A9FAAA,GsBqBGD,CmJKC,E3E1BE,A9FAA,MsBqBM,IAAI,CAAC4M,KAAK,CAACmK,UAAU,EAAE;AkHjBpF,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6FwBApU,AhEvBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,ETyEM,E2G3EF,ALAA,AzFAA,ANAA,A4BqBA6I,EmJKE,AnJLA,CmJKC5I,C3E1BC4e,A9FAAA,CsBqBC,EmErBE,A/FAA,E4BqBElX,CmJKC,CAAC0qB,ChF1BC,A/FAA,EoGAE,A9FAA,E8FAEpoB,A9FAAA,CyK0BC,CnJLC,CAAC,CmJKCumB,C3E1BC,A9FAA,C8FACnX,A9FAAA,M8FAM,A9FAA,C8FAC7P,A9FAAA,GyK0BG,CAAC6oB,G3E1BG,A9FAA,C8FAC9d,A9FAAA,EyK0BE,G3E1BG,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAKtK,A9FAAA,GsBqBG,CAAC,CwErBC,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FAC/U,A9FAAA,I8FAI,A9FAA,C8FACiQ,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII7E,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6FwBAvU,AhEvBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,E6FFE,AtG4EI0F,AO5EJ,A4BqBA,EwErBE,A9FAA,EyK0BE,CAACzF,C3E1BCgK,A9FAAA,Gb4EO,E2G5EF,A9FAA,C8FACiU,A2E0BA,AtLkDIvV,Aa5EJuV,CyK0BC6S,KtLkDS,CAACtoB,CsLlDH,GAAG+nB,AtLkDI,C2G5EH,A3G4EI,Aa5EJ,E8FAEtR,A9FAAA,SyK0BS,CAAC6R,E3E1BE,A9FAA,C8FACtf,A9FAAA,IyK0BI,E3E1BE,A9FAA,C8FAC,A9FAA;AwIIhD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6FwBAzR,AhEvBA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,ALAA,AtG6EI,Aa7EJ,ANAA,A4BqBA,ImJKI,AtLmDI,AmCxDJ6I,CmJKC5I,CnJLC,CmErBC,A/FAA,C4BqBC,GmErBG,AtG6EIyF,AO7EJ,C+K0BC,CAACqqB,KAAK,EtLmDM,CsLnDHS,ItLmDQ,QsLnDI,CAACT,CtLmDK,EAAE,EsLnDF;AjCtBzC,AKAA,AHDA,ANAA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6FwBA/vB,AhEvBA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,A0HGA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFEif,A9FAAA,Eb6EM,AmCxDJxN,EmJKE,CAACxR,CtLmDK,CAACoF,CmCxDH,CAACE,GmJKG,C3E1BC,A2E0BA2sB,AzK1BA,AsBqBA,CwErBCzgB,A9FAAA,AsBqBA,MwErBM,A9FAA,CyK0BC,AtLmDI,AmCxDJ,CwErBCxH,A3G6EIxB,Aa7EJwB,CsBqBCpB,CmJKC2nB,CnJLC,CnCwDK,AmCxDJ,CwErBC,A9FAA,C8FAC,A3G6EI9qB,Aa7EJ,QyK0BQ,CAACwsB,AtLmDI,CAAC,OsLnDG;AjCtB/C,AKAA,AHDA,ANAA,AjCAA,ALFA,ALAA7d,A/GCA,AmLCA,AjFAA,A6FyBArU,AhExBA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,ANAAqU,A0HGA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,ET2EM,CAAC,CmCxDHwQ,EmJME,CAAC5kB,AnJNA,CmErBC,A/FAA,A4BqBAgE,CmErBCQ,AtG6EI,AO7EJA,IP6EQiB,CsLlDH,EnJNE,CmJMC8qB,AnJNAtgB,CmErBC,A/FAA,C+FACyH,A/FAAA,A4BqBA,EAAE9O,CnCwDK,CmCxDH,CmErBC,A/FAA,A4BqBA,GmErBG,AtG6EIxL,AO7EJ,E+K2BE,OtLkDW,CsG7EHkX,A/FAAA,CP6EK,IsG7EA,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEtE,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8II1D,AKAA,AHDA,ANAA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,E6FFE,A/FAA,EP6EM,AmCxDJkV,EmErBEnb,A/FAAA,GoGAG8U,A9FAAA,AsBqBA,EmErBE,A/FAA,C4BqBC,EmErBE,A/FAA,G4BqBG,CmErBC,A/FAA,C+FACvO,A/FAAA,EoGAEuO,A9FAAA,C8FAC9U,A9FAAA,K8FAK,A9FAA,E8FAEsK,A9FAAA,IyFAI,A/FAA,CoGAC,A9FAA,E8FAE,A9FAA;AwIIpC,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,ALAA,AzFAA,ANAA,A4BqBA,EnCwDM,E2G7EF1L,ALAAyC,AzFAAzC,ANAAyC,EoGAE,A9FAA,CyFAC,AtG6EIjH,AO7EJ,CP6EK,EsG7EF,A/FAA,CP6EKqB,IsG7EA,A/FAA,KP6ES,CAACpI,MAAM,GAAG,CAAC,EAAE+G,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;AqJzEpD,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,ALAA,AzFAA,ANAA,A4BqBA,IwErBI,ALAA+T,AtG6EI,Aa7EJ,ANAAA,CoGAC7C,A9FAAA,EsBqBE6P,CnCwDK,CsG7EH,AtG6EI/f,AO7EJ,G+FAG,A/FAA,A4BqBA,CmErBC4E,A/FAAA,KoGAK,ALAA,AzFAA,ANAA,CoGACsK,ALAAH,AzFAAG,ANAAH,IP6EQ,C2G7EH,A3G6EI3L,Aa7EJ,C8FAC,A9FAA,Gb6EO,C2G7EH,ALAA,AzFAA,ANAA,CP6EK/C,GsG7ED6P,A/FAAA,GoGAGhB,A9FAAA,Gb6EO,CAAClQ,C2G7EH,A3G6EI,Aa7EJ,Cb6EK,CAAC,G2G7ED,ALAA,AzFAA,ANAA,C+FACkQ,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA,CoGAC,A9FAA,I8FAIA,A9FAAA,K8FAK,A9FAA,K8FAKlX,A9FAAA,S8FAS,A9FAA,I8FAI,A9FAA,C8FAC4M,A9FAAA,K8FAK,A9FAA,C8FACmK,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA;AwIItG,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,AHqBA,AEnBA,A5BAA,E6FFE,A/FAA,EoGAEvL,A3G6EI,Aa7EJA,E8FAE,ALAAuP,AzFAA,ANAAA,GoGAG,A9FAA,EyFAE,A/FAA,EoGAEzC,A9FAAA,EyFAE,A/FAA,C+FAC5Y,A/FAAA,M+FAM,A/FAA,C+FACyY,A/FAAA,Q+FAQ,A/FAA,C+FACjB,A/FAAA,CoGAC,A9FAA,C8FAC,A9FAA,GyFAG,A/FAA,C+FAC,A/FAA,E+FAE,A/FAA,CoGAC,A9FAA,E8FAE,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,E8FAE,A9FAA,Q8FAQ,A9FAA,E8FAE,A9FAA,Y8FAY,A9FAA,C8FAC,A9FAA,E8FAEA,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwIIrF,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,AHsBAF,AEpBA,A5BAA,EkGFE,A3G6EI,Aa7EJ,EyFAEE,A/FAAA,I4BsBI,CmEtBC,A/FAA,A4BsBA9P,GmEtBG6Q,A/FAAA,M4BsBM,CAACqC,KAAK,GAAG,ImEtBI,A/FAA,C+FACpD,A/FAAA,K+FAK,A/FAA,A4BsBAA,CmEtBC,A/FAA,I4BsBI,EAAEC,QAAQ,EAAEtE,EAAE,EAAE;AkHlB1D,AKAA,AHDA,ANAA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,EkGFE,ALAA,AtG8EI,Aa9EJ,ANAA,A4BsBA,IAAIjG,GwEtBGpB,A3G8EI,Aa9EJA,E8FAE,A9FAA,AsBsBA,EnCwDM,CmCxDH,IAAI,CAAC2H,cAAc;AkHlBjC,AKAA,AHDA,ANAA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnH4EI,Aa9EJ,AoHGA,AvCDA,A/FAA,AmLAA,AxIFA,ADEA,A5BAA,CT4EK,CsG9EH,A/FAA,A4BsBA,ImEtBI,A/FAA,A4BsBAlF,GAAG,GAAG,CmEtBCkJ,A/FAAA,I4BsBI,ImEtBI,A/FAA,K+FAK,A/FAA,U+FAU,A/FAA,E+FAE,A/FAA;A8IItC,AKAA,ATDA,AjCAA,ALFAwF,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnH6EA,Aa/EAA,AoHGA,AvCDA,A/FAA,AmLAA,AxIFA,EHsBE,EmEtBE9J,A/FAAA,E+FAE,A/FAA,A4BsBAkI,EwEtBE,A9FAA,C8FAC3T,ALAA+P,AtG+EA7J,Aa/EAlG,ANAA+P,E4BsBE,GAAG,CAACvK,EmEtBE,A/FAA,CoGAC,A9FAA,C8FACkV,A3G+EAxU,Aa/EAwU,Cb+EC/Y,AmCzDA,CAACgO,KnCyDK,C2G/EC,A9FAA,Cb+EC3L,E2G/EE,A9FAA,CsBsBC,CnCyDC,EAAEmC,CmCzDC2K,KnCyDK,E2G/EE,A3G+EA,Aa/EA,MsBsBM,CAAChB,KAAK,CAAC;AkHlBvD,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,EqEAE,A3G+EA,Aa/EA,AsBuBA,EmEvBEC,A/FAAA,EP+EE7L,AmCxDAyP,GwEvBG,A9FAA,EsBuBE,CmEvBC,AtG+EA,AO/EA,CoGAC,A9FAA,C8FAC/H,A9FAAA,CyFAC,AtG+EAjK,AO/EA,A4BuBA,CAACrJ,GmEvBG,A/FAA,EP+EE,CAACsK,AmCxDA,CAACmO,KwEvBK,A9FAA,C8FACyI,A3G+EA,Aa/EAA,EsBuBE,CAAC1J,IwEvBI,A9FAA,CsBuBC,CAAC,EAAE,CwEvBC,A9FAA,K8FAK,A9FAA;AwII9C,AKAA,ATDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,AvCDA,A/FAA,AmLAA,AxIFA,CqEAC,A9FAA,CyFAC,AtGgFA,AOhFA,E4BuBEA,EnCyDE5L,GmCzDG,GnCyDG,AmCzDA2M,KnCyDKjY,SAAS,EACtB,GmC1D2B,CAACkX,GnC0DrB,EAAE,AmC1DwB,CAAC;AkHnBtC,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,EgEAE,AtGkFA,AOlFA,A4BuBA,ImEvBI6D,AtGkFAvN,AOlFAuN,K+FAK,A/FAA,E+FAE5D,A/FAAA,GPkFG,GAAG7L,EsGlFE,A/FAA,G+FAG,A/FAA,CPkFC,CAACF,IAAI,CAAC,CsGlFC,A/FAA,C+FAC,A/FAA,K+FAK,A/FAA,I+FAI,A/FAA,C+FAC+L,A/FAAA,Q+FAQ,A/FAA,E+FAEA,A/FAAA,Q+FAQ,A/FAA,G+FAGvK,A/FAAA,K+FAK,A/FAA,C+FACuM,A/FAAA,e+FAe,A/FAA;A8IIrF,AKAA,ATDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,AvCDA,A/FAA,AmLAA,AxIFA,EgEAE,AtGkFA,AOlFA,A4BwBA,ImExBI,AtGkFA3L,AOlFA,A4BwBA,OmExBOqF,A/FAAA,A4BwBAsE,EmExBE,A/FAA,CPkFC,IsGlFI,A/FAA,CPkFCnX,AmC1DA,KAAK,ImExBI,AtGkFA,AOlFA,E+FAE6S,AtGmF5B,AOnF4BA,E+FAE,A/FAA,E4BwBE,CmExBCiG,A/FAAA,C4BwBC,CnC2D3B,CsGnF6B,A/FAA,CPmF3B;AqJ/Eb,AKAA,ATDA,AjCAA,ALFA6D,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFAA,AoHGA,AvCDA,A/FAA,AmLAA,AxIFA,EgEAE,AtGoFA,AOpFA,E4BwBE9J,EmExBEjG,AtGoFA,AOpFAA,A4BwBA,EwExBE,A9FAA,C8FACxF,A9FAAA,AsBwBA+P,EmExBE,A/FAA,C+FACpD,A/FAAA,CPoFCvG,ImC5DI,CwExBC,ALAA,AzFAA,ANAA,CoGACuU,A9FAAA,CyFAClH,A/FAAA,GPoFG,KAAK,E2GpFE,A9FAA,G8FAG,ALAA,AzFAA,ANAA,C+FAC,A/FAA,I+FAI,AtGoFA,AOpFA,E+FAEhI,AtGqFpC,AOrFoCA,E+FAE,A/FAA,CoGACmP,ALAA,AzFAAA,ANAA,C+FAC,A/FAA,EoGAE,A9FAA,CbqFnCzU,C2GrFqC,A9FAA,CyFAC,A/FAA,I+FAIwN,AtGqFpC,AOrFoCA,GPqFjC,CAACvN,CsGrFqC,A/FAA,I+FAIsN,A/FAAA,KPqF/B,CAACzQ,IsGrFwC,A/FAA,C+FAC,A/FAA,GPqFjC,CsGrFqC,A/FAA,E+FAEuC,A/FAAA,CPqFnCY,IsGrFwC,A/FAA,E+FAE0J,A/FAAA,IPqFhC,CsGrFqC,AtGqFpC,AOrFoC,E+FAErE,A/FAAA,CPqFnC,CsGrFqC,AtGqFpCrF,AOrFoC,C+FAC,A/FAA,E+FAE,A/FAA,OPqF7B,CAAC;AqJjFtE,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,A/FAA,AmLAA,AxIFA,EqEAE,A3GsFA,AatFA,EyFAEZ,A/FAAA,A4BwBAuK,EwExBE,A9FAA,C8FACkJ,A9FAAA,EyFAE,AtGsFA9S,AOtFA,C+FACsM,A/FAAA,E4BwBE,GnC8DG,AmC9DA,GnC+DXpM,CsGvFe,A/FAA,A4BwBA,CwExBC,A9FAA,CyFAC,A/FAA,CoGAC4S,A9FAAA,WbuFH,CAAC7S,C2GvFe,A9FAA,G8FAGqB,A9FAAA,MbuFR,C2GvFe,A3GuFd,AavFc,C8FAC,A9FAA,EbuFZhD,UAAU,CAAC2B,I2GvFkB,A9FAA,C8FAC,A9FAA,C8FAC6S,A9FAAA,IbuFV,EAAE7S,O2GvFqB,A9FAA,GbuFX,CAACvN,MAAM,CAAC;AqJnF3E,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHqFA,AiIpFA,AvCDA,AoFAA,AxIFA,EqEAE,A9FAA,AsBwBA,EmExBEgO,A/FAAA,EoGAEmT,A9FAAA,CyFAC,A/FAA,G+FAGpG,A/FAAA,GoGAG,A9FAA,G8FAG,A9FAA,I8FAIqF,A9FAAA,GyFAG,A/FAA,C+FAC,A/FAA,I+FAI,A/FAA,E+FAEzT,A/FAAA,GoGAG,A9FAA,C8FACoV,A9FAAA,CyFAC,A/FAA,EoGAE,ALAAjH,AzFAA,ANAAA,CoGAC,A9FAA,IyFAI,A/FAA,E+FAE7D,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEtE,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8IIhE,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHsFA/I,AiIrFA,AvCDA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,A4ByBA,IwEzBI,A9FAA,AsByBAiR,CwEzBC/H,A9FAAA,IsByBI,CnC+DC,CAAC5L,AmC/DA+P,QwEzBQ,A9FAA,AsByBA,CwEzBCiK,A3GwFA,AaxFAA,CbwFC/Y,CmC/DC,KwEzBK,A9FAA,G8FAG+Y,A3GwFA,AaxFAA,AsByBA,CAAC,EnC+DE,GmC/DG,CwEzBC,A9FAA,GsByBG,CAACjK,CnC+DC9O,OmC/DO,EnC+DEA,AmC/DA8O,CnC+DC/L,IAAI,EAAE,CmC/DC,GAAGwB,KAAK,CAACuM,eAAe;AkHrBrF,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EqEAE,ALAA,AtGwFA,AaxFA,ANAA,A4B0BA,IAAI,GmE1BGlL,AtGwFAX,AOxFAW,G+FAG,A/FAA,C4B0BC4E,EAAE,InC8DI,CAAC,AmC9DA,InC8DI,EAAEzH,IAAI,AmC9DA,EnC8DE,AmC9DAyH,EAAE,EnC8DE,CAAC,AmC9DAiG,GAAG;AkHtBxC,AKAA,ATDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHsFA,AOxFA,A0HGA,AvCDA,AoFAA,AxIFA,CgEAC,AtGwFA,AOxFA,CoGAC,A9FAA,AsB2BA,IwE3BI,A9FAA,AsB2BAlM,CwE3BCoG,A9FAAA,IsB2BI,CAACa,KAAK,EAAEgH,EwE3BE,A9FAA,C8FAC1D,A9FAAA,Q8FAQ,A9FAA,EsB2BE,CwE3BC,A9FAA,AsB2BA,IwE3BI,A9FAA,AsB2BA,CwE3BCnE,A9FAAA,CsB2BCH,EAAE,CAAC,CAAC,KAAK,IwE3BI,A9FAA,AsB2BAkI,CwE3BCqG,A9FAAA,IsB2BI,GwE3BG,A9FAA,C8FACjK,A9FAAA,AsB2BA2D,QwE3BQ,A9FAA,EsB2BE,CAAC,IAAI,EAAElO,KAAK,EAAEsK,KAAK,EAAErE,EAAE,CAAC,EAAE;AkHvBjG,AKAA,ATDA,AjCAA,AVFAmE,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHuFAlN,AOzFAkN,A0HGA,AvCDA,AoFAA,AxIFA,IH2BIpK,ImE3BI,A/FAA,C+FACxF,A/FAAA,A4B2BA,CAACyS,EnC8DE,CAACzS,KsGzFK,A/FAA,C+FAC6T,A/FAAA,A4B2BA,EAAE,CnC8DC,CsGzFC,AtGyFAvN,AOzFA,G+FAG,A/FAA,SPyFS,GsGzFG,AtGyFA,AOzFA,SPyFSA,YAAYA,CAACtC,IAAI,EAAE;AqJrFlE,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EqEAE,ALAA,AtGyFA,AazFA,ANAA,E4B2BE6C,EmE3BE,A/FAA,C+FACkF,A/FAAA,A4B2BA,EnC8DE7F,CmC9DC0N,SnC8DS,CAAC,CsGzFC,A/FAA,C+FAC3B,A/FAAA,C4B2BC,CnC8DC,AmC9DA,EnC8DEjO,EsGzFE,A/FAA,A4B2BA,EmE3BE,AtGyFA,AOzFA,A4B2BAwB,EnC8DE,GmC9DG,EnC8DE,AmC9DAmO,CnC8DC,ImC9DI,EAAE7D,KAAK,EAAEC,QAAQ,EAAEtE,EAAE,CAAC;AkHvBhE,AKAA,ATDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHuFA,AOzFA,A0HGA,AvCDA,AoFAA,AxIFA,CgEAC,AtGyFA,AOzFA,CoGAC,A9FAA,AsB2BA,IwE3BI3O,A9FAAA,C8FAC,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA,C8FAC8O,A9FAAA,c8FAc,A9FAA,C8FACgJ,A9FAAA,M8FAM,A9FAA,C8FAC3K,A9FAAA,I8FAI,A9FAA;AwIIzC,AKAA,ATDA,AjCAA,AVFA2F,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHwFAlN,AO1FAkN,A0HGA,AvCDA,AoFAA,AxIFA,EqEAE,A9FAA,AsB4BA,IwE5BIiL,A9FAAA,EyFAE,A/FAA,C+FAC7a,A/FAAA,A4B4BA6G,GnC8DG,AmC9DA,CwE5BC,A3G0FAN,Aa1FA,G8FAG,A9FAA,E8FAE,ALAA,AzFAA,ANAA,C+FACuN,A/FAAA,M+FAM,A/FAA,CP0FC,EsG1FE,A/FAA,CP0FC,UAAS3O,CsG1FE,A/FAA,MP0FK,EAAEnB,IAAI,EAAE;AqJtFrD,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,AH4BA,CAAC,CwE5BC,ALAA,AtG0FA,Aa1FA,ANAA,I+FAIwB,AtG0FA,AO1FAA,GoGAG1I,A9FAAA,C8FAC,A9FAA,CyFAC,A/FAA,EP0FEqI,CsG1FC,A/FAA,CoGAC,A9FAA,GyFAG,A/FAA,CoGAC,ALAA4G,AzFAA,ANAAA,CP0FC,C2G1FC,A3G0FAxF,Aa1FA,YyFAY,A/FAA,CP0FC,KAAK,UAAU,EAAE;AqJtFnD,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,AH6BAqJ,EmE7BE,A/FAA,EoGAEiL,A3G0FA,Aa1FAA,EyFAErV,A/FAAA,E4B6BE,CAACxF,EwE7BE,ALAA,AtG0FAmF,Aa1FA,ANAA,C+FAC8M,A/FAAA,GoGAG+H,A9FAAA,GyFAG,AtG0FA,AO1FA,A4B6BA,CnC6DCzT,AmC7DAsN,CmE7BC,A/FAA,EoGAE,A9FAA,C8FACX,A9FAAA,AsB6BA,GAAG,EwE7BE,A9FAA,C8FACpW,A9FAAA,C8FAC,A9FAA,C8FACuN,A9FAAA,Cb0FC,CAACrG,E2G1FE,A9FAA,C8FAC,A9FAA,Cb0FC,CAAC,AmC7DA;AkHzBtC,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EtC0FE,AmC7DA,CnC6DC,C2G1FClH,ALAA0I,AzFAA1I,ANAA0I,CoGAC,A9FAA,CsB6BCA,EwE7BE1I,A9FAAA,C8FAC,ALAA,AtG0FA,Aa1FA,ANAA,CoGACwN,ALAA2H,AzFAA3H,ANAA2H,C4B6BC,GwE7BG,A9FAA,AsB6BA,EmE7BE,A/FAA,E+FAE,A/FAA,A4B6BA,CAAClG,cAAc;AkHzBjC,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EqEAE,A9FAA,AsB8BAvG,EmE9BE,AtG0FA,AO1FA,G4B8BG,CmE9BC,A/FAA,A4B8BAyM,CmE9BCzM,A/FAAA,EP0FEe,GsG1FG,A/FAA,A4B8BA,CmE9BCyL,A/FAAA,C4B8BC,MmE9BM,A/FAA,EP0FE,CAACrT,CsG1FC,A/FAA,C+FAC6G,A/FAAA,EP0FE,CAACL,EsG1FE,A/FAA,C+FAC8M,A/FAAA,IP0FI,EsG1FE,AtG0FAjO,AO1FA,I+FAI,AtG0FA,AO1FA,C+FACwB,AtG0FA,AO1FAA,K+FAK,A/FAA,C+FAC2M,A/FAAA,gB+FAgB,A/FAA,I+FAI3M,A/FAAA,K+FAK,A/FAA,C+FAC+M,A/FAAA,e+FAe,A/FAA,E+FAEwB,A/FAAA,W+FAW,A/FAA,C+FAC,A/FAA,I+FAI,A/FAA,E+FAEvO,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8IIrH,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,AH8BA,CAAC,CwE9BC,ALAA,AtG0FA,Aa1FA,ANAA,IoGAI,A9FAA,C8FACoG,A9FAAA,c8FAc,A9FAA,C8FACgJ,A9FAAA,M8FAM,A9FAA,C8FACrK,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AwIIpC,AKAA,ATDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHwFA,AO1FA,A0HGA,AvCDA,AoFAA,AxIFA,AH+BAqF,CmE/BC,AtG0FA,AO1FA,CoGAC,A9FAA,I8FAIiL,A9FAAA,EsB+BE,CAAC7a,IwE/BI,A9FAA,K8FAK,A9FAA,AsB+BA,CAAC8T,CwE/BC,A9FAA,E8FAE,A9FAA,GsB+BG,CwE/BC,A9FAA,C8FAClI,A9FAAA,CsB+BC,YAAY,CwE/BC,A9FAA,C8FACgJ,A9FAAA,M8FAM,A9FAA,C8FAC/U,A9FAAA,I8FAI,A9FAA,C8FACgb,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AwII9D,AKAA,ATDA,AjCAA,AVFAjL,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHyFAlN,AO3FAkN,A0HGA,AvCDA,AoFAA,AxIFA,EqEAE,A9FAA,AsB+BA,IwE/BI,A9FAA,AsB+BApK,CwE/BCoG,A9FAAA,CyFAC,A/FAA,C+FAC5L,A/FAAA,E4B+BE,CnC4DC,CAACA,CmC5DC,ImE/BI,A/FAA,A4B+BA,CmE/BCgU,A/FAAA,A4B+BAjI,EwE/BE,A9FAA,C8FAClT,A3G2FA,Aa3FAA,Cb2FC0N,K2G3FK,A9FAA,G8FAGsU,A9FAAA,EsB+BE,GnC4DG,CsG3FC,A/FAA,CoGAC,A9FAA,C8FAChiB,A3G2FA0N,Aa3FA1N,CyFAC,A/FAA,KoGAK,A9FAA,IyFAImb,A/FAAA,GP2FG,esG3FeA,A/FAAA,C+FACjE,A/FAAA,Q+FAQ,A/FAA,E+FAE,A/FAA;A8II9E,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHyFA,AiIxFA,AvCDA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,A4BgCA,IAAIvK,GwEhCG,A3G2FAe,Aa3FA,EsBgCE,CAAC0L,CwEhCC,A9FAA,KsBgCK,EAAE,EnC2DE1L,CAACvC,IAAI,EAAE;AqJvF7B,AKAA,ATDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,AvCDA,AoFAA,AxIFA,CqEAC,A9FAA,CyFAC,AtG2FA,AO3FA,E4BgCEwB,EmEhCE,AtG2FAtB,AO3FA,G4BgCG,CAAC+N,EnC2DE,CsG3FClC,A/FAAA,EP2FE,CmC3DC,EAAE,CnC2DC,CAACnN,CsG3FC,A/FAA,K+FAK,A/FAA,CP2FC,OsG3FO,A/FAA,E+FAEmN,A/FAAA,Q+FAQ,A/FAA,G+FAGA,A/FAAA,Q+FAQ,A/FAA,C+FACkE,A/FAAA,W+FAW,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA;A8IIrE,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EgEAE,AtG4FA,AO5FA,E4BiCE,EmEjCE,AtG4FA/P,AO5FA,E+FAE,A/FAA,A4BiCA,CmEjCC,A/FAA,A4BiCAsB,GnC2DG,EsG5FE,A/FAA,A4BiCA,CAACwM,CmEjCC,A/FAA,CP4FCpZ,KsG5FK,A/FAA,A4BiCA,EmEjCE,A/FAA,EP4FE,AmC3DA,CAAC4M,CnC2DC,GsG5FG,A/FAA,C4BiCC,CmEjCC,A/FAA,A4BiCAyM,MAAM,CmEjCC,A/FAA,E+FAE,A/FAA,C4BiCC,CAACzM,KAAK,CmEjCC,A/FAA,A4BiCA2M,EmEjCE,A/FAA,Q+FAQ,A/FAA,E+FAE,A/FAA,I4BiCI,EmEjCE,A/FAA,E+FAE,A/FAA,A4BiCA3M,KAAK,CAAC+M,CmEjCC,A/FAA,E+FAE,A/FAA,S+FAS,A/FAA,E+FAE,A/FAA,C4BiCC,EAAEwB,OmEjCO,A/FAA,E+FAE,A/FAA,E4BiCE,CAAC,EmEjCE,A/FAA,C+FAC,A/FAA,C+FACjF,A/FAAA,A4BiCA,EAAEtJ,KmEjCK,A/FAA,A4BiCA,CmEjCC,A/FAA,A4BiCA,CmEjCCuK,A/FAAA,Q+FAQ,A/FAA,G+FAG,A/FAA,E+FAE,A/FAA,E+FAEkE,A/FAAA,W+FAW,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,G+FAG,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,E+FAE,A/FAA,M+FAM,A/FAA,I+FAIxC,A/FAAA,oB+FAoB,A/FAA,C+FAC1B,A/FAAA,Q+FAQ,A/FAA,C+FAC,A/FAA;A8IInM,AKAA,ATDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,AvCDA,AoFAA,AxIFA,EgEAE,A/FAA,A4BiCA,EnC2DE,EsG5FE,A/FAA,C+FAChE,A/FAAA,CP4FC3F,UAAU,GsG5FG,AtG4FAlC,AO5FA,C+FAC6N,A/FAAA,KP4FK,CAAC/N,IAAI,CAAC,IsG5FI,A/FAA,G+FAG+L,A/FAAA,Q+FAQ,A/FAA;A8IIhD,AKAA,ATDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,AoHGA,AvCDA,AoFAA,AxIFA,AHiCA,CAAC,CmEjCC,A/FAA,EoGAE+K,A3G6FA,Aa7FAA,Ib6FI,CsG7FC,A/FAA,EoGAE,A9FAA,EyFAE,A/FAA,CoGAC,A9FAA,Cb6FC1U,S2G7FS,A9FAA,Cb6FC,KAAK,UAAU,EAAE;AqJzF1C,AKAA,ATDA,AjCAA,ALFA,ALAA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,ANAA,A0HGA,AvCDA,AoFAA,AxIFA,AHkCAwJ,CmElCC,A/FAA,KP6FK,EmC3DE,CwElCCmL,A9FAAA,AsBkCA/a,InC2DI,CAAC,ImC3DI,CAACgU,awElCa+G,A9FAAA,C8FACnX,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA,CsBkCC,GAAG,SAASoQ,kBAAkBA,CAACjE,QAAQ,EAAE;AkH9B9E,AKAA,ATDA,AjCAA,AVFA/N,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFAA,A0HGA,AvCDA,AoFAA,AxIFA,EqEAE,A9FAA,AsBkCA,EnC2DE,CAAC,C2G7FC4B,ALAA,AzFAAA,ANAA,CoGAC,ALAAT,AzFAA,ANAAA,IoGAI2X,A3G6FA,Aa7FAA,Ib6FI1U,G2G7FG,A9FAA,E8FAE,A9FAA,CyFAC,A/FAA,C+FACwJ,A/FAAA,GP6FG,KsG7FK,AtG6FAhX,AO7FA,C+FACoH,A/FAAA,QP6FQ,CsG7FC,A/FAA,CP6FC,CsG7FC,A/FAA,gB+FAgB,A/FAA,E+FAE,A/FAA;A8II5D,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EgEAE,A/FAA,A4BkCA,EwElCE,A9FAA,Eb6FE,AmC3DA,OnC2DOoG,AmC3DA2J,QAAQ,EnC2DE,CAAClX,EmC3DE,InC2DI,ImC3DI,EAAEkX,QAAQ,GAAGA,QAAQ,CAACkE,WAAW,CAAC,CAAC;AkH9BrE,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EgEAE,A/FAA,A4BkCA,EwElCErQ,A3G6FA,Aa7FAA,C8FAC,A9FAA,CsBkCC,EwElCEkX,A9FAAA,AsBkCA,CAAC,KAAK,CwElCC,A9FAA,CsBkCC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAChM,OAAO,CAAC,CAACiB,QAAQ,GAAG,EAAE,EAAEkE,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI/Q,SAAS,CAAC,oBAAoB,GAAG6M,QAAQ,CAAC;AkH9B/M,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EqEAE,ALAA,AtG6FA,Aa7FA,ANAA,A4BkCA,CwElCC,A9FAA,GsBkCG,CAAChE,EwElCE,A9FAA,YsBkCY,CAACgG,eAAe,GAAGhC,QAAQ;AkH9BhD,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AvCDA,AoFAA,AxIFA,EgEAE3M,AtG8FA,AO9FAA,A4BkCA,EwElCE,A9FAA,Kb8FK,AmC5DA,CnC4DC,EsG9FE,A/FAA,C4BkCC,CmElCC,A/FAA,K+FAK,A/FAA;A8IInB,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnH4FA,AiI3FA,AvCDA,AoFAA,AxIFA,AHkCA,CAAC,CmElCCC,A/FAAA,EoGAE,A9FAA,CyFAC,A/FAA,E+FAE,A/FAA,S+FASA,A/FAAA,G+FAGA,A/FAAA,C+FAA,A/FAA,E+FAG,A/FAA;A8IItB,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnH6FAX,A0F7FA,AoFAA,AxIFA,AHmCA,IwEnCIkB,ALAA,AzFAAA,ANAA,CoGAC,A9FAA,E8FAE,A9FAA,EsBmCEsQ,EmEnCE,A/FAA,CP+FC,CAAClU,EsG/FE,A/FAA,C+FAC+L,A/FAAA,I4BmCImI,CAAC1O,CnC4DC,CAACgB,GmC5DG,EAAEsJ,EmEnCE,A/FAA,GP+FG,AmC5DA,CmEnCC,A/FAA,C4BmCCC,CnC4DC,EsG/FE,A/FAA,C+FAChE,A/FAAA,I4BmCI,EnC4DEvF,AmC5DA,QmEnCQ,A/FAA,C+FACoM,A/FAAA,CP+FCpM,CAAA,EAAG,KsG/FK,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA;A8IIjE,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,AtG+FA,AO/FA,A4BmCA,EwEnCE5C,A9FAAA,C8FAC,A9FAA,CsBmCC,CAAC4B,EwEnCE5B,A3G+FA,Aa/FAA,C8FAC,A9FAA,EsBmCE,CnC4DC,AmC5DA+L,CnC4DC9M,C2G/FC,A9FAA,C8FAC,A9FAA,OsBmCO,GnC4DG,CmC5DC2C,EnC4DE,CAAC,EmC5DE,CnC4DC1D,AmC5DAgQ,aAAa,CnC4DC,CAAC,GmC5DG,CnC4DC,CAAClP,GmC5DG,InC4DI,AmC5DA,CnC4DC,GAAG,EAAE,CmC5DCkN,KAAK,KAAK,QAAQ,EAAE;AkH/BvF,AKAA,ATDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnH6FA,AO/FA,AmFEA,AoFAA,AxIFA,CgEAC,AtG+FA,AO/FA,C+FAC,A/FAA,EoGAElM,A9FAAA,AsBmCAkM,CwEnCC,A9FAA,I8FAIlM,A9FAAA,AsBmCA,CwEnCC,A9FAA,EsBmCEtL,GwEnCG,A9FAA,C8FAC,A9FAA,EsBmCE,CAACC,IAAI,CAACuX,KAAK,EAAEC,QAAQ,CAAC;AkH/BxC,AKAA,ATDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnH8FA,AOhGA,AmFEA,AoFAA,AxIFA,EHmCE,EwEnCEnM,A9FAAA,C8FAC,A9FAA,I8FAIA,ALAAsQ,AtGgGAzP,AahGAb,ANAAsQ,CoGAC,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,GbgGGzP,CsGhGCyP,AtGgGAzN,AOhGAyN,C+FAC1O,A/FAAA,EPgGE,EAAE5B,CsGhGC,AtGgGA,AOhGA,E+FAEkM,AtGgGA,AOhGAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAE,A/FAA;A8II7C,AKAA,ATDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,AtGgGA,AOhGA,A4BmCA,EwEnCEnM,A9FAAA,C8FAC,A9FAA,CyFAC,AtGgGA8C,AOhGA,C+FAClB,A/FAAA,EoGAE5B,A9FAAA,AsBmCAkM,CwEnCC,A3GgGA,AahGA,EyFAE,A/FAA,C+FACH,AtGgGA,AOhGAA,C4BmCC,CwEnCC,A9FAA,C8FAC,A9FAA,CbgGCjQ,KAAK,CsGhGC,AtGgGAkE,AOhGA,CPgGC,CAAC,EsGhGE4B,A/FAAA,K+FAK,A/FAA,C+FACsM,A/FAAA,a+FAa,A/FAA,K+FAK,A/FAA,K+FAK,A/FAA,I+FAI,A/FAA,O+FAOhC,A/FAAA,K+FAK,A/FAA,K+FAK,A/FAA,Q+FAQ,A/FAA,E+FAE,A/FAA;A8IIvF,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHmCA,EnC6DE,E2GhGElM,ALAAkM,AzFAAlM,ANAAkM,CoGAC,A9FAA,EbgGE,E2GhGElM,ALAA,AzFAAA,ANAA,CoGAC,A9FAA,CbgGChE,CsGhGCtH,AtGgGA,AOhGAA,GoGAG,A3GgGA,AahGA,CbgGC,C2GhGC,A9FAA,CyFAC,AtGgGAsH,AOhGA,C+FACrH,AtGgGA,AOhGAA,GPgGGqL,CsGhGC,AtGgGA,AOhGA,C+FACkM,A/FAAA,CPgGC,EAAElQ,CAAC,CsGhGC,A/FAA,CPiGzB8G,CsGjG2BqJ,A/FAAA,GPiGvB,CAACnQ,CAAC,CAAC,EsGjG4B,A/FAA,C+FAC,AtGiG1B6G,AOjG0B,GPiGvB,CAAC7G,CAAC,CAAC;AqJ7FpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHoCAoC,EmEpCE,AtGiGA,AOjGA,EoGAE4B,A9FAAA,C8FAC,A9FAA,CsBoCC,CwEpCC,A9FAA,AsBoCAT,EnC6DEuD,IAAI,QmC7DQ,CAACkJ,QAAQ,CAAC5P,SAAS,EAAE,uBAAuB,EAAE;AkHhCnE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnH+FA,A0F/FA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,A4BoCA,OmEpCO8P,A/FAAA,K+FAK,A/FAA;A8IId,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHgGA,AOlGA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsBoCA,OwEpCOlM,A3GkGAmC,AalGAnC,C8FAC,A9FAA,QbkGQmC,CAACJ,IAAI,EAAEgB,KAAK,EAAE;AqJ9FhC,AJDA,AjCAA,ALFA,ALAA3E,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,ANAAA,AmFEA,AoFAA,AxIFA,EtCkGE,AmC9DA,ImEpCI,A/FAA,C+FACmB,A/FAAA,EPkGEwD,KAAK,GAAG,CAAC,GsGlGG,AtGkGAhB,AOlGA,C+FACiK,A/FAAA,GPkGG,CAAC/W,IsGlGI,A/FAA,C+FACmH,A/FAAA,CPkGC,EAAE2G,KAAK,CsGlGC,A/FAA,CPkGC,CsGlGC,A/FAA,CPmGtChB,IAAI,CAACgB,KAAK,CAAC,GAAGhB,IAAI,CAACgB,GsGnG0C,A/FAA,E+FAE,AtGmGvC,AOnGuC,GPmGpC,CAAC,CAAC;AqJ/FjC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,AtGmGAhB,AOnGA,A4BoCAvC,InC+DI,CAACwD,GAAG,CAAC,CAAC,AmC/DA,EAAE,KAAK;AkHhCnB,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHiGA,AanGA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,A4BoCAvD,GAAG,EAAE,SAAAA,CAAA,EAAY;AkHhCnB,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHkGA,AapGA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,E4BoCE,KnCgEKgD,EmChEE,IAAI,CAAC0F,QnCgEQ1F,CAACI,GAAG,EAAE,AmChEA,CAAC6I,aAAa;AkHhC5C,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EgEAElM,AtGoGA,AOpGAA,A4BoCA,InCgEIyD,G2GpGGmU,A3GoGA,AapGAA,GyFAG,AtGoGA,AOpGA,E+FAE,A/FAA,EPoGEtb,GsGpGG,A/FAA,EPoGE,C2GpGCsb,A3GoGAvU,AapGAuU,C8FACpX,A9FAAA,C8FAC,A9FAA,CboGC,C2GpGC4B,A3GoGA3M,AapGA2M,K8FAK,A9FAA,CboGC,C2GpGC,A3GoGA,AapGA;AwIIjC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHoCA,CAAC,CwEpCC,ALAAnC,AtGoGA,AapGA,ANAAA,A4BoCA,GmEpCG,A/FAA,CoGACO,A9FAAA,C8FAC,ALAA,AtGoGA,AapGA,ANAA,IoGAI,A3GoGAhE,AapGA,C8FAC,A3GoGA,AapGA,GboGG,C2GpGC4F,ALAAnC,AtGoGA,AapGAmC,ANAAnC,EPoGEzD,CsGpGCyD,AtGoGA,AOpGAA,C+FAA,A/FAA,CoGAE,A9FAA,C8FACxK,ALAA,AtGoGAgO,AapGAhO,ANAA,GPoGG,CAACA,E2GpGE,A9FAA,IboGI,C2GpGC,A9FAA,C8FAC,A3GoGA,AapGA,EboGE+G,CAAC,C2GpGC4F,A9FAAA,CboGC,I2GpGI,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,C8FAC,A9FAA;AwII3D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,AtGoGA5F,AOpGA,EoGAErB,A9FAAA,CboGC,CAAC5F,CAAC,CAAC,C2GpGC,ALAA,AzFAA,ANAA,CoGAC+P,A9FAAA,CboGClJ,EsGpGE,A/FAA,C+FACsF,AtGoGA,AOpGAA,CPoGCnM,CAAC,CAAC,CAACqD,E2GpGE,A9FAA,E8FAE,A9FAA,IboGI,EsGpGE,A/FAA,CoGAC,ALAAqM,AzFAA,ANAAA,CoGAC,A3GoGA7I,AapGA,GboGG,CAAC7G,CAAC,CAAC,MsGpGM,A/FAA;A8II5C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHoCA,EwEpCE,ALAA,AtGoGA,AapGA,ANAA,IoGAIgE,A9FAAA,C8FAC,A9FAA,K8FAKA,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA;AwIIf,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AHoCA,CmEpCC,A/FAA,C+FAC,AtGoGA,AOpGA,EoGAE,A9FAA,KboGKiD,GAAG;AqJhGZ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHkGA,A0FlGA,AoFAA,AxIFA,AHoCA,IwEpCI,A9FAA,I8FAIrB,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,I8FAIhU,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA,O8FAO2M,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FAC3K,A9FAAA,I8FAI,A9FAA,C8FACI,A9FAAA,I8FAI,A9FAA,C8FACxR,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,O8FAO2M,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA;AwIIpG,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHmGA,AOrGA,AmFEA,AoFAA,AxIFA,AHoCA,EwEpCE,A9FAA,ObqGO6H,AmCjEAkT,InCiEIlT,CAACyE,OAAO,CmCjECyO,CnCiEC1S,AmCjEA8L,InCiEI,EAAE,AmCjEA,EAAExH,KAAK,EAAEmO,KAAK,EAAE7D,KAAK,EAAEC,QAAQ,EAAEtE,EAAE,EAAE;AkHhClE,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A3GqGA,AarGA,AsBoCA,IAAI,CAACkI,EnCiEE,GmCjEG,CnCiEC7M,CmCjEC,MnCiEM,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;AqJjGhD,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,EbqGE,AmCjEA,EwEpCEpD,A9FAAA,C8FAC,A9FAA,CsBoCCuQ,EwEpCE3O,A9FAAA,GbqGGyB,E2GrGE,A9FAA,C8FACqI,A9FAAA,AsBoCA,GAAG4E,OnCiEOjN,CAAC5C,E2GrGE,A9FAA,CbqGC,AmCjEA,CwEpCCmB,A9FAAA,AsBoCAA,CnCiEC,I2GrGI,A9FAA,AsBoCA,CwEpCC8J,A9FAAA,CsBoCCQ,KAAK,EAAEC,KwEpCK,A9FAA,G8FAGgL,A9FAAA,AsBoCA,CAAC,sBwEpCsB,A9FAA,C8FACnX,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA;AwII/E,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,EsBoCE,EwEpCEA,A3GqGAuB,AarGAvB,C8FAC,A9FAA,CsBoCCkM,CmEpCC8D,A/FAAA,EoGAEpO,A9FAAA,EbqGE,AmCjEA,CnCiEC5E,E2GrGE,A9FAA,C8FAC/H,A9FAAA,CsBoCCsb,ImEpCIP,A/FAAA,CoGAC,ALAA5G,AzFAA,ANAAA,EoGAE,A9FAA,CsBoCC,EnCiEE,AmCjEA,CmEpCC,AtGqGA9L,AOrGA,E+FAEsE,A/FAAA,CoGAC5B,A9FAAA,C8FAC,A3GqGA,AarGA,EbqGEsD,CsGrGC,A/FAA,E+FAEyM,A/FAAA,K+FAK,AtGqGA,AOrGA,CPqGC,CsGrGC7D,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEtE,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8IIlE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,I+FAI,AtGqGAzE,AOrGA,A4BoCA2M,CmEpCCA,A/FAAA,I4BoCI,CmEpCC,AtGqGA,AOrGA,CPqGCtP,CsGrGC,A/FAA,A4BoCA,EnCiEE,CAAC,CmCjEC;AkHhClB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,AtGqGA,AOrGA,EoGAE,A9FAA,AsBoCA0L,CwEpCCvK,A9FAAA,CyFAC2O,A/FAAA,IoGAI,A9FAA,C8FAC1H,A9FAAA,CsBoCC,EmEpCE,A/FAA,C4BoCC,CwEpCC,A9FAA,CyFACyH,A/FAAA,CoGAC,A9FAA,KsBoCK,KmEpCK,A/FAA,C+FAC1O,A/FAAA,K+FAK,A/FAA,E+FAEsK,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,C+FAC,A/FAA;A8IItD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIvK,ALAA,AtGsGA,AatGAA,ANAA,E4BoCEsK,EmEpCEA,A/FAAA,CoGAC,A9FAA,C8FAC2J,A9FAAA,CsBoCC,EmEpCE,AtGsGAvS,AOtGA,C4BoCCiN,ImEpCIA,A/FAAA,GPsGGjN,C2GtGC,A3GsGD,AatGC,AsBoCA,EnCkEE,C2GtGC,A9FAA,CyFAC,A/FAA,E+FAE,A/FAA,CoGAC,A9FAA;AwII7B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,AsBoCA,EmEpCEyM,AtGsGA,AOtGAA,IPsGI,C2GtGC,ALAA,AzFAA,ANAA,CoGAC,A9FAA,EyFAE,A/FAA,GPsGGxO,CsGtGC,A/FAA,MPsGM,CAACvE,cAAc,KAAK,UAAU,EAAE;AqJlGxD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBoCA,ImEpCImP,A/FAAA,EPsGE5K,MsGtGM,A/FAA,CPsGC,CAACvE,CsGtGC,A/FAA,Q+FAQ,A/FAA,KPsGK,CAAC,OAAO,EAAEqG,aAAa,CAAC;AqJlGtD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBoCA,ImEpCI6I,AtGsGA,AOtGAA,A4BoCAxQ,GwEpCGkG,A9FAAA,AsBoCA,EmEpCE,A/FAA,C4BoCCA,EwEpCE,ALAA2O,AzFAA,ANAAA,CoGACtb,A9FAAA,EsBoCE,CAAC8W,GwEpCG,A9FAA,CyFAC,A/FAA,M4BoCM,GAAG,CAAC,GAAGG,KAAK,CAACjX,MAAM;AkHhC/C,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EHqCE2M,EmErCE,A/FAA,EPsGEuB,CmCjEC,CAAClO,KnCiEK,CAAC,AmCjEA,EnCiEE,CAACE,CmCjECuG,GAAG,CnCiEC,CAACX,IAAI,CAACgB,SAAS,CAAC,CAAC;AqJlGvC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BsCA,EnCgEE,EmChEEkH,GAAG,GAAGrB,KAAK,CAAC3M,MAAM,GAAG2M,KAAK,CAAC8J,aAAa;AkHlC9C,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,A4BsCA,EnC+DG,EsGrGChQ,A/FAAA,G+FAG,A/FAA,G+FAGkG,A/FAAA,K+FAK,A/FAA,C+FACmK,A/FAAA,U+FAU,A/FAA,G+FAG,A/FAA,C+FAC,A/FAA,G+FAGG,A/FAAA,K+FAK,A/FAA,C+FACjX,A/FAAA,M+FAM,A/FAA;A8II/C,AJDA,AjCAA,ALFA0c,ApHCA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AtGFAA,A6EEA,AoFAA,AxIFA,EgEAE/P,A/FAAA,A4BsCA,EnCgEE2B,EmChEE,CmEtCC,A/FAA,A4BsCAN,CwEtCC,ALAAhO,AzFAA,ANAAA,CoGACmH,A9FAAA,CsBsCC,EAAEwF,EmEtCE,A/FAA,G4BsCG,CwEtCC,ALAAlG,AzFAA,ANAAA,A4BsCAsS,CwEtCC8F,A9FAAA,EyFAE,A/FAA,EoGAE,A9FAA,G8FAG,A9FAA,CsBsCC,GAAG,InCgEI,AmChEA,CnCgECvS,C2GtGCvB,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA,GbsGG,EAAE1C,IAAI,EAAEgG,QAAQ,EAAE;AqJlG5D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE2R,ALAA,AzFAAA,ANAA,A4BuCA,ImEvCIhS,AtGqGwDnG,AOrGxDmG,A4BuCArB,CwEvCC,A9FAA,C8FAC,A9FAA,CyFAC,A/FAA,CPqGyD,CmC9DvD,CmEvCCA,AtGqGwD,AOrGxDA,A4BuCAwM,EwEvCE,A9FAA,E8FAEpO,A9FAAA,C8FAC,ALAA,AzFAA,ANAA,CoGAC,ALAA/K,AzFAA,ANAAA,C4BuCC,IAAI2M,CmEvCC,A/FAA,G+FAGA,A/FAAA,C4BuCC,CAACyM,GmEvCG,A/FAA,C+FAC3C,A/FAAA,E4BuCE,EAAE,SmEvCS,A/FAA;A8II9C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE1L,ALAA,AzFAAA,ANAA,CoGAC,A9FAA,CboGsE,AmC7DrE,CnC6DsE,C2GpGpEhK,A3GoGqE,AapGrEA,EsBuCEwa,IAAI,EwEvCE,A9FAA,C8FACxQ,A9FAAA,AsBuCA4B,CwEvCC,A9FAA,E8FAE,A9FAA,E8FAE,A9FAA,AsBuCA,CwEvCC,A9FAA,AsBuCAgN,mBAAmB;AkHnCxC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,EPoGE,AmC7DAhN,EwEvCEA,ALAA,AzFAAA,ANAA,C+FACqB,A/FAAA,CPoGC3F,CmC7DC,CmEvCC,A/FAA,A4BuCAsR,CwEvCC,A9FAA,CyFAChN,AtGoGA,AOpGAA,EoGAE,A9FAA,GyFAG,AtGoGA,AOpGA,CoGAC,ALAAoM,AzFAA,ANAAA,CoGAChG,A9FAAA,KboGK,EAAE,CsGpGC,A/FAA,E4BuCE,CmEvCC,A/FAA,E4BuCE,CwEvCC,A9FAA,CyFAC,A/FAA;A8IIlC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,IoGAIqP,ALAAzV,AtGoGA4B,AapGA6T,ANAAzV,A4BuCAsK,KwEvCK,ALAA,AzFAA,ANAA,A4BuCA,CmEvCCkC,A/FAAA,C4BuCClC,CwEvCClM,A9FAAA,C8FAC,A9FAA,GsBuCG,CmEvCC,A/FAA,I+FAI4B,A/FAAA,K+FAK,A/FAA,C+FACyM,A/FAAA,M+FAM,AtGoGA,AOpGA,CPoGC9M,CsGpGC,A/FAA,MPoGM,EAAE8B,aAAa,EAAE;AqJhG5D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,EoGAErD,A9FAAA,AsBuCAmM,CwEvCC,A9FAA,CyFACqE,AtGmGsD1T,AOnGtD0T,IoGAI,ALAA,AtGmGsD,AanGtD,ANAA,CoGAC,A9FAA,CbmGuD,AmC5DtD,CwEvCC5O,ALAAA,AzFAAA,ANAAA,C4BuCCuK,IwEvCI,ALAA,AzFAA,ANAA,CoGAC2J,ALAAlH,AzFAAkH,ANAAlH,G4BuCG,YwEvCY,A9FAA,G8FAG,A9FAA,CyFAC,A/FAA,IoGAI,A9FAA;AwII5C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAIhN,A/FAAA,EPkGqE,AmC3DnEmO,CnC2DoE,CAAC,CsGlGlE,A/FAA,C+FACnB,A/FAAA,C4BuCC,EAAEmB,KAAK,WmEvCW,A/FAA,G+FAG,A/FAA;A8IIhC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EbkGE,EsGlGE7D,A/FAAA,A4BuCAE,KmEvCK,A/FAA,E+FAEF,A/FAAA,C4BuCC,EAAErE,EmEvCE,A/FAA,A4BuCA;AkHnClB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A3GkGA,AalGA,CbkGC,CAAC,EsGlGEsE,A/FAAA,A4BuCAzF,IAAI,EAAE,EmEvCE,A/FAA,E+FAEyF,A/FAAA,Q+FAQ,A/FAA;A8IIxB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHgGA,A0FhGA,AoFAA,AxIFA,EqEAE,A9FAA,EsBuCE,CAAC,CmEvCC4D,A/FAAA,K+FAK,A/FAA,E+FAEA,A/FAAA,K+FAK,A/FAA;A8IIlB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHiGA,A0FjGA,AoFAA,AxIFA,EqEAE,A9FAA,EsBuCE,EwEvCE/P,ALAAoM,AzFAApM,ANAAoM,CoGAC,A9FAA,CsBuCCoE,CnC4DChN,G2GnGG,A9FAA,AsBuCA,CwEvCC,A9FAA,CyFAC,A/FAA,A4BuCA,EmEvCEqE,A/FAAA,CoGACjG,A9FAAA,CyFAC,A/FAA,IoGAI,A9FAA,C8FACiU,A9FAAA,Y8FAY,A9FAA,GbmGGrS,CAACjC,C2GnGC,A9FAA,C8FACK,A9FAAA,K8FAK,A3GmGA,AanGA,C8FAC8J,A9FAAA,CbmGC9K,OAAO,EAAE6C,G2GnGG,A9FAA,EbmGE,EAAE,C2GnGC,A9FAA,C8FAC,A9FAA,G8FAG7B,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,I8FAI2M,A9FAAA,K8FAK,A9FAA,C8FAC8J,A9FAAA,a8FAa,A9FAA,G8FAG9J,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,K8FAK2M,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AwII9I,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EtCmGE,E2GnGEoM,A9FAAA,EyFAEvO,AtGmGA,AOnGAA,A4BuCA8J,GwEvCG,A9FAA,C8FAC,ALAA,AzFAA,ANAA,A4BuCA,CAAC9J,CmEvCC,A/FAA,CPmGCnF,EmC5DE,GAAGK,EnC4DE,CAAChF,EAAE,AmC5DA,CAACgS,InC4DI,E2GnGE,A9FAA,E8FAEhN,A9FAAA,K8FAK,A9FAA,C8FAC3M,A3GmGA,AanGAA,EbmGE,GmC5DG,CwEvCC,A9FAA,E8FAE2M,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII1D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AtGmGAtF,AanGA,ANAA,A4BuCA,CmEvCC,A/FAA,A4BuCA,GwEvCG3B,A9FAAA,GsBuCG,EwEvCE,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,I8FAI2M,A9FAAA,IbmGI,C2GnGC,A3GmGAL,AanGA,C8FACsH,A9FAAA,K8FAK,A9FAA,CbmGC,C2GnGCyO,A9FAAA,CbmGC,OAAO,EAAE1W,C2GnGC,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,C8FAC,A3GmGA,AanGA,C8FAC,A9FAA,CbmGC6C,I2GnGIoT,A9FAAA,CbmGC,CAAC,U2GnGU,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AwIIpF,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EtCmGE,E2GnGE,ALAA,AzFAA,ANAA,E4BuCEjV,EmEvCE4O,A/FAAA,GoGAG,A9FAA,AsBuCA,CmEvCC,A/FAA,A4BuCA7B,EmEvCE,A/FAA,CoGAC,A9FAA,YsBuCY,GAAG/M,KAAK,CAACgN,mBAAmB;AkHnCvD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHiGA,A0FjGA,AoFAA,AxIFA,EqEAE,A9FAA,EsBuCE,EmEvCE4B,A/FAAA,I+FAI,A/FAA,C+FAC9J,A/FAAA,I+FAI,A/FAA,G+FAG9E,A/FAAA,K+FAK,A/FAA,C+FACgN,A/FAAA,mB+FAmB,A/FAA;A8II3C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AnHkGA,A0FlGA,AoFAA,AxIFA,EqEAE5O,A9FAAA,C8FAC,A9FAA,CyFAC,A/FAA,A4BuCA4B,CmEvCC,A/FAA,CoGACwV,A9FAAA,GboGG7T,AmC7DA,CAACuL,CmEvCC,A/FAA,QoGAQ,A9FAA,C8FAC9O,A9FAAA,C8FAC,A9FAA,E8FAE4B,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,CsBuCC,IAAI,CAAC,InC6DI2B,CAAChC,OAAO,EAAEjE,IAAI,EAAE+B,QAAQ,EAAEoE,KAAK,EAAE;AqJhGxE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EtCoGE,AmC7DA,CAAC,GmEvCG7B,AtGoGA,AOpGAA,G4BuCG,EmEvCE,A/FAA,C+FAC+M,A/FAAA,CPoGCpN,OAAO,CAAC3E,EAAE,IsGpGI,A/FAA,CPoGC,EsGpGEgF,A/FAAA,K+FAK,A/FAA,C+FACgN,A/FAAA,EPoGE,EAAE,esGpGe,A/FAA;A8IIvD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,AtGoGA,AOpGA,A4BuCA6B,InC6DIhN,GmC7DG,CAAC2F,CnC6DC,CAACtM,IAAI,AmC7DA,EnC6DE,AmC7DA8E,KAAK,EAAE,KAAK,EAAElG,GAAG,EAAEwQ,KAAK,EAAEC,QAAQ,EAAEtE,EAAE,CAAC;AkHnC3D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A6BCA,AGAA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBuCA,EmEvCEjG,A/FAAA,EoGAE5B,A3GoGAuB,AapGAvB,C8FAC,A9FAA,EyFAE,A/FAA,C+FAC8O,A/FAAA,EoGAE,A9FAA,C8FAC,A3GoGA,AapGA,CboGChS,G2GpGG8E,A9FAAA,CboGC,CAACtE,G2GpGG,A9FAA,C8FACuL,A3GoGA,AapGAA,EboGExJ,G2GpGG,A9FAA,E8FAE,ALAA,AzFAA,ANAA,GPoGG,CsGpGC,AtGoGA,AOpGA,C+FAC,A/FAA;A8IInC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BwCA,CmExCC,A/FAA,CoGAC,A3GoGA,AapGA,CboGC,G2GpGGuC,A9FAAA,CyFAC,A/FAA,A4BwCAqB,EnC4DE,CmC5DC,CwExCC,A9FAA,C8FAChO,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAEqiB,A9FAAA,W8FAW,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AwII7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHwCA,IwExCI,ALAA7G,AzFAA,ANAAA,EPoGElP,K2GpGK,ALAA,AzFAA,ANAA,C+FAC6H,A/FAAA,CPoGC,CAACxM,C2GpGC,A9FAA,CboGC,CAACU,CsGpGC,A/FAA,E+FAEsE,A/FAAA,CPoGC,EAAEvC,EsGpGE,A/FAA,E+FAE,A/FAA,IPoGI,CsGpGC,AtGoGA,AOpGA,E+FAE3D,A/FAAA,G+FAG,A/FAA,E+FAEwQ,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEtE,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8II3D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHyCA,EwEzCE,ALAA,AzFAA,ANAA,EPoGE,KmC3DK4I,OAAOA,CAACrH,MAAM,EAAExH,KAAK,EAAE4N,MAAM,EAAE9T,GAAG,EAAEwQ,KAAK,EAAEC,QAAQ,EAAEtE,EAAE,EAAE;AkHrClE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,AtGoGA,AOpGA,A4ByCAjG,CnC2DC,ImC3DI,CAAC8M,CmEzCCzL,AtGoGA,AOpGAA,G+FAG,A/FAA,CPoGC,GmC3DG,GAAGvH,CnC2DC6F,EmC3DE,KnC2DK,CAACmC,gBAAgB,KAAK,UAAU,EAAE;AqJhG7D,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsByCA9B,EnC2DE,GmC3DG,CAAC6M,OAAO,GAAG5G,EAAE;AkHrCpB,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsByCAjG,EnC2DE,GmC3DG,CAACwM,CmEzCCqC,A/FAAA,M4ByCM,CmEzCCA,A/FAAA,C+FACrH,A/FAAA,C4ByCC,IAAI,CmEzCC,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,E+FAE4N,A/FAAA,M+FAM,A/FAA,E+FAE9T,A/FAAA,G+FAG,A/FAA,E+FAEwQ,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEtE,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8IIlE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAjG,AzFAA,ANAAA,A4ByCAA,EnC2DEL,GsGpGG,A/FAA,A4ByCA,CmEzCCmN,A/FAAA,A4ByCAJ,GnC2DG,CAAC5K,AmC3DA,GAAG,CmEzCC,A/FAA,G+FAGhI,A/FAAA,A4ByCA,GmEzCG,A/FAA,MPoGM,CAAC4B,IAAI,EAAE,SAASqG,YAAYA,CAAChE,GAAG,EAAE;AqJhG9D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAiC,AzFAA,ANAAA,A4ByCA,InC2DI,AmC3DA4N,CmEzCC,A/FAA,C+FACf,A/FAAA,I4ByCI,EAAErF,CmEzCC,A/FAA,G+FAGvB,A/FAAA,E+FAE,A/FAA,A4ByCA,CAAC4H,OAAO,CAACvD,KAAK,EAAEtK,KAAK,CAAC4M,OAAO,CAAC,CAAC,KAAKpF,MAAM,CAACmG,MAAM,CAACrD,KAAK,EAAEC,QAAQ,EAAEvK,KAAK,CAAC4M,OAAO,CAAC;AkHrCrG,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA5M,AzFAA,ANAAA,A4ByCAA,InC2DI,CsGpGC,A/FAA,A4ByCA,CmEzCCwM,A/FAAA,A4ByCAE,IAAI,GmEzCG,A/FAA,A4ByCA,GmEzCG,A/FAA,E4ByCE,EmEzCE,A/FAA;A8IItB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHyCA,EwEzCE,ALAA1M,AzFAA,ANAAA,IPoGI,CsGpGC,A/FAA,C+FAC0M,A/FAAA,EPoGE7K,EsGpGE,A/FAA,G+FAG,AtGoGA,AOpGA,CPoGC3G,GsGpGG,A/FAA,CPoGC,EAAE;AqJhGtB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH0CA,EwE1CE,ALAA,AzFAA,ANAA,I+FAI8E,A/FAAA,EPoGEL,CmC1DCmP,EmE1CE,A/FAA,C+FACzI,A/FAAA,GPoGG,CAACrE,KsGpGK,A/FAA,A4B0CA8M,CAACtH,CmE1CCxH,A/FAAA,K+FAK,A/FAA,A4B0CA,CmE1CC4M,A/FAAA,C4B0CC5M,KnC0DK,AmC1DA,CmE1CC,AtGoGAtE,AOpGA,C+FAC,A/FAA,A4B0CAgR,GnC0DG,CsGpGCZ,A/FAAA,A4B0CA,CnC0DC/J,CmC1DCnD,EAAE,EAAEqH,EAAE,EAAE,GnC0DG,CAAC,MsGpGM,A/FAA,C+FAC,A/FAA,O+FAO,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,K+FAK,A/FAA,I+FAI2H,A/FAAA,M+FAM,A/FAA,E+FAEpG,A/FAAA,M+FAM,A/FAA,C+FACqG,A/FAAA,O+FAO,A/FAA,C+FACvD,A/FAAA,K+FAK,A/FAA,E+FAEtK,A/FAAA,K+FAK,A/FAA,C+FAC4M,A/FAAA,O+FAO,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,K+FAKpF,A/FAAA,M+FAM,A/FAA,C+FACmG,A/FAAA,M+FAM,A/FAA,C+FACrD,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEvK,A/FAAA,K+FAK,A/FAA,C+FAC4M,A/FAAA,O+FAO,A/FAA,C+FAC,A/FAA;A8IIhL,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA5M,AzFAA,ANAAA,A4B0CA,EAAEA,EnC0DE,CsGpGC,A/FAA,C+FAC0M,A/FAAA,C4B0CC,CAACO,EmE1CE,A/FAA,G+FAG,A/FAA,I4B0CI,CmE1CC,A/FAA;A8IIpB,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsB2CA,InCyDIxP,AmCzDAiP,IAAI,EAAE,EnCyDE,CAAC3O,GAAG,CAAC;AqJhGnB,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,EboGE,AmCzDA,CnCyDC,CAAC,GsGpGG+Q,A/FAAA,Y+FAYA,A/FAAA,C+FACtH,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,E+FAE0M,A/FAAA,I+FAI,A/FAA,E+FAE9N,A/FAAA,E+FAE,A/FAA,E+FAEqH,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8IInD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AtGoGA,AapGA,ANAA,CPoGC,CsGpGCjG,A/FAAA,A4B2CA,KmE3CK,AtGoGA,AOpGA,C+FACiN,A/FAAA,S+FAS,A/FAA;A8IInB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,EPoGE,AmCzDA2N,EmE3CElO,A/FAAA,C4B2CC,CAAC1S,EmE3CE,AtGoGA,AOpGA,E+FAE,A/FAA,EPoGE0D,EmCzDE,CAACuI,EAAE,EAAErH,EnCyDE,AmCzDA,CnCyDC,AmCzDA,qEnCyDqE,GAAG,OAAOe,OAAO,CAAC;AqJhG/G,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A3GoGA,AapGA,EyFAE,A/FAA,A4B2CA;AkHvCJ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AnHkGA,A0FlGA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4B2CA;AkHvCJ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAElH,A/FAAA,A4B2CAmiB,GAAG,CAAC5gB,GmE3CG,A/FAA,C+FACA,A/FAAA,I4B2CI,CAAC+U,GmE3CG,A/FAA,C+FAC9I,A/FAAA,E+FAE,A/FAA,E+FAErH,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA,A4B2CA,EAAE4I,MAAM,EAAExH,KAAK,CAAC;AkHvC5C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4B2CAwH,MAAM,CAACjB,cAAc,CAACE,YAAY,GAAG,IAAI;AkHvC7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4B2CAe,MAAM,CAAClM,IAAI,CAAC,OAAO,EAAEsD,EAAE,CAAC;AkHvC5B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsB2CA,CAAC,CmE3CCnG,A/FAAA,K4B2CK,EmE3CE,A/FAA,C+FACuB,A/FAAA,Q+FAQ,A/FAA,C+FAC+U,A/FAAA,W+FAW,A/FAA,E+FAEvH,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8IIhD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAEwH,A/FAAA,A4B2CA,MmE3CM,A/FAA,C+FACjB,A/FAAA,c+FAc,A/FAA,C+FACE,A/FAAA,Y+FAY,A/FAA,G+FAG,A/FAA,I+FAI,A/FAA;A8II7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAEc,A/FAAA,A4B2CA,cmE3Cc,A/FAA,C+FACC,A/FAAA,M+FAM,A/FAA,E+FAE5I,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8II9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,C+FAC,A/FAA,C4B2CCqH,EAAE,CAACrH,EmE3CE,A/FAA,A4B2CA,CAAC;AkHvCV,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,A4B2CA4I,MAAM,CAACjB,cAAc,CAACE,YAAY,GAAG,IAAI;AkHvC7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4B2CAe,MAAM,CAAClM,IAAI,CAAC,OAAO,EAAEsD,EAAE,CAAC;AkHvC5B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAEqH,A/FAAA,A4B2CA,EwE3CE0P,ALAA,AzFAAA,ANAA,C+FAC/W,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA,EoGAE,A9FAA,G8FAGoB,A9FAAA,K8FAK,A9FAA,C8FACiU,A9FAAA,Y8FAY,A9FAA;AwIIjC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEZ,A9FAAA,EyFAE7L,A/FAAA,A4B2CA,GwE3CG,A9FAA,C8FAC,A9FAA,EyFAE,A/FAA,C+FACjB,A/FAAA,YoGAY,A9FAA,E8FAEoP,ALAA,AzFAAA,ANAA,C+FAClP,A/FAAA,KoGAK,A9FAA,C8FAC,A9FAA,MyFAM,A/FAA,G+FAG,A/FAA,I+FAI,A/FAA;A8II7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAIc,A/FAAA,A4B2CAwH,WAAW,CAACvH,EmE3CE,A/FAA,C+FACA,A/FAAA,G4B2CG,EAAExH,CmE3CC,A/FAA,E+FAEpB,A/FAAA,E+FAE,A/FAA,A4B2CA,CmE3CC,A/FAA,A4B2CA;AkHvC9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsB2CA,EmE3CE,A/FAA;A8IIJ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH2CA,EwE3CE,A9FAA,EyFAE,A/FAA,EoGAEoB,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,I8FAI2M,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,G8FAG+K,A9FAAA,C8FAC,A9FAA,G8FAG4B,A9FAAA,K8FAK,A9FAA,C8FAC8J,A9FAAA,a8FAa,A9FAA,E8FAE,A9FAA;AwIIpE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH4CA,IwE5CI6L,ALAA5G,AzFAA4G,ANAA5G,K4B4CKC,CwE5CC,A9FAA,G8FAG,A9FAA,EyFAE,A/FAA,C+FACxH,A/FAAA,CoGAC,A9FAA,KyFAK,A/FAA,E+FAExH,A/FAAA,G4B4CGgP,CAAChP,CmE5CC,A/FAA,C+FAC,A/FAA,G4B4CG,EAAE;AkHxCnC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4B4CAA,EwE5CEqT,A9FAAA,GsB4CG,CAAC7G,CwE5CC,A9FAA,C8FAC,A9FAA,KsB4CK,GAAG,KAAK,ewE5Ce,A9FAA,E8FAEmJ,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AwII/C,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsB4CA3V,KAAK,CAAC6M,OAAO,GAAG,IAAI;AkHxCtB,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EH4CE7M,KAAK,CAAC3M,CmE5CC2b,A/FAAA,K4B4CK,IAAIhP,KAAK,CAAC8M,GmE5CGkC,A/FAAA,C+FAChP,A/FAAA,I4B4CI,CmE5CC,A/FAA,E+FAE,A/FAA;A8IInC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAA,AzFAA,ANAAA,A4B4CAA,KmE5CK,A/FAA,A4B4CA,CmE5CCwM,A/FAAA,A4B4CAM,OmE5CO,A/FAA,C4B4CC,EmE5CE,A/FAA,C4B4CC,CAAC,GmE5CG,A/FAA;A8IIvB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH4CA,EwE5CE,ALAA9M,AzFAA,ANAAA,K+FAK,A/FAA,C+FAC6M,A/FAAA,O+FAO,A/FAA,G+FAG,A/FAA,I+FAI,A/FAA;A8IItB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH6CA,EwE7CE,ALAA7M,AzFAA,ANAAA,IoGAIA,A9FAAA,CyFAC,A/FAA,C+FAC3M,A/FAAA,C4B6CCuZ,EwE7CE,A9FAA,C8FAC3F,A9FAAA,EyFAE,A/FAA,E4B6CE2F,CwE7CC,A9FAA,AsB6CApF,CmE7CCxH,A/FAAA,GoGAGA,A9FAAA,EyFAE,A/FAA,A4B6CA,CmE7CC8M,A/FAAA,C4B6CClO,CwE7CC,A9FAA,C8FACoI,A9FAAA,AsB6CA,EAAE,GmE7CG,A/FAA,EoGAE,A9FAA,E8FAE,A9FAA;AwIIpC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAEhH,A/FAAA,A4B6CA,EwE7CE2V,A9FAAA,EsB6CE3V,CmE7CC,A/FAA,C+FAC8M,A/FAAA,EoGAE,A9FAA,CsB6CC,EwE7CE,A9FAA,CsB6CCtF,EmE7CE,A/FAA,EoGAE,A9FAA,CyFAC,A/FAA,C+FAC,A/FAA,A4B6CA,CAACjB,cAAc;AkHzCnC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EH6CE,EwE7CE8M,A9FAAA,EsB6CE3G,GwE7CG,A9FAA,C8FAC,A9FAA,AsB6CA,GAAG1M,KAAK,CAAC0M,IAAI,KwE7CK,A9FAA,E8FAEiJ,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AwIIrC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsB6CA,CwE7CC,A9FAA,GsB6CG1P,EAAE,CwE7CC,ALAA2G,AzFAA,ANAAA,E4B6CE5M,EwE7CE2V,A9FAAA,GyFAG/I,A/FAAA,A4B6CA,CmE7CCpF,A/FAAA,A4B6CAqF,EwE7CE,A9FAA,E8FAE,A9FAA,EyFAE,A/FAA,C4B6CC,CmE7CCjO,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8II7B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4B8CAoQ,EwE9CEqE,A9FAAA,EyFAErT,A/FAAA,GoGAG,A9FAA,C8FAC,A9FAA,CyFAC,A/FAA,G+FAGwH,A/FAAA,KoGAK,A9FAA,C8FAC,ALAA,AzFAA,ANAA,A4B8CA,CmE9CCjB,A/FAAA,A4B8CAvG,KAAK,CAAC,QmE9CQ,A/FAA;A8IInC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4B+CA,EwE/CEA,A9FAAA,EyFAE0M,A/FAAA,A4B+CA9N,EAAE,CwE/CC,A9FAA,C8FACoI,ALAA,AzFAAA,ANAA,A4B+CA8H,GmE/CG9O,A/FAAA,IoGAI,A9FAA,CyFAC,A/FAA,C+FAC0M,A/FAAA,CoGAC,A9FAA,EsB+CE,CmE/CC,A/FAA,A4B+CAlF,CwE/CC,A9FAA,KsB+CK,EAAExH,KAAK,EAAE0M,IAAI,EAAE9N,EAAE,EAAEqH,EAAE,CAAC,CAAC,KAAK;AkH3CzD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,EoGAEjG,A9FAAA,AsB+CA,EmE/CEiG,A/FAAA,E+FAE,A/FAA,CoGAC,A9FAA,C8FACyG,A9FAAA,CyFAC1M,A/FAAA,GoGAG,A9FAA,EyFAE,A/FAA,CoGAC,ALAA6M,AzFAA,ANAAA,IoGAI,A9FAA,GyFAG,A/FAA;A8IIxB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,EoGAE,A9FAA,AsB+CA,EmE/CE,A/FAA,E4B+CEvF,KmE/CKrB,A/FAAA,E+FAE,A/FAA,C4B+CC,GAAGgJ,CmE/CC,A/FAA,S4B+CS,CmE/CC,A/FAA,A4B+CAjP,EmE/CE,A/FAA,G4B+CG,CAAC,EmE/CE,A/FAA,I+FAI4L,A/FAAA,qB+FAqB,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA;A8IIjE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAEoD,A/FAAA,EoGAE,A9FAA,AsBgDA,IwEhDIhP,A9FAAA,AsBgDA,CAACsH,IwEhDI,A9FAA,C8FACjU,A9FAAA,GsBgDG,GwEhDG,ALAA,AzFAA,ANAA,C+FAC2M,A/FAAA,A4BgDA,CAACA,GwEhDG,A9FAA,C8FAC,ALAA,AzFAA,ANAA,C+FAC,A/FAA,A4BgDA,CwEhDCA,A9FAAA,AsBgDAyM,KwEhDK,A9FAA,C8FACwH,A9FAAA,AsBgDA,IAAI,CAACjU,KAAK,CAAC2M,CwEhDC,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA,QsBgDQ,IAAI3M,KAAK,CAAC+M,eAAe,EAAE;AkH5CxF,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,EoGAE,A9FAA,EyFAEnO,A/FAAA,A4BgDA2P,EmEhDE,A/FAA,E+FAEO,A/FAAA,O4BgDO,CAACtH,ImEhDI,A/FAA,C+FACA,A/FAAA,C4BgDC,EAAExH,GmEhDG,A/FAA,E+FAEA,A/FAAA,A4BgDA,CAAC,ImEhDI,A/FAA,E+FAE0M,A/FAAA,I+FAI,A/FAA,E+FAE9N,A/FAAA,E+FAE,A/FAA,E+FAEqH,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,K+FAK,A/FAA;A8IIzD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,A4BgDA,IwEhDI,A9FAA,C8FACwO,A9FAAA,K8FAK,A9FAA,C8FACzU,A9FAAA,K8FAK,A9FAA,C8FAC8J,A9FAAA,a8FAa,A9FAA,C8FAC,A9FAA;AwIInC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI9J,ALAA,AzFAAA,ANAA,A4BiDA,ImEjDIsH,A/FAAA,A4BiDAoF,CwEjDC,A9FAA,C8FACA,A9FAAA,EsBiDE,EwEjDE,A9FAA,AsBiDA,EmEjDE,A/FAA,CoGAC,A9FAA,EyFAEuC,A/FAAA,GoGAG,A9FAA,OyFAO,A/FAA,C+FACjP,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA,I+FAIwH,A/FAAA,M+FAM,A/FAA,C+FACnB,A/FAAA,S+FAS,A/FAA;A8IIxD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,E4BiDE,EmEjDE,A/FAA,C+FACiB,A/FAAA,Q+FAQ,A/FAA,I+FAI,A/FAA,C+FACtH,A/FAAA,K+FAK,A/FAA,C+FACyM,A/FAAA,M+FAM,A/FAA,I+FAI,A/FAA,C+FACzM,A/FAAA,K+FAK,A/FAA,C+FAC2M,A/FAAA,gB+FAgB,A/FAA,I+FAI3M,A/FAAA,K+FAK,A/FAA,C+FAC+M,A/FAAA,e+FAe,A/FAA,E+FAE,A/FAA;A8IIxF,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,EyFAEwB,A/FAAA,A4BiDAsM,UAAU,CmEjDC,A/FAA,A4BiDA3L,CmEjDC1H,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,C4BiDC,EAAEwH,EmEjDE,A/FAA,C+FAC,A/FAA,G4BiDG,EAAExH,KAAK,EAAEsH,QAAQ,EAAErB,EAAE,CAAC;AkH7CzD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,E4BiDE,EwEjDE,A9FAA,C8FACjG,A9FAAA,K8FAK,A9FAA,C8FACgH,A9FAAA,O8FAO,A9FAA,E8FAE5I,A9FAAA,C8FAC,A9FAA,G8FAGoX,A9FAAA,a8FAa,A9FAA,C8FACC,A9FAAA,K8FAK,A9FAA,E8FAEzV,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwIIvD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,AgCCA,AFAA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4BiDA,CAAC,GmEjDG0M,A/FAAA,G4BiDG,CmEjDC,A/FAA,E+FAE,A/FAA;A8IId,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIrL,ALAA5I,AzFAA4I,ANAA5I,A4BiDAyW,GwEjDG,A9FAA,IyFAI,A/FAA,C+FAClV,A/FAAA,E4BiDE,CAACwN,KmEjDK,A/FAA,C+FAC0H,A/FAAA,A4BiDA,EAAElP,KAAK,EAAEsH,CmEjDC,A/FAA,E+FAEE,A/FAAA,K4BiDK,CmEjDC,A/FAA,C4BiDCvB,CmEjDCjG,A/FAAA,C4BiDC,CAAC,GmEjDG,A/FAA,E+FAEsH,A/FAAA,Q+FAQ,A/FAA,E+FAErB,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8II/D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4BiDA,CmEjDC,A/FAA,CoGAC7H,A9FAAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,ALAA,AzFAA,ANAA,EoGAEiD,A9FAAA,G8FAG,A9FAA,G8FAGuU,A9FAAA,Q8FAQ,A9FAA,C8FACxX,A9FAAA,C8FAC,A9FAA,E8FAE4B,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAKqB,A9FAAA,G8FAG,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AwIIrD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBiDA,IwEjDIA,ALAA6N,AzFAA7N,ANAA6N,GoGAG,A9FAA,K8FAK,A9FAA,EyFAE,A/FAA,C+FAC1H,A/FAAA,CoGAC,A9FAA,E8FAE,A9FAA,GyFAG,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,E+FAEsH,A/FAAA,Q+FAQ,A/FAA,E+FAErB,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8II7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHiDA,IwEjDIjG,ALAA,AzFAAA,ANAA,KoGAK,A9FAA,C8FACiU,A9FAAA,Y8FAY,A9FAA,G8FAGjU,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,I8FAI2M,A9FAAA,K8FAK,A9FAA,C8FAC8J,A9FAAA,a8FAa,A9FAA;AwII5D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHkDA,EmElDE,A/FAA,EoGAE1L,A9FAAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,AsBkDA8Q,UAAUA,CAAC1H,MAAM,EAAExH,KAAK,EAAEsH,QAAQ,EAAErB,EAAE,EAAE;AkH9CjD,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsBkDA,CwElDC,A9FAA,GsBkDG,CAACqB,EwElDE,A9FAA,MsBkDM,EAAE6H,YAAY,CAAC3H,MAAM,EAAExH,KAAK,CAAC;AkH9C5C,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EHkDEA,EwElDEA,A9FAAA,GsBkDG,CAACiN,CwElDC,ALAAiC,AzFAA,ANAAA,CoGAC7b,A9FAAA,M8FAM,A9FAA,CsBkDC,EmElDE6b,A/FAAA,A4BkDA,CwElDC9Q,ALAAoJ,AzFAApJ,ANAAoJ,CoGAC,A9FAA,KyFAK,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,E+FAEsH,A/FAAA,Q+FAQ,A/FAA,E+FAErB,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8IIjD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BkDAA,EwElDEjG,A9FAAA,AsBkDA,CAAC,CmElDC,A/FAA,A4BkDA,CmElDCsH,A/FAAA,EoGAE,A9FAA,C8FACgN,A9FAAA,KyFAK,A/FAA,E+FAEnF,A/FAAA,GoGAG,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,KyFAK,A/FAA,C+FAC3H,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8II5C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAA,AzFAA,ANAAA,A4BkDA+O,KmElDK,A/FAA,C+FAC9B,A/FAAA,K4BkDK,CAACzF,GmElDG,A/FAA,E+FAE,A/FAA,C4BkDC,EAAExH,KAAK,CAAC;AkH9C5B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHkDA,EwElDE,ALAAiG,AzFAA,ANAAA,E+FAE,A/FAA,C+FAC,A/FAA,CoGACjG,ALAA,AzFAAA,ANAA,KoGAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AwII1B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE0b,A/FAAA,EoGAE,A9FAA,SyFAS,A/FAA,C+FACvH,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8II5B,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AHkDA,IwElDI,A9FAA;AwIIJ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHkDA,IwElDI,A9FAA,I8FAI,A9FAA,C8FACA,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,E8FAEjH,A9FAAA,K8FAK,A9FAA,C8FACiU,A9FAAA,Y8FAY,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AwII/C,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AHkDA;AkH9CA,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AHkDA,IwElDI,A9FAA,KsBkDK9E,YAAYA,CAAC3H,MAAM,EAAExH,KAAK,EAAE;AkH9CrC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EHkDE,EwElDE,A9FAA,EsBkDEA,EwElDEyV,A9FAAA,GsBkDG,CAACpiB,CwElDC,A9FAA,K8FAK+K,A9FAAA,AsBkDA,CwElDC,A9FAA,I8FAI4B,A9FAAA,AsBkDA,CAAC,IwElDI,A9FAA,AsBkDAA,CwElDCiH,A9FAAA,IsBkDI,CwElDC,A9FAA,AsBkDAmF,EwElDEsJ,A9FAAA,OsBkDO,EAAE,EwElDE,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AwIIrD,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,EsBkDE1V,KmElDKmP,A/FAAA,A4BkDA,CAAC/C,SAAS,EmElDE+C,A/FAAA,C+FAC3H,A/FAAA,A4BkDA,KAAK,CmElDC,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,E+FAE,A/FAA;A8IIrC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4BkDEwH,EwElDEnG,ALAArB,AzFAAqB,ANAArB,GoGAG,A9FAA,CsBkDC,CmElDC,A/FAA,A4BkDA1E,CmElDCjI,A/FAAA,EoGAE,A9FAA,CsBkDC,CAAC,EwElDE,ALAA,AzFAA,ANAA,EoGAE,A9FAA,GyFAG,A/FAA,A4BkDA,CwElDC,ALAA,AzFAA,ANAA,A4BkDA,CwElDCiI,A9FAAA,GyFAG0E,A/FAAA,CoGAC,A9FAA,C8FAC,A9FAA,GyFAG,A/FAA,C+FACoM,A/FAAA,EoGAE,A9FAA,E8FAE/K,A9FAAA,G8FAG,A9FAA,C8FAC,A9FAA,CyFAC,A/FAA,E+FAE,A/FAA;A8II7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBkDA,EmElDErB,A/FAAA,KoGAKqB,ALAA,AzFAAA,ANAA,C+FAC+K,A/FAAA,EoGAE,A9FAA,OyFAO,A/FAA,G+FAG,A/FAA,K+FAK,A/FAA;A8II3B,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,AHkDA,CwElDC,A9FAA,GyFAG5E,A/FAAA,M+FAM,A/FAA,C+FAClM,A/FAAA,I+FAI,A/FAA,C+FAC,A/FAA,O+FAO,A/FAA,C+FAC,A/FAA;A8IIxB,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,OoGAOuZ,A9FAAA,U8FAUA,A9FAAA,C8FACrN,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AwIInC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AHkDA,EwElDEqT,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,Y8FAY,A9FAA,C8FAC,A9FAA;AwIIrB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHkDA,EwElDE,A9FAA,I8FAIrT,A9FAAA,GsBkDGuO,EwElDE,A9FAA,C8FACtH,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA,CsBkDCsH,CAAC/G,MAAM,EAAExH,KAAK,EAAE;AkH9CpC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsBkDAA,IwElDIA,A9FAAA,CsBkDC,CAAC2M,GwElDG,A9FAA,C8FAC6H,A9FAAA,O8FAO,A9FAA,E8FAE,A9FAA,GsBkDG,GAAG,IAAI;AkH9C/B,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EHkDE,EwElDE,A9FAA,EsBkDE5P,EwElDE0F,A9FAAA,CyFACiE,A/FAAA,E4BkDE,EwElDE,A9FAA,CsBkDCvO,EwElDEA,A9FAAA,GsBkDG,CmElDCuO,A/FAAA,A4BkDAxB,CwElDC,ALAAvF,AzFAA,ANAAA,CoGACgN,A9FAAA,KyFAK,A/FAA,EoGAE,ALAAxU,AzFAA,ANAAA,CoGACuP,A9FAAA,G8FAG,A9FAA,C8FAC,ALAA,AzFAA,ANAA,CoGAC,A9FAA,AsBkDA,CmElDC,A/FAA;A8IIpC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAEvP,A/FAAA,A4BmDA,EwEnDE,A9FAA,EsBmDEwH,CmEnDC,A/FAA,CoGAC8C,ALAAqC,AzFAArC,ANAAqC,I4BmDI,CwEnDC,A9FAA,AsBmDAkB,IwEnDIvD,A9FAAA,GsBmDG,EwEnDE,A9FAA,C8FACjX,A9FAAA,CyFAC,A/FAA,A4BmDAuR,GmEnDG,A/FAA,EoGAE,A9FAA,AsBmDA,EwEnDE,ALAA,AzFAA,ANAA,E4BmDEA,KAAK,CAACE,IAAI,EAAE;AkH/C7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,E4BmDE,EwEnDE9E,ALAA4E,AzFAA5E,ANAA4E,KoGAK,ALAA,AzFAA,ANAA,CoGACwK,A9FAAA,EyFAEpP,A/FAAA,IoGAI,A9FAA,C8FAC3F,ALAA,AzFAAA,ANAA,C+FAC0S,A/FAAA,GoGAG,A9FAA,C8FACzC,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,KyFAK,A/FAA;A8IInC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,E4BmDE,EwEnDEtK,ALAAwH,AzFAAxH,ANAAwH,E4BmDEzQ,CAAC,EwEnDE,A9FAA,C8FAC1D,ALAA,AzFAAA,ANAA,A4BmDA2M,CmEnDC6N,A/FAAA,I4BmDI,CwEnDC,A9FAA,AsBmDAX,EmEnDE,A/FAA,EoGAElN,A9FAAA,EyFAE4E,A/FAAA,GoGAG,A9FAA,C8FACuF,A9FAAA,CyFAC,A/FAA,I+FAIvF,A/FAAA,KoGAK,ALAA,AzFAA,ANAA,A4BmDA,CmEnDCE,A/FAAA,EoGAE,A9FAA,C8FAC,A9FAA,CyFAC,A/FAA,EoGAEwF,ALAA,AzFAAA,ANAA,KoGAK,A9FAA,C8FACjX,A9FAAA,M8FAM,A9FAA;AwIIzD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,A4BmDA,IAAI+b,MAAM,GAAG,IAAIlV,KAAK,CAACnD,CAAC,CAAC;AkH/C7B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4BmDA,ImEnDIA,A/FAAA,A4BmDAsY,CmEnDC,A/FAA,G+FAGrP,A/FAAA,E4BmDE,GmEnDG,A/FAA,A4BmDAA,CmEnDCkN,A/FAAA,I4BmDI,CAACC,emEnDe,A/FAA,G4BmDG;AkH/CzC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEnN,A9FAAA,EyFAE,A/FAA,A4BmDAqP,GwEnDG,A9FAA,C8FACpI,ALAAmI,AzFAAnI,ANAAmI,E4BmDE,CAACxK,EwEnDE,A9FAA,CyFAC,A/FAA,EoGAE,A9FAA,AsBmDA,CmEnDC,A/FAA,E4BmDEA,CwEnDC,A9FAA,CyFAC1K,A/FAAA,G4BmDG,EmEnDE,A/FAA,C+FACnD,A/FAAA,C+FAC,A/FAA,C+FAC,A/FAA;A8II7B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4BoDA,EwEpDEiJ,A9FAAA,EyFAEqP,A/FAAA,A4BoDA9c,GwEpDG,A9FAA,C8FACma,A9FAAA,CsBoDC,CmEpDC,A/FAA,EoGAE,A9FAA,AsBoDA,CmEpDC1M,A/FAAA,A4BoDA,CwEpDC,A9FAA,IyFAI,A/FAA,C+FACmN,A/FAAA,kB+FAkB,A/FAA;A8IIzC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAAkC,AzFAA,ANAAA,A4BoDA,IAAIC,EmEpDE,A/FAA,C+FAC1K,A/FAAA,K+FAK,A/FAA,E4BoDE,CmEpDCA,A/FAAA,E4BoDE,GmEpDG,A/FAA,C4BoDC;AkHhDzB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,A4BoDA,ImEpDIrS,A/FAAA,G4BoDGqS,EmEpDE,A/FAA,G+FAG,A/FAA,A4BoDA,CmEpDC,A/FAA,C4BoDC;AkHhDlB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,E4BoDEwK,EmEpDEE,A/FAAA,I4BoDI,CAAC/c,KmEpDK,A/FAA,A4BoDA,CAAC,EmEpDE,A/FAA,C4BoDCqS,GmEpDG,A/FAA,E4BoDE;AkHhD3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIqQ,ALAA,AzFAAA,ANAA,E4BoDE,IAAI,CmEpDCrQ,A/FAAA,A4BoDAA,KwEpDK,ALAA,AzFAA,ANAA,A4BoDA,CwEpDC4C,A9FAAA,AsBoDA2G,CmEpDC,A/FAA,I4BoDI,CwEpDC,A9FAA,C8FAC,A9FAA,AsBoDAmB,UAAU,GAAG,KAAK;AkHhD1C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA,GyFAGF,A/FAAA,A4BoDAxK,GwEpDG,A9FAA,EsBoDE,CmEpDC,A/FAA,C+FACrS,A/FAAA,C4BoDCqS,ImEpDI,A/FAA,C+FAC,A/FAA,A4BoDA,CAACE,EmEpDEF,A/FAAA,E4BoDE,GmEpDG,A/FAA;A8II3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,EyFAE,A/FAA,A4BoDArS,ImEpDI,A/FAA,C+FACqS,A/FAAA,A4BoDA,IAAI,CmEpDC,A/FAA,A4BoDA,CmEpDCuJ,A/FAAA,K+FAK,A/FAA,E+FAEmB,A/FAAA,U+FAU,A/FAA,G+FAG,A/FAA,K+FAK,A/FAA;A8II1C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAItP,A9FAAA,AsBoDA,EmEpDE4E,A/FAAA,GoGAG,A9FAA,C8FACqP,A9FAAA,CyFAC,A/FAA,G+FAGrP,A/FAAA,K+FAK,A/FAA,C+FACE,A/FAAA,EoGAE,A9FAA,EyFAE,A/FAA,CoGAC,A9FAA,K8FAK,A9FAA;AwII9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,AsBoDAsK,EmEpDE7c,A/FAAA,EoGAE,A9FAA,C8FACyN,A9FAAA,CsBoDC,CmEpDC,A/FAA,A4BoDAsP,GwEpDG,A9FAA,C8FAC4E,ALAA,AzFAAA,ANAA,C+FAC,A/FAA,K4BoDK,GAAG5E,MwEpDM,A9FAA,E8FAE,A9FAA,EsBoDE;AkHhDlC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,A4BqDAT,EwErDE7O,A9FAAA,K8FAK,A9FAA,AsBqDA,CwErDCkU,A9FAAA,AsBqDA1M,MAAM,EAAExH,KAAK,EwErDE,A9FAA,AsBqDA,GwErDG,A9FAA,CsBqDC,EAAEA,CwErDC,A9FAA,IsBqDI,CAAC3M,MAAM,EAAE+b,MAAM,EAAE,EAAE,EAAEC,MAAM,CAAC3E,MAAM,CAAC;AkHjDzE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI0E,A/FAAA,EoGAEyG,A9FAAA,IyFAI,A/FAA,C+FACvG,A/FAAA,QoGAQ,A9FAA,C8FAC9H,A9FAAA,CyFAC,A/FAA,G+FAG8H,A/FAAA,EoGAE,A9FAA,C8FAC,A9FAA,OyFAO,A/FAA;A8IIlC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAAT,AzFAA,ANAAA,A4BqDA,OmErDO,A/FAA,C+FACrH,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,E+FAE,A/FAA,I+FAI,A/FAA,E+FAEA,A/FAAA,K+FAK,A/FAA,C+FAC3M,A/FAAA,M+FAM,A/FAA,E+FAE+b,A/FAAA,M+FAM,A/FAA,E+FAE,A/FAA,E+FAE,A/FAA,E+FAEC,A/FAAA,M+FAM,A/FAA,C+FAC3E,A/FAAA,M+FAM,A/FAA,C+FAC,A/FAA;A8IIzE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EsBqDE;AkHjDJ,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,IgEAI,A/FAA,A4BqDA1K,KAAK,CAACiN,SAAS,EAAE;AkHjDrB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,A4BqDAjN,KAAK,CAACgN,mBAAmB,GAAG,IAAI;AkHjDpC,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,IgEAIhN,A/FAAA,A4BqDA,IAAIqP,CmErDC,A/FAA,C+FACpC,A/FAAA,I4BqDI,CAACnI,ImErDI,A/FAA,A4BqDA,EmErDE,A/FAA,A4BqDA;AkHjDrB,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,IgEAI9E,A/FAAA,E4BqDEA,GmErDG,A/FAA,C+FACgN,A/FAAA,C4BqDC,CAACG,iBmErDiB,A/FAA,C4BqDC,EmErDE,A/FAA,C4BqDCkC,GmErDG,A/FAA,G4BqDG,CAACvK,IAAI;AkHjD5C,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,IgEAI,A/FAA,E4BqDEuK,EmErDEA,A/FAAA,I4BqDI,CAACvK,CmErDC,A/FAA,C+FACA,A/FAAA,E4BqDE,EmErDE,A/FAA,C4BqDC,CmErDC,A/FAA,G4BqDG;AkHjDxB,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,IHqDI,CAAC,CmErDC9E,A/FAAA,GoGAGiV,A9FAAA,EyFAE,A/FAA,A4BqDA,CmErDC9H,A/FAAA,SoGAS8H,A9FAAA,C8FACzN,A9FAAA,M8FAM,A9FAA,E8FAE,ALAA,AzFAA,ANAA,G+FAG6H,A/FAAA,M+FAM,A/FAA,C+FACvK,A/FAAA,I+FAI,A/FAA;A8II5C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI9E,ALAAqP,AzFAArP,ANAAqP,A4BqDArP,KwErDK,A9FAA,AsBqDA,CmErDC,A/FAA,A4BqDAmN,CmErDCrI,A/FAAA,CoGAC0C,A9FAAA,GyFAG,A/FAA,GoGAG,ALAA,AzFAA,ANAA,CoGACpB,A9FAAA,GyFAG,A/FAA,M4BqDM,GAAG,EwErDE,A9FAA,EsBqDEqE,aAAa,CAACzK,KAAK,CAAC;AkHjDzD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEqT,A9FAAA,EyFAE,A/FAA,A4BqDA,CmErDC,A/FAA,EoGAE,A9FAA,C8FAC,A9FAA,GyFAG,A/FAA,WoGAW,A9FAA,E8FAErT,A9FAAA,K8FAK,A9FAA,C8FACiU,A9FAAA,Y8FAY,A9FAA,E8FAEjU,A9FAAA,K8FAK,A9FAA,C8FACkU,A9FAAA,e8FAe,A9FAA,C8FAC,A9FAA;AwIIlE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAElU,A9FAAA,EsBqDEA,EmErDEA,A/FAAA,CoGAC,A9FAA,C8FACiU,A9FAAA,CsBqDC,CAAC/G,CmErDC,A/FAA,C+FACC,A/FAAA,QoGAQ,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA,EyFAE,A/FAA,A4BqDA,GmErDG,A/FAA,A4BqDA,CAAC,GmErDG1C,A/FAAA,a+FAa,A/FAA,C+FACzK,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8IIzD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBqDA,CAAC,CmErDC,A/FAA,EoGAE,A9FAA,C8FACA,A9FAAA,EsBqDE,GwErDG,A9FAA,C8FACkU,A9FAAA,e8FAe,A9FAA,E8FAE,A9FAA;AwII9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIb,ALAArT,AzFAAqT,ANAArT,A4BqDA,KwErDK,ALAA,AzFAA,ANAA,CoGAC,ALAAkN,AzFAA,ANAAA,coGAc,A9FAA,E8FAElN,A9FAAA,IyFAI,A/FAA,CoGAC,A9FAA,C8FACgU,A9FAAA,CyFAC,A/FAA,C+FAC,A/FAA,KoGAK,A9FAA,C8FAC,A9FAA;AwIIxC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,C+FAC,A/FAA,CoGAChU,A9FAAA,AsBqDA,KwErDK,ALAA,AzFAA,ANAA,CoGACkU,A9FAAA,CsBqDCtP,KAAK,EAAE,OwErDO,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AwIIhC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAInM,ALAA,AzFAAA,ANAA,E4BqDE,IAAI6R,CwErDC,A9FAA,C8FACtQ,A9FAAA,GsBqDG,GAAG4K,EwErDE,A9FAA,C8FACiR,A9FAAA,EsBqDE,CAACvL,KAAK,KwErDK,A9FAA,E8FAE9C,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AwII3C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,E4BqDE,IAAI+C,CmErDC3F,A/FAAA,K+FAK,A/FAA,E+FAE,A/FAA,A4BqDA,GAAGA,KAAK,CAAC2F,QAAQ;AkHjDnC,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,MgEAM,A/FAA,A4BqDA,ImErDID,A/FAAA,A4BqDArE,EAAE,GmErDG,A/FAA,A4BqDArB,GmErDGA,A/FAAA,E4BqDE,CAAC4F,EmErDE,A/FAA,C+FACF,A/FAAA,K+FAK,A/FAA,A4BqDA;AkHjD7B,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,MgEAM,A/FAA,A4BqDA,GwErDGuL,A9FAAA,CyFACtL,A/FAAA,A4BqDAzQ,GAAG,GAAGkG,EmErDE,A/FAA,G+FAG4E,A/FAAA,A4BqDA,CwErDCiR,A9FAAA,AsBqDA1L,CwErDC3C,A9FAAA,GyFAG,A/FAA,C+FAC+C,A/FAAA,EoGAE,A9FAA,E8FAE,A9FAA,CsBqDC,GmErDG,A/FAA,A4BqDA,CAAC,GAAGD,KAAK,CAACjX,MAAM;AkHjDnD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI2M,ALAA,AzFAAA,ANAA,A4BsDA6O,ImEtDI5I,A/FAAA,CoGAC,A9FAA,CyFAC,A/FAA,C4BsDC,CwEtDCuB,A9FAAA,AsBsDAA,CmEtDC5C,A/FAAA,KoGAK,ALAA,AzFAA,ANAA,A4BsDA,CwEtDCwB,ALAAoE,AzFAApE,ANAAoE,C4BsDCxK,KAAK,EmEtDE,A/FAA,A4BsDA,KAAK,CwEtDC,A9FAA,CsBsDClG,GAAG,EAAEwQ,KAAK,EAAEC,QAAQ,EAAEtE,EAAE,CAAC;AkHlD7D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEoN,A9FAAA,IyFAI,A/FAA,A4BsDAzO,CwEtDC,A9FAA,C8FAC,A9FAA,EyFAE9K,A/FAAA,C4BsDC,EmEtDE,A/FAA,C4BsDC8K,EmEtDE5E,A/FAAA,G4BsDG,CAAC8E,CmEtDC,A/FAA,C+FACqF,A/FAAA,CoGAC,A9FAA,CsBsDC,CwEtDCnK,A9FAAA,K8FAK,A9FAA,C8FACqG,A9FAAA,CyFAC,A/FAA,G+FAG,A/FAA,C+FAC,A/FAA,G+FAGiE,A/FAAA,CoGAC,A9FAA,E8FAEtK,A9FAAA,EyFAE,A/FAA,C+FAC3M,A/FAAA,EoGAE,A9FAA,C8FACA,A9FAAA,GyFAG,A/FAA,GoGAG,A9FAA,E8FAE2M,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwIIpE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,ALAA4H,AzFAA,ANAAA,A4BsDA7O,CwEtDCA,A9FAAA,IsBsDI,CwEtDC,A9FAA,AsBsDAkN,CwEtDC7G,ALAA,AzFAAA,ANAA,C+FACmB,A/FAAA,M+FAM,A/FAA,EoGAE,ALAAxH,AzFAA,ANAAA,KoGAKA,ALAA,AzFAAA,ANAA,E+FAE,A/FAA,GoGAG,A9FAA,AsBsDA,CwEtDC3M,A9FAAA,CyFAC,A/FAA,A4BsDA,EmEtDEyG,A/FAAA,GoGAG,ALAA,AzFAA,ANAA,E+FAEwQ,A/FAAA,EoGAEtK,A9FAAA,GyFAG,A/FAA,EoGAE,ALAAuK,AzFAA,ANAAA,CoGACtD,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,CyFAC,A/FAA,CoGAC,A9FAA,CyFAChB,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8II7D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIuB,A9FAAA,EyFAE5C,A/FAAA,A4BsDA,IwEtDI,A9FAA,C8FACtJ,ALAA,AzFAAA,ANAA,G+FAGsJ,A/FAAA,CoGAC,A9FAA,C8FAC,A9FAA,GyFAG,A/FAA,C+FACE,A/FAAA,I+FAI,A/FAA,EoGAE,A9FAA,C8FAC,A9FAA;AwII3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI9E,A9FAAA,EyFAEA,A/FAAA,A4BsDA,GwEtDG,A9FAA,C8FACkU,A9FAAA,CyFAC,A/FAA,C+FAChH,A/FAAA,aoGAa,A9FAA,G8FAG,A9FAA,IyFAI,A/FAA,CoGAC,A9FAA,CyFAC,A/FAA;A8IIlC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,IyFAI,A/FAA,A4BsDA;AkHlDN,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MgEAM,A/FAA,A4BsDA;AkHlDN,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,IyFAI,A/FAA,A4BsDA,IAAIlN,KAAK,CAACwM,OAAO,EAAE;AkHlDzB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,IyFAI,A/FAA,E4BsDE;AkHlDR,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,IyFAI,A/FAA,A4BsDA,ImEtDIxM,A/FAAA,K+FAK,A/FAA,C+FACwM,A/FAAA,O+FAO,A/FAA,E+FAE,A/FAA;A8IIzB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EsBsDE,ImEtDI,A/FAA;A8IIR,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EsBuDE,EmEvDE,A/FAA,E4BuDE5H,KAAK,KAAK,IAAI,EAAE5E,KAAK,CAACgN,mBAAmB,GAAG,IAAI;AkHnDxD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBuDA,EmEvDE,A/FAA;A8IIJ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEhN,A9FAAA,AsBwDAA,EmExDE,A/FAA,GoGAG,A9FAA,AsBwDA,CwExDCiU,ALAArP,AzFAAqP,ANAArP,A4BwDAmI,KmExDK,A/FAA,K+FAK,A/FAA,EoGAE,A9FAA,EyFAE,A/FAA,CoGAC,A9FAA,AsBwDA,CwExDC/M,ALAAA,AzFAAA,ANAAA,E4BwDE4E,GwExDG,ALAA,AzFAA,ANAA,CoGACoP,ALAAhH,AzFAAgH,ANAAhH,C4BwDC,MwExDM,A9FAA,I8FAI,A9FAA,C8FAChN,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,CyFAC,A/FAA,G+FAG,A/FAA,CoGAC,A9FAA,GyFAG,A/FAA,CoGACjH,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,I8FAI2M,A9FAAA,K8FAK,A9FAA,C8FAC8J,A9FAAA,a8FAa,A9FAA;AwII5F,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEgM,ALAA,AzFAAA,ANAA,A4BwDA9V,IwExDI,A9FAA,C8FACwH,A9FAAA,AsBwDA,CAACmF,KwExDK,A9FAA,C8FAC,A9FAA,UsBwDU,GAAG,KAAK;AkHpDhC,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,AHwDA,EmExDE3M,A/FAAA,K+FAK,A/FAA,C+FAC+M,A/FAAA,e+FAe,A/FAA,G+FAGnI,A/FAAA,K+FAK,A/FAA;A8II/B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHyDAwF,EmEzDEpK,A/FAAA,K+FAK,A/FAA,C+FAC2M,A/FAAA,A4ByDA,CAACnS,SAAS,CAACmT,KmEzDK,A/FAA,C4ByDC,EmEzDE,A/FAA,C4ByDC,ImEzDI,A/FAA,M4ByDMrD,KAAK,EAAEC,QAAQ,EAAEtE,EAAE,EAAE;AkHrD3D,AJDA,AjCAA,ALFA,ALAA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,ANAA,AmFEA,AoFAA,AxIFA,EHyDEA,EAAE,CAAC,IAAIpN,KAAK,CAAC,6BAA6B,CAAC,CAAC;AkHrD9C,AJDA,AjCAA,ALFA,ALAAuR,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,ANAAA,AmFEA,AoFAA,AxIFA,AHyDA,CAAC,OmEzDO,A/FAA,C+FAC5P,A/FAAA,S+FAS,A/FAA,C+FACmT,A/FAAA,M+FAM,A/FAA,G+FAG,A/FAA,U+FAUrD,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEtE,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8II3D,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,AH0DAmE,EmE1DEnE,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA,G4B0DG,CmE1DC0F,A/FAAA,A4B0DAnR,SAAS,CAACqT,OAAO,GAAG,IAAI,EmE1DE,A/FAA,C+FAC,A/FAA,U+FAU,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA;A8IIhD,AJDA,AjCAA,ALFA,ALAA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,ANAA,AmFEA,AoFAA,AxIFA,AH2DAzD,CmE3DC,A/FAA,O4B2DO,CAAC5P,SAAS,CAAC+U,GAAG,GAAG,UAAUjF,KAAK,EAAEC,QAAQ,EAAEtE,EAAE,EAAE;AkHvDxD,AJDA,AjCAA,ALFA,ALAAmE,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,ANAAA,AmFEA,AoFAA,AxIFA,EH2DE,IAAIpK,EmE3DE,A/FAA,C+FACxF,A/FAAA,E4B2DE,GAAG,ImE3DI,A/FAA,A4B2DA,CmE3DCqT,A/FAAA,A4B2DAtH,OmE3DO,A/FAA,G+FAG,A/FAA,I+FAI,A/FAA,A4B2DA;AkHvDjC,AJDA,AjCAA,ALFA,ALAA6D,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,ANAAA,AmFEA,AoFAA,AxIFA,EH4DE,IAAI,EmE5DE,A/FAA,C+FAC5P,A/FAAA,I4B4DI8P,KmE5DK,A/FAA,A4B4DA,CmE5DCiF,A/FAAA,G+FAG,A/FAA,C4B4DC,EmE5DE,A/FAA,Q4B4DQ,EmE5DEjF,A/FAAA,A4B4DA,KmE5DK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,E+FAEtE,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A8IIxD,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,E4B4DEA,EmE5DEjG,A/FAAA,A4B4DA,GwE5DGgV,A9FAAA,AsB4DA1K,EmE5DE,A/FAA,G+FAG,A/FAA,A4B4DA,ImE5DI,A/FAA,C+FAC/D,A/FAAA,GoGAGyO,A9FAAA,C8FACxN,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,EyFAE,A/FAA,GoGAG,A9FAA,E8FAE,A9FAA;AwIItC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4B4DEsK,EwE5DE,ALAA,AzFAA,ANAA,CoGACtK,A9FAAA,EsB4DE,GwE5DG,A9FAA,AsB4DA,CwE5DCuU,ALAAjK,AzFAAiK,ANAAjK,G4B4DG,EmE5DE,A/FAA,K+FAK,A/FAA,CoGAC,A9FAA,E8FAE,A9FAA,OyFAO,A/FAA,E+FAE,A/FAA;A8IInC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAItK,ALAAiG,AzFAAjG,ANAAiG,A4B4DAsE,EmE5DE,A/FAA,GoGAG,ALAAD,AzFAA,ANAAA,CoGACiK,A9FAAA,EsB4DE,EmE5DE,A/FAA,C4B4DC,IAAI,EwE5DE,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AwII5B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EH4DE,CAAC,CwE5DC9b,ALAA6R,AzFAA7R,ANAA6R,K+FAK,A/FAA,A4B4DA,EwE5DE,A9FAA,C8FACtQ,ALAA,AzFAAA,ANAA,C4B4DC,GmE5DG,A/FAA,IoGAI,A9FAA,AsB4DAuQ,CwE5DCwL,A9FAAA,OsB4DO,KAAK,EwE5DE,A9FAA,E8FAEvO,A9FAAA,M8FAM,A9FAA,AsB4DA,EwE5DExH,A9FAAA,AsB4DA,KwE5DK,A9FAA,C8FAC,A9FAA;AwIInD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAEuK,A/FAAA,A4B4DAtE,EAAE,GAAGsE,GmE5DG,A/FAA,G+FAG,A/FAA,E4B4DE,EmE5DE,A/FAA;A8IInB,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,C+FAC,A/FAA,C4B4DCA,KmE5DK,A/FAA,G4B4DG,CmE5DC,A/FAA,E4B4DE,IAAI,CmE5DCA,A/FAAA,Q+FAQ,A/FAA,K+FAK,A/FAA,U+FAU,A/FAA,E+FAE,A/FAA;A8II7C,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EH4DE,EmE5DEtE,A/FAAA,E+FAE,A/FAA,GoGAG8P,ALAAxL,AzFAAwL,ANAAxL,Q+FAQ,A/FAA,MoGAMwL,A9FAAA,C8FACvO,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AwIIvC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsB6DA,EmE7DEuK,A/FAAA,E4B6DED,KAAK,CmE7DC,A/FAA,G+FAG,A/FAA,C4B6DC,GmE7DG,A/FAA,C4B6DC,IAAIA,KAAK,KAAKlX,SAAS,EAAE,IAAI,CAACsa,KAAK,CAACpD,KAAK,EAAEC,QAAQ,CAAC;AkHzDxE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA;A8IIF,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,A4B6DA,ImE7DID,A/FAAA,K+FAK,A/FAA,K+FAK,A/FAA,I+FAI,A/FAA,I+FAIA,A/FAAA,K+FAK,A/FAA,K+FAKlX,A/FAAA,S+FAS,A/FAA,E+FAE,A/FAA,I+FAI,A/FAA,C+FACsa,A/FAAA,K+FAK,A/FAA,C+FACpD,A/FAAA,K+FAK,A/FAA,E+FAEC,A/FAAA,Q+FAQ,A/FAA,C+FAC,A/FAA;A8IIxE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsB6DA,IAAIvK,KAAK,CAACyM,MAAM,EAAE;AkHzDpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4B6DEzM,KAAK,CAACyM,MAAM,GAAG,CAAC;AkHzDpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4B6DE,EmE7DEzM,A/FAAA,E4B6DE,CAACsO,EmE7DE,A/FAA,C+FAC7B,A/FAAA,G4B6DG,CAAC,CAAC,CmE7DC,A/FAA,E+FAE,A/FAA;A8IIpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsB6DA,EmE7DEzM,A/FAAA,K+FAK,A/FAA,C+FACyM,A/FAAA,M+FAM,A/FAA,G+FAG,A/FAA,C+FAC,A/FAA;A8IIpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,I+FAI,A/FAA,C+FAC6B,A/FAAA,M+FAM,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA;A8IIjB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,A4B6DA;AkHzDF,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsB6DA,IAAI,CAACtO,KAAK,CAACmH,MAAM,EAAEqI,WAAW,CAAC,IAAI,EAAExP,KAAK,EAAEiG,EAAE,CAAC;AkHzDjD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH6DA,CAAC,CwE7DC,ALAA,AzFAA,ANAA;A8IIF,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH8DA,EwE9DE,ALAA,AzFAA,ANAA,I+FAI,A/FAA,C+FACjG,A/FAAA,E4B8DEiP,GmE9DG,A/FAA,C+FAC9H,A/FAAA,M+FAM,A/FAA,A4B8DA8H,CAACjP,CmE9DCwP,A/FAAA,I4B8DI,EAAE,KmE9DK,A/FAA,C+FAC,A/FAA,I+FAI,A/FAA,E+FAExP,A/FAAA,K+FAK,A/FAA,E+FAEiG,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8IIjD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,A4B8DA,OmE9DO,A/FAA,A4B8DAjG,ImE9DI,A/FAA,C4B8DC,CAACmH,MAAM,IAAInH,KAAK,CAAC3M,MAAM,KAAK,CAAC,IAAI2M,KAAK,CAAC+M,eAAe,KAAK,IAAI,IAAI,CAAC/M,KAAK,CAACsH,QAAQ,IAAI,CAACtH,KAAK,CAACwM,OAAO;AkH1DlH,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AH8DA,CmE9DC,A/FAA,CoGAC,A9FAA;AwIIF,AJDA,AjCAA,AVFAhQ,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFAA,AmFEA,AoFAA,AxIFA,AH8DA,EwE9DE,A9FAA,IyFAI,A/FAA,C+FACmB,A/FAAA,E4B8DE8R,SAASA,CAACjI,EmE9DE,A/FAA,C+FAC4C,A/FAAA,G4B8DG,EAAEpK,GmE9DG,A/FAA,C+FACxF,A/FAAA,C4B8DC,EAAE,MmE9DM,A/FAA,E+FAE,A/FAA,gB+FAgB,A/FAA,E+FAE,A/FAA;A8II5D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,A4B8DAgN,MAAM,CAACuG,MAAM,CAAC,UAAUlP,GAAG,EAAE;AkH1D/B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4B8DEmB,KAAK,CAACiN,SAAS,EAAE;AkH1DrB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4B8DE,IAAIpO,GAAG,EAAE;AkH1Db,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAjB,AzFAA,ANAAA,I4B8DI4J,MmE9DM,A/FAA,A4B8DA,CAAClM,CmE9DC,A/FAA,G4B8DG,CAAC,CmE9DC,A/FAA,M4B8DM,EAAEuD,GAAG,CAAC;AkH1D/B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAhB,AzFAA,ANAAA,E4B8DE,CmE9DC,A/FAA,E+FAE,A/FAA,S+FASA,A/FAAA,G+FAGA,A/FAAA,C+FAA,A/FAA,E+FAG,A/FAA;A8IItB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,A4B8DAmC,KAAK,CAACqH,CmE9DC,A/FAA,I+FAI,A/FAA,C+FACd,A/FAAA,K4B8DK,GAAG,IAAI,EmE9DE,A/FAA,C+FAClT,A/FAAA,M+FAM,A/FAA;A8IIrC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4B8DEmU,MAAM,CAAClM,IAAI,CAAC,WAAW,CAAC;AkH1D5B,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,CgEAC,A/FAA,CoGAC,ALAA,AzFAA,ANAA,E4B8DEyT,WAAW,CAACvH,MAAM,EAAExH,KAAK,CAAC;AkH1D9B,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsB8DA,CAAC,CAAC,KwE9DK,ALAAiP,AzFAA,ANAAA,CoGACjP,A9FAAA,K8FAK,A9FAA,C8FACgH,A9FAAA,GyFAGiI,A/FAAA,C+FACjP,A/FAAA,GoGAG,A9FAA,EyFAE,A/FAA,EoGAE,ALAA,AzFAA,ANAA,CoGACA,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,K8FAKjH,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,G8FAG2M,A9FAAA,K8FAK,A9FAA,C8FAC8J,A9FAAA,a8FAa,A9FAA,I8FAI9J,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,I8FAIhU,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AwIIxH,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH8DA,EmE9DE,A/FAA,EoGAE,A9FAA,I8FAIyG,A9FAAA,CyFACkG,A/FAAA,EoGAE,A9FAA,G8FAGA,ALAA,AzFAAA,ANAA,C+FACmH,A/FAAA,IoGAI,A9FAA,C8FAC9T,A9FAAA,CyFAC,A/FAA,I+FAI2M,A/FAAA,CoGAC,A9FAA,IyFAI,A/FAA,C+FAC3M,A/FAAA,M+FAM,A/FAA,K+FAK,A/FAA,C+FAC,A/FAA,I+FAI2M,A/FAAA,K+FAK,A/FAA,C+FAC+M,A/FAAA,e+FAe,A/FAA,K+FAK,A/FAA,I+FAI,A/FAA,I+FAI,A/FAA,C+FAC/M,A/FAAA,K+FAK,A/FAA,C+FACsH,A/FAAA,Q+FAQ,A/FAA,I+FAI,A/FAA,C+FACtH,A/FAAA,K+FAK,A/FAA,C+FACwM,A/FAAA,O+FAO,A/FAA;A8IIlH,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AH8DA,IwE9DI6G,A9FAAA,K8FAK,A9FAA,AsB8DA3D,CwE9DC,A9FAA,QsB8DQA,CAAClI,MAAM,EAAExH,KwE9DK,A9FAA,AsB8DA,CwE9DC,A9FAA,CsB8DC;AkH1DlC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EH8DE,EwE9DEwH,A9FAAA,EsB8DE,CAACxH,EmE9DEyP,A/FAAA,CoGAC,A9FAA,C8FACyC,A9FAAA,CsB8DC,CAAC7K,EwE9DE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,ALAAoI,AzFAA,ANAAA,C+FACjI,A/FAAA,K4B8DK,CmE9DC,A/FAA,E+FAExH,A/FAAA,C4B8DC,CAACA,GmE9DG,A/FAA,E+FAE,A/FAA,A4B8DA,CAACoH,WAAW,EAAE;AkH1DhD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAEI,A/FAAA,EoGAE,A9FAA,AsB8DA,IwE9DI1N,ALAA,AzFAAA,ANAA,A4B8DA,CmE9DCiU,A/FAAA,EoGAE,A9FAA,IyFAI,A/FAA,A4B8DAvG,CwE9DCxH,ALAA,AzFAAA,ANAA,KoGAK,A9FAA,AsB8DA,CwE9DC3M,A9FAAA,AsB8DA0a,ImE9DIlP,A/FAAA,EoGAE,A9FAA,AsB8DA,CmE9DC,A/FAA,E+FAE,A/FAA,E4B8DE,UAAU,EAAE;AkH1D7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAImB,A/FAAA,EoGAE,A9FAA,AsB8DAA,GmE9DG,A/FAA,C+FACiN,A/FAAA,C4B8DC,CAACA,OmE9DO,A/FAA,E+FAE,A/FAA,A4B8DA,EAAE;AkH1DvB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,EoGAE,A9FAA,AsB8DAjN,EmE9DEnB,A/FAAA,G+FAG,A/FAA,A4B8DA,CAACuI,CmE9DC,A/FAA,U4B8DU,GAAG,IAAI;AkH1D9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,IyFAIG,A/FAAA,A4B8DAqT,GAAG,CAAC5gB,QAAQ,CAACyV,CmE9DC,A/FAA,C+FACjI,A/FAAA,M+FAM,A/FAA,C4B8DC,CmE9DC3I,A/FAAA,C4B8DC2I,EmE9DE,A/FAA,C+FAC,A/FAA,G4B8DG,EAAExH,KAAK,CAAC;AkH1D5C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEA,A9FAAA,EyFAE,A/FAA,A4B8DA,CAAC,EwE9DE,A9FAA,C8FACuU,A9FAAA,GsB8DG,QwE9DQ,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AwII3B,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,IgEAIvU,A/FAAA,E4B8DEA,GmE9DG,A/FAA,C+FACqH,A/FAAA,C4B8DC,CAACA,SmE9DS,A/FAA,E4B8DE,CmE9DC,A/FAA,E4B8DE,EmE9DE,A/FAA,E4B8DE;AkH1D9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAIG,A/FAAA,E4B8DEA,ImE9DI,A/FAA,C+FAClM,A/FAAA,C4B8DC,CAACA,EmE9DE,A/FAA,C+FAC,A/FAA,C4B8DC,CAAC,SmE9DS,A/FAA,C+FAC,A/FAA,C4B8DC,CAAC;AkH1D9B,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,IgEAIyT,A/FAAA,A4B8DA,WmE9DW,A/FAA,C+FACvH,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8II9B,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,A4B8DA,CmE9DC,A/FAA,C+FAC,A/FAA;A8IIJ,AJDA,AjCAA,ALFA,ALAA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,ANAA,AmFEA,AoFAA,AxIFA,AH8DA;AkH1DA,AJDA,AjCAA,ALFA,ALAA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,ANAA,AmFEA,AoFAA,AxIFA,AH+DA,SmE/DS0P,A/FAAA,A4B+DAX,SmE/DSW,A/FAAA,C+FAClI,A/FAAA,C4B+DCuH,CAACvH,ImE/DI,A/FAA,E+FAExH,A/FAAA,A4B+DA,EAAEA,GmE/DG,A/FAA,E+FAE,A/FAA,A4B+DA,EAAE;AkH3DpC,AJDA,AjCAA,ALFA+P,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFAA,A6EEA,AoFAA,AxIFA,EgEAE,A/FAA,A4B+DA,ImE/DI,A/FAA,A4B+DAJ,CmE/DC3P,A/FAAA,CoGAC,A9FAA,C8FACxF,A9FAAA,CsB+DC,EmE/DE,A/FAA,C+FAC6M,A/FAAA,A4B+DA4H,KwE/DK,A9FAA,C8FACwF,A9FAAA,IsB+DI,CwE/DC,ALAA,AzFAA,ANAA,A4B+DAzU,GwE/DG,A9FAA,CyFAC,A/FAA,C+FACA,A/FAAA,A4B+DA,CAAC,ImE/DI,A/FAA,C+FACoH,A/FAAA,EoGAEhJ,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA,MyFAM,A/FAA,E+FAE,A/FAA;A8IIhD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEmJ,A9FAAA,AsB+DA,EmE/DE,A/FAA,E4B+DEoI,EmE/DE,A/FAA,E4B+DE,EAAE,GmE/DGnI,A/FAAA,CoGAC,A9FAA,C8FAC,A9FAA,I8FAI,ALAA,AzFAA,ANAA,C+FACuG,A/FAAA,CoGAC,A9FAA,I8FAIpC,A9FAAA,CyFAC,A/FAA,K+FAK,A/FAA,U+FAU,A/FAA,I+FAI,A/FAA,C+FAC3L,A/FAAA,KoGAK,ALAA,AzFAA,ANAA,CoGAC,ALAAqG,AzFAA,ANAAA,SoGAS,ALAA,AzFAA,ANAA,CoGAC,A9FAA,C8FAC,ALAA,AzFAA,ANAA;A8IIjE,AJDA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA,GsB+DGqJ,EmE/DE1P,A/FAAA,K+FAK,A/FAA,C+FACiN,A/FAAA,C4B+DC,CAACzF,MAAM,CmE/DC,A/FAA,C4B+DCxH,CmE/DC,A/FAA,I4B+DI,CAAC;AkH3D5B,AJDA,AjCAA,ALFA+P,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFAA,A6EEA,AoFAA,AxIFA,IH+DI,EmE/DE/P,A/FAAA,EoGAE,A9FAA,AsB+DAA,CwE/DCxF,A9FAAA,EyFAE,A/FAA,C+FAC4M,A/FAAA,C4B+DC,CAAC6F,IwE/DI,A9FAA,C8FACe,A9FAAA,I8FAI,ALAA,AzFAA,ANAA,A4B+DA,GwE/DG,ALAA,AzFAA,ANAA,E4B+DE,CAAC,CmE/DC,A/FAA,C4B+DC,KwE/DKgI,A9FAAA,I8FAI,A9FAA,E8FAEC,A9FAAA,Q8FAQ,A9FAA,E8FAE,A9FAA;AwIIpD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI3R,ALAA7L,AzFAA6L,ANAA7L,A4B+DAuH,GwE/DG,A9FAA,EsB+DE,CwE/DC,A9FAA,AsB+DAsH,CmE/DC,A/FAA,C+FACtN,A/FAAA,EoGAE,A9FAA,IsB+DI,EmE/DE,A/FAA,C+FACyV,A/FAAA,A4B+DA,IAAI,KmE/DK,A/FAA,E+FAEjI,A/FAAA,M+FAM,A/FAA,E+FAExH,A/FAAA,K+FAK,A/FAA,C+FAC,A/FAA;A8IIhD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,C+FAC,A/FAA,CoGACA,A9FAAA,AsB+DAwH,KwE/DK,ALAA,AzFAA,ANAA,C4B+DC,CAAClM,CwE/DC,A9FAA,GsB+DG,CwE/DC,A9FAA,AsB+DA,CwE/DC8K,A9FAAA,OsB+DO,CAAC,MwE/DM,A9FAA;AwIIjC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EsB+DE,EmE/DEpG,A/FAAA,IoGAIA,A9FAAA,CyFAC,A/FAA,C+FACqH,A/FAAA,GoGAG,A9FAA,C8FAC0M,A9FAAA,OyFAO,A/FAA,GoGAG,ALAA,AzFAA,ANAA,I+FAI,A/FAA;A8II9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EH+DE,EwE/DE,A9FAA,EyFAEvM,A/FAAA,GoGAG,A9FAA,C8FAC,A9FAA,EyFAE,A/FAA,C+FAClM,A/FAAA,I+FAI,A/FAA,C+FAC,A/FAA,W+FAW,A/FAA,C+FAC,A/FAA;A8II9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EH+DE,EmE/DE,A/FAA,EoGAE0E,A9FAAA,GsB+DG2P,EwE/DE,A9FAA,C8FACmE,A9FAAA,CsB+DC,IwE/DI,A9FAA,G8FAGkC,A9FAAA,I8FAI,A9FAA;AwIIxB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AH+DA,EmE/DE,A/FAA,IoGAI,A9FAA;AwIIN,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AHgEA,IwEhEI,A9FAA,K8FAK,A9FAA,AsBgEAxG,CwEhEC,A9FAA,UsBgEUA,CAAChI,MAAM,EAAExH,KAAK,EAAEiG,EAAE,EAAE;AkH5DxC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EHgEEjG,IwEhEIA,A9FAAA,CsBgEC,CAACmH,CmEhEC4H,A/FAAA,EoGAE,A9FAA,C8FAC+E,A9FAAA,EsBgEE,GwEhEG,A9FAA,AsBgEA,GwEhEG,ALAA/E,AzFAA,ANAAA,CoGAC/O,ALAAwH,AzFAAxH,ANAAwH,A4BgEA,KwEhEK,A9FAA,C8FACsM,ALAA,AzFAAA,ANAA,E+FAE9T,A/FAAA,GoGAG,A9FAA,E8FAEgW,ALAA,AzFAAA,ANAA,E+FAE,A/FAA,EoGAE,A9FAA,C8FAC,A9FAA;AwIIvC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BgEAjH,IwEhEI,ALAAY,AzFAA,ANAAA,I+FAI,A/FAA,G+FAGV,A/FAAA,A4BgEA,CAACzH,MAAM,EAAExH,CmEhEC,A/FAA,C+FACA,A/FAAA,G4BgEG,CAAC,CmEhEC,A/FAA,C+FAC,A/FAA;A8II9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BgEA,EwEhEE,A9FAA,EyFAE2P,A/FAAA,A4BgEA1J,EAAE,EmEhEE,A/FAA,A4BgEA,EmEhEE,A/FAA;A8IIZ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAIyJ,A/FAAA,A4BgEA,EwEhEE1P,A9FAAA,EsBgEEA,GwEhEG,A9FAA,C8FAC8T,A9FAAA,CyFAC,A/FAA,A4BgEA,CmEhECtM,A/FAAA,A4BgEAF,GwEhEG,A9FAA,C8FACjN,A9FAAA,EyFAE,A/FAA,EoGAE,ALAA2F,AzFAA,ANAAA,A4BgEA,CwEhECgW,A9FAAA,CsBgEC4E,GwEhEG,ALAA,AzFAA,ANAA,A4BgEA,CwEhEC,ALAA,AzFAA,ANAA,A4BgEA5gB,QAAQ,CAACiM,EAAE,CAAC,CAAC,KAAKuB,MAAM,CAACtM,IAAI,CAAC,QAAQ,EAAE+K,EAAE,CAAC;AkH5DvE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EHgEE,EmEhEE,A/FAA,EoGAE,A9FAA,EyFAEjG,A/FAAA,K+FAK,A/FAA,C+FACiN,A/FAAA,S+FAS,A/FAA,K+FAK,A/FAA,C+FAC,A/FAA,E+FAE,A/FAA;A8II/B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBgEAjN,ImEhEIA,A/FAAA,C4BgEC,CAACiH,GmEhEG,A/FAA,C+FACK,A/FAAA,C4BgEC,GAAG,ImEhEI,A/FAA,A4BgEA,GmEhEG,A/FAA,I+FAI,A/FAA;A8II3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEtH,A9FAAA,AsBgEAwH,ImEhEIA,A/FAAA,CoGAC,A9FAA,C8FACuM,A9FAAA,AsBgEA,CAAC9Q,GmEhEG,A/FAA,C+FAC3H,A/FAAA,I+FAI,A/FAA,A4BgEA,CwEhEC,ALAA,AzFAA,ANAA,E4BgEE,EwEhEE,A9FAA,C8FAC,A9FAA,EsBgEE,CmEhEC,A/FAA,C+FAC,A/FAA;A8II3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHgEA,EwEhEE+X,A9FAAA,IyFAI,A/FAA,CoGAC,A9FAA,C8FAC,A9FAA,EyFAErT,A/FAAA,K+FAK,A/FAA,C+FAC2H,A/FAAA,W+FAW,A/FAA,E+FAE,A/FAA,EoGAE,A9FAA,E8FAE3H,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,E8FAEkC,A9FAAA,Q8FAQ,A9FAA,C8FAC,A9FAA;AwII5D,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHiEA,EwEjEE,A9FAA,I8FAIC,A9FAAA,EyFAE,A/FAA,C4BiECvL,EwEjEE,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,C8FACsL,A9FAAA,OsBiEOtL,CwEjEC,A9FAA,AsBiEAiF,IwEjEIqG,A9FAAA,GsBiEG,EAAEjW,GwEjEG,A9FAA,C8FACuP,A9FAAA,CsBiEC,EwEjEE,A9FAA,AsBiEA1Q,GAAG,EwEjEE,A9FAA,AsBiEA,KwEjEK,A9FAA,K8FAKmX,A9FAAA,I8FAI,A9FAA,K8FAKvd,A9FAAA,O8FAO,A9FAA,C8FAC0d,A9FAAA,M8FAM,A9FAA,I8FAIH,A9FAAA,I8FAI,A9FAA,K8FAKvd,A9FAAA,O8FAO,A9FAA,C8FAC2d,A9FAAA,M8FAM,A9FAA;AwIIzG,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBiEA,IwEjEIC,A9FAAA,AsBiEAzR,EmEjEE,A/FAA,GoGAG,A9FAA,AsBiEA,GwEjEGsR,A9FAAA,AsBiEAtG,KwEjEK,A9FAA,EsBiEE,CwEjECO,A9FAAA,AsBiEAvL,KwEjEK,A9FAA,AsBiEA,GwEjEG0R,A9FAAA,M8FAM,A9FAA;AwIIpC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,AsBiEA1G,IwEjEI5P,A9FAAA,EyFAE,A/FAA,C4BiEC,CAAC4E,CwEjEC,A9FAA,C8FACsC,ALAAO,AzFAAP,ANAAO,G4BiEG,GmEjEG,A/FAA,A4BiEA,GmEjEGD,A/FAAA,CoGAC,A9FAA,AsBiEA,EwEjEE/O,A9FAAA,GyFAG,A/FAA,C+FAC2N,A/FAAA,GoGAG,A9FAA,C8FACpM,A9FAAA,Q8FAQ,A9FAA,C8FACqc,A9FAAA,CyFAC,A/FAA,IoGAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK/R,A9FAAA,G8FAG,A9FAA,C8FACpJ,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,E8FAEmb,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII3E,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEL,A9FAAA,AsBiEA,IwEjEI,A9FAA,C8FAChb,A9FAAA,CyFAC,A/FAA,CoGAC,A9FAA,AsBiEA4J,CwEjEC,A9FAA,EyFAE,A/FAA,C+FAC6C,A/FAAA,C4BiEC,EAAE,EwEjEE,A9FAA,CyFAC,A/FAA,CoGAC8O,A9FAAA,GyFAG9O,A/FAAA,KoGAK,A9FAA,C8FAC,ALAA,AzFAA,ANAA,C+FACE,A/FAAA,W+FAW,A/FAA,I+FAIF,A/FAAA,M+FAM,A/FAA,C+FACP,A/FAAA,U+FAU,A/FAA,E+FAE,A/FAA;A8IIhE,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EsBiEE,IAAIjB,EmEjEEuB,A/FAAA,A4BiEA,CwEjEC+O,A9FAAA,EsBiEE3R,GmEjEG,A/FAA,C+FACoB,A/FAAA,C4BiEC,CwEjECuQ,A9FAAA,AsBiEA/L,CwEjEC0F,A9FAAA,IyFAI,A/FAA,C+FAC,A/FAA,C+FAC,A/FAA,C4BiEC,CwEjEC,A9FAA,E8FAEsG,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA;AwII1C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAInD,A9FAAA,AsBiEArT,ImEjEI,A/FAA,CoGAC,A9FAA,AsBiEA,CwEjEC,A9FAA,AsBiEAiN,SAAS,CwEjEC,A9FAA,C8FAC,A9FAA,AsBiEA;AkH7DrB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,AsBiEAhH,EmEjEE,A/FAA,A4BiEA,CAACpH,CwEjECqR,A9FAAA,EsBiEE,CAAC,KwEjEK,A9FAA,K8FAK5L,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA;AwII1B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,A4BiEAM,EwEjEE,A9FAA,GsBiEG,CwEjEC4R,A9FAAA,EsBiEE5R,KAAK,CAACE,EwEjEE,A9FAA,EsBiEE,EwEjEE0R,A9FAAA,U8FAU,A9FAA,C8FACC,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,K8FAK,A9FAA,E8FAE,A9FAA;AwIIzD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BiEA,MwEjEMD,A9FAAA,U8FAU,A9FAA,C8FACC,A9FAAA,U8FAU,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AwIIpC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,MoGAMC,A9FAAA,CyFAC/G,A/FAAA,I+FAI,A/FAA,EoGAE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AwIIjB,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EHiEE,IwEjEI,A9FAA;AwIIN,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EHiEE3P,EwEjEE,A9FAA,GsBiEG,CAACmN,CmEjECqC,A/FAAA,W+FAWA,A/FAAA,C+FAChI,A/FAAA,K4BiEK,CmEjEC,A/FAA,A4BiEA1C,EmEjEE9E,A/FAAA,E4BiEE,GmEjEG,A/FAA,A4BiEA4P,EmEjEE3J,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA,C4BiEC;AkH7DzC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHiEA,EwEjEE,ALAAjG,AzFAA,ANAAA,K+FAK,A/FAA,C+FACmH,A/FAAA,M+FAM,A/FAA,G+FAG,A/FAA,I+FAI,A/FAA;A8IIrB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHkEA3K,EwElEE,ALAAuS,AzFAA,ANAAA,I4BkEI,CAACpR,IwElEIwS,A9FAAA,EyFAE,A/FAA,C+FAC3I,A/FAAA,EoGAE2I,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA,CyFAC,A/FAA,C4BkEC,CmElECnQ,A/FAAA,A4BkEAoK,KmElEK,A/FAA,C+FAC,A/FAA,E4BkEE,CAAC5P,SAAS,EAAE,WAAW,EAAE;AkH9DvD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BkEAqD,EwElEEwV,A9FAAA,CsBkEC,CmElECpN,A/FAAA,C4BkEC,CmElEC,A/FAA,CoGAC,A9FAA,C8FAC,ALAA,AzFAA,ANAA,M4BkEHpI,CwElEU,A9FAA,AsBkEV,CwElEW,A9FAA,CsBkEC;AkH9DnB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAImY,ALAA,AzFAAA,ANAA,A4BkEA,IwElEI,ALAAhW,AzFAA,ANAAA,A4BkEA,CwElECuP,A9FAAA,G8FAG,A9FAA,AsBkEA,CwElEC,ALAA,AzFAA,ANAA,A4BkEAhJ,CwElEC,ALAAe,AzFAA,ANAAA,Q+FAQ,A/FAA,E+FAE7O,A/FAAA,G4BkEG,ImElEI,A/FAA,C+FACuB,A/FAAA,A4BkEA5G,QmElEQ,A/FAA,C+FAC6S,A/FAAA,A4BkEA,EmElEE,A/FAA,A4BkEA,CmElEC,A/FAA,C+FAC,A/FAA,K+FAKuB,A/FAAA,M+FAM,A/FAA,C+FACtM,A/FAAA,I+FAI,A/FAA,C+FAC,A/FAA,Q+FAQ,A/FAA,E+FAE+K,A/FAAA,E+FAE,A/FAA,C+FAC,A/FAA;A8II3E,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,I4BkEI,OAAO,KAAK;AkH9DlB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAEjG,A/FAAA,E4BkEE,GmElEG,A/FAA,C+FACiH,A/FAAA,K+FAK,A/FAA,G+FAG,A/FAA,I+FAI,A/FAA;A8IIpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAO,AzFAA,ANAAA,E4BkEE,ImElEI,A/FAA,C+FACvE,A/FAAA,E4BkEE,IAAI,CAACsD,CmElEC,A/FAA,G+FAG,A/FAA,K+FAK,A/FAA,K4BkEK,CAACF,SAAS;AkH9DxC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsBkEA,CAAC;AkH9DH,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,EqEAE,A9FAA,AsBkEAvI,GAAG,EAAE,EmElEE6M,A/FAAA,O4BkEF7M,CAAUb,KAAK,CmElEC0N,A/FAAA,C+FACiF,A/FAAA,A4BkEA,OmElEO,A/FAA,E+FAE5P,A/FAAA,K+FAK,A/FAA,E+FAEnB,A/FAAA,G+FAG,A/FAA,E+FAE,A/FAA;A8II7C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA,AzFAA,ANAA,E4BkEE,EmElEE+F,A/FAAA,K+FAK,A/FAA,G+FAGgL,A/FAAA,O+FAO,A/FAA,C+FAChL,A/FAAA,K+FAK,A/FAA;A8II3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAAgL,AzFAA,ANAAA,E4BkEE,EwElEE+G,A9FAAA,GyFAG,A/FAA,C+FAC/R,A/FAAA,GoGAG,A9FAA,EyFAE,A/FAA,CoGACgS,A9FAAA,EyFAE,A/FAA,I+FAI,A/FAA,KoGAK,A9FAA,C8FACtS,A9FAAA,G8FAG,A9FAA,C8FAC,A9FAA;AwIIhC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE0R,ALAA,AzFAAA,ANAA,E4BkEE,EwElEE,A9FAA,C8FAChb,A9FAAA,CsBkEC,CwElEC,ALAA4J,AzFAA,ANAAA,A4BkEA,CwElEC,A9FAA,GsBkEG,CmElEC,A/FAA,A4BkEA2B,EmElEE,A/FAA,CoGAC,A9FAA,E8FAEoQ,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA,CsBkEC,EAAE;AkH9D9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,EoGAEE,A9FAAA,AsBkEA,EmElEE5Q,A/FAAA,E+FAE,A/FAA,G+FAGrB,A/FAAA,EoGAE,A9FAA,G8FAG,ALAA,AzFAA,ANAA,C+FAC4F,A/FAAA,IoGAI,A9FAA,IyFAI,A/FAA;A8II3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAExK,A/FAAA,A4BkEA,KmElEK,A/FAA,C+FACiN,A/FAAA,CoGACyJ,A9FAAA,O8FAOA,A9FAAA,C8FAA,ALAC,AzFAD,ANAC,EoGAE,ALAA,AzFAA,ANAA;A8IIrB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIrD,ALAApN,AzFAAoN,ANAApN,E+FAE,A/FAA,C+FACpH,A/FAAA,EoGAE,A9FAA,C8FAC,ALAA,AzFAA,ANAA,C+FAC,A/FAA,QoGAQ,A9FAA,C8FAC,A9FAA;AwIIpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA+F,AzFAA,ANAAA,A4BkEA,KmElEK,A/FAA,G+FAGA,A/FAAA,K+FAK,A/FAA,C+FACE,A/FAAA,I+FAI,A/FAA;A8IItB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,EoGAEkR,A9FAAA,AsBkEA,IwElEI,A9FAA,C8FAC5a,A9FAAA,c8FAc,A9FAA,C8FAC,A9FAA,O8FAO,A9FAA,E8FAE+V,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AwIIzC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI6E,A9FAAA,AsBkEA,IwElEI,A9FAA,AsBkEA,CwElEC5a,A9FAAA,AsBkEAmL,cwElEc,A9FAA,AsBkEA,CwElEC,A9FAA,AsBkEAF,QwElEQ,A9FAA,CsBkEC,CwElEC0K,A9FAAA,EsBkEE9T,KAAK,CwElEC,A9FAA,C8FAC,A9FAA;AwII3C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BkEA,EwElEE+Y,A9FAAA,I8FAI,A9FAA,C8FAC5a,A9FAAA,c8FAc,A9FAA,C8FAC,A9FAA,O8FAO,A9FAA,E8FAEub,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AwIIzC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHkEA,CAAC,CmElEC3W,A/FAAA,A4BkEA,EwElEEgW,A9FAAA,GyFAG,A/FAA,CoGAC,ALAA7I,AzFAA,ANAAA,CoGAC/R,A9FAAA,c8FAc,A9FAA,C8FAC,A9FAA,EyFAE,A/FAA,C+FAC0J,A/FAAA,IoGAI,ALAA,AzFAA,ANAA,EoGAEoM,A9FAAA,CyFACtB,A/FAAA,MoGAM,A9FAA,C8FAC,ALAA,AzFAA,ANAA;A8IIzC,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,AHmEAxF,IwEnEI4L,A9FAAA,I8FAI,A9FAA,AsBmEA,CwEnEC5a,A9FAAA,AsBmEAZ,SAAS,CAACwL,IwEnEI,A9FAA,C8FAC,A9FAA,EsBmEE,GAAGwF,GwEnEG,A9FAA,E8FAE+K,A9FAAA,MsBmEM,CAACvQ,CwEnEC,A9FAA,C8FAC,A9FAA,KsBmEK;AkH/DhD,AJDA,AjCAA,AVFAxJ,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFAA,AmFEA,AoFAA,AxIFA,AHmEA4N,IwEnEI9F,A9FAAA,EyFAE,A/FAA,CoGAC,ALAA3G,AzFAA,ANAAA,CoGACvC,A9FAAA,AsBmEA,CAACZ,SAAS,CAACqV,EmEnEE,A/FAA,CoGAC,ALAAzF,AzFAA,ANAAA,CoGAC,A9FAA,K8FAK,A9FAA,CsBmEC,CwEnEC+F,ALAA,AzFAAA,ANAA,C+FAC3V,A/FAAA,C4BmECgR,GwEnEG,A9FAA,C8FAC,A9FAA,IyFAI,A/FAA,E+FAE,A/FAA,C4BmEC,CAACzE,SmEnES,A/FAA,A4BmEA,EmEnEE,A/FAA;A8IIvD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHmEAqD,EmEnEE,A/FAA,EoGAE9F,A9FAAA,G8FAG,A9FAA,C8FAClJ,A9FAAA,AsBmEA,CAACZ,SAAS,CAACkM,GwEnEG,A9FAA,C8FAC,A9FAA,IsBmEI,CwEnEC,A9FAA,E8FAE4P,A9FAAA,AsBmEA,MwEnEM,A9FAA,C8FAC,A9FAA,GsBmEGzX,GAAG,EAAEoH,EAAE,EAAE;AkH/DjD,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BmEA,EwEnEE3B,A9FAAA,EsBmEE,CwEnEC,A9FAA,AsBmEAiL,CwEnECnU,A9FAAA,EsBmEE,CAAC,CAAC,UwEnEU,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,E8FAE0b,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AwIItC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,A4BmEA7Q,EwEnEE4Q,A9FAAA,AsBmEA,CAAChY,GAAG,CAAC,IwEnEI,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AwIIpB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,AHmEA,CAAC,CmEnECjB,A/FAAA,U+FAU,A/FAA,E+FAE,A/FAA,K+FAK,A/FAA;A8IInB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAEC,A/FAAA,EoGAE,A9FAA,CyFAC,A/FAA,E+FAE,A/FAA,S+FASA,A/FAAA,G+FAGA,A/FAAA,C+FAA,A/FAA,E+FAG,A/FAA;A8IItB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,I+FAI,A/FAA,I+FAI,A/FAA,C+FAC0I,A/FAAA,c+FAc,A/FAA,K+FAKnT,A/FAAA,S+FAS,A/FAA,E+FAE,A/FAA;A8II3C,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,EyFAE,A/FAA,O+FAO,A/FAA,K+FAK,A/FAA;A8IIlB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA;A8IIJ,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,ALAA,AzFAA,ANAA,O+FAO,A/FAA,I+FAI,A/FAA,C+FACmT,A/FAAA,c+FAc,A/FAA,C+FACF,A/FAAA,S+FAS,A/FAA;A8IIxC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,C+FAC,A/FAA,CoGAC,A9FAA,I8FAIrG,A9FAAA,K8FAK,A9FAA,C8FACsU,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,C8FAC0B,A9FAAA,I8FAI,A9FAA,C8FACzP,A9FAAA,c8FAc,A9FAA,I8FAIyP,A9FAAA,I8FAI,A9FAA,C8FACzP,A9FAAA,c8FAc,A9FAA,C8FAC6F,A9FAAA,S8FAS,A9FAA,C8FAC,A9FAA,E8FAEuK,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AwII9F,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,ALAA7Y,AzFAA,ANAAA,G+FAG,A/FAA,E+FAE,A/FAA,S+FASA,A/FAAA,G+FAGA,A/FAAA,C+FACb,A/FAAA,K+FAK,A/FAA,E+FAE,A/FAA;A8II3B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEqH,A9FAAA,EyFAE,A/FAA,CoGAC,A9FAA,C8FACtJ,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,E8FAE8b,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AwIIxB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,EyFAE,A/FAA,OoGAOA,A9FAAA,M8FAMA,A9FAAA,C8FACxM,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AwIIzB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI+I,ALAA,AzFAAA,ANAA,I+FAI,A/FAA,CoGAC,ALAA,AzFAA,ANAA,CoGAC,A9FAA,GyFAG,A/FAA,C+FAC9M,A/FAAA,IoGAI,A9FAA,C8FAC,A9FAA,SyFAS,A/FAA,E+FAE,A/FAA;A8II9B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,EyFAE,A/FAA,EoGAElF,A9FAAA,G8FAG,A9FAA,G8FAG2U,A9FAAA,I8FAI,A9FAA,C8FACtI,A9FAAA,K8FAK,A9FAA,C8FACpD,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AwII/B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI+I,ALAA,AzFAAA,ANAA,KoGAK,A9FAA,C8FAC,A9FAA,Y8FAY,A9FAA,E8FAEhS,A9FAAA,G8FAG,A9FAA,C8FAC,A9FAA;AwII5B,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIA,A9FAAA,G8FAG,A9FAA,K8FAK,A9FAA,K8FAK,A9FAA,E8FAE,A9FAA;AwIIvB,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,EoGAE,A9FAA;AwIIN,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,EoGAE,A9FAA;AwIIN,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IgEAI,A/FAA,EoGAE,A9FAA,EyFAE,A/FAA,C+FACkF,A/FAAA,c+FAc,A/FAA,C+FACF,A/FAAA,S+FAS,A/FAA,G+FAGpJ,A/FAAA,K+FAK,A/FAA;A8IIzC,AJDA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAE,A/FAA,IoGAI,A9FAA;AwIIN,AJDA,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,CgEAC,A/FAA,C+FAC,A/FAA,IoGAI,A9FAA,I8FAI,A9FAA,C8FAC+C,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,I8FAI/T,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,K8FAKkC,A9FAAA,I8FAI,A9FAA,I8FAIhW,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,I8FAIzK,A9FAAA,O8FAO,A9FAA,C8FACtJ,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,E8FAEkC,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,C8FACa,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA;AoIGvI,AjCAA,AVFAzM,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFAA,AmFEA,AoFAA,AxIFA,QqEAQiJ,ALAA,AzFAAA,ANAA,C+FAC7Y,A/FAAA,IoGAI,A9FAA,C8FAC,A9FAA,IyFAI,A/FAA,C+FACwL,A/FAAA,O+FAO,A/FAA,G+FAGwF,A/FAAA,W+FAW,A/FAA,C+FACxF,A/FAAA,EoGAE,A9FAA,E8FAEhG,A9FAAA,GyFAG,A/FAA,EoGAE,A9FAA,C8FACsU,A9FAAA,U8FAU,A9FAA,C8FAC,A9FAA;AoIG9D,AjCAA,AVFAlK,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFAA,AmFEA,AoFAA,AxIFA,QqEAQpK,ALAA,AzFAAA,ANAA,C+FACxF,A/FAAA,IoGAI,A9FAA,C8FAC8Z,A9FAAA,IyFAI,A/FAA,C+FACzE,A/FAAA,KoGAK,A9FAA,E8FAE,A9FAA,GyFAG,A/FAA,G+FAGrE,A/FAAA,W+FAW,A/FAA,C+FACzE,A/FAAA,S+FAS,A/FAA;A0IGrD,AjCAA,AVFAqD,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFAA,AmFEA,AoFAA,AxIFA,MqEAM,A9FAA,EyFAE,A/FAA,C+FAC5P,A/FAAA,S+FAS,A/FAA,C+FACkM,A/FAAA,Q+FAQ,A/FAA,G+FAG,A/FAA,U+FAU7H,A/FAAA,G+FAG,A/FAA,E+FAEoH,A/FAAA,E+FAE,A/FAA,E+FAE,A/FAA;A0IGjD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EgEAEA,A/FAAA,E+FAE,A/FAA,C+FACpH,A/FAAA,CoGACyF,A9FAAA,EyFAE,A/FAA,CoGAC,ALAA,AzFAA,ANAA,CoGACyS,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGjB,AjCAA,AVFA,A/GCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,A5GFA,AmFEA,AoFAA,AxIFA,CgEAC,A/FAA,GoGAG,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,S8FAS7F,A9FAAA,O8FAOA,A9FAAA,C8FACtS,A9FAAA,E8FAE,A9FAA,E8FAE,A9FAA;AoIGvB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIyU,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,S8FAS,A9FAA,E8FAEzU,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI0X,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGZ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIN,A9FAAA,I8FAI,A9FAA,C8FAC5a,A9FAAA,c8FAc,A9FAA,C8FAC,A9FAA,O8FAO,A9FAA,E8FAE8V,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGzC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIiC,A9FAAA,e8FAe,A9FAA,C8FAC6C,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAEzO,A9FAAA,c8FAc,A9FAA,C8FACyO,A9FAAA,I8FAI,A9FAA,E8FAEpX,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA;AoIGtE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAErD,A9FAAA,e8FAe,A9FAA,C8FACya,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,E8FAE9E,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGzC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,S8FASC,A9FAAA,O8FAOA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGrB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI6E,A9FAAA,I8FAI,A9FAA,C8FAC5a,A9FAAA,c8FAc,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,E8FAE2V,A9FAAA,Q8FAQ,A9FAA,C8FAC,A9FAA;AoIG3C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIuF,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGZ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEN,A9FAAA,I8FAI,A9FAA,C8FAC9a,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,O8FAO,A9FAA,E8FAEiW,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIG7B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,S8FASJ,A9FAAA,Q8FAQA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIsC,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,U8FAU,A9FAA,C8FAC,A9FAA;AoIGrB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI2C,A9FAAA,I8FAI,A9FAA,C8FAC5a,A9FAAA,c8FAc,A9FAA,C8FAC,A9FAA,O8FAO,A9FAA,E8FAE+V,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGzC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAImF,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGZ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEN,A9FAAA,I8FAI,A9FAA,C8FAC9a,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,E8FAE6V,A9FAAA,Q8FAQ,A9FAA,C8FAC,A9FAA;AoIG/B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,S8FASuF,A9FAAA,M8FAMA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGpB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIjD,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,C8FAC,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI/O,A9FAAA,G8FAG,A9FAA,C8FACgS,A9FAAA,M8FAM,A9FAA,C8FACN,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGpB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEA,A9FAAA,I8FAI,A9FAA,C8FAC1a,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,E8FAEgJ,A9FAAA,G8FAG,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FACtE,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,E8FAE,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIX,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,a8FAa,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI/O,A9FAAA,G8FAG,A9FAA,C8FAC0S,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGhB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAOhB,A9FAAA,I8FAI,A9FAA;AoIGb,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASY,A9FAAA,W8FAWA,A9FAAA,C8FACtS,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA;AoIG1B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAO,A9FAA,S8FAS2S,A9FAAA,yB8FAyBA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIG9C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIjX,A9FAAA,K8FAK,A9FAA,G8FAGsE,A9FAAA,G8FAG,A9FAA,C8FAC8B,A9FAAA,c8FAc,A9FAA;AoIGlC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIiN,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,a8FAa,A9FAA,E8FAErT,A9FAAA,K8FAK,A9FAA,C8FACsU,A9FAAA,U8FAU,A9FAA,C8FAC,A9FAA;AoIG1C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAItU,A9FAAA,K8FAK,A9FAA,C8FACsU,A9FAAA,U8FAU,A9FAA,E8FAEtU,A9FAAA,K8FAK,A9FAA,C8FACsU,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAItU,A9FAAA,K8FAK,A9FAA,C8FACsU,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,I8FAInB,A9FAAA,e8FAe,A9FAA,C8FAC7O,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,M8FAM,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AoIGhE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAMtE,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIG1B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAM8B,A9FAAA,I8FAI,A9FAA,C8FACxR,A9FAAA,G8FAG,A9FAA,C8FAC,A9FAA;AoIGf,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA;AoIGH,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFAyL,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FAC8b,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,U8FAUN,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIhW,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA,C8FACoG,A9FAAA,c8FAc,A9FAA;AoIGjC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIoQ,A9FAAA,U8FAU,A9FAA,G8FAG,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIC,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGhB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA;AoIGH,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIzW,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGzC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI/T,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AoIG9B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIiC,A9FAAA,I8FAI,A9FAA,I8FAIA,A9FAAA,I8FAI,A9FAA,K8FAKhW,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGjD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI,A9FAA,C8FACkC,A9FAAA,I8FAI,A9FAA,E8FAEA,A9FAAA,I8FAI,A9FAA,G8FAGhW,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA;AoIGjC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI9T,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI9T,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI/T,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIGzB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIgC,A9FAAA,I8FAI,A9FAA,E8FAEA,A9FAAA,I8FAI,A9FAA,C8FAC1a,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,E8FAEkb,A9FAAA,U8FAU,A9FAA,C8FAC,A9FAA;AoIGnD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGf,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FACR,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA;AoIGb,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIkB,A9FAAA,K8FAK,A9FAA,G8FAGlX,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA;AoIG3B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIha,A9FAAA,G8FAG,A9FAA,G8FAGkG,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA;AoIG9B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI/T,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI9T,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI/T,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIGzB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,K8FAK,A9FAA,I8FAI5Z,A9FAAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,E8FAEA,A9FAAA,C8FAC,A9FAA,G8FAGN,A9FAAA,G8FAG,A9FAA,E8FAEM,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA,E8FAE8c,A9FAAA,K8FAK,A9FAA,C8FAC9c,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FACkB,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,E8FAE,A9FAA;AoIGhE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAMmb,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGlB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGN,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGf,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAItV,A9FAAA,K8FAK,A9FAA,G8FAGmI,A9FAAA,O8FAO,A9FAA,C8FACtJ,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,E8FAEkC,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGxC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI7U,A9FAAA,K8FAK,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIG/B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEnB,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,C8FACqD,A9FAAA,M8FAM,A9FAA,C8FAChW,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIG9B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEnB,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGvB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI/T,A9FAAA,K8FAK,A9FAA,C8FAC+T,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE/T,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,G8FAG9T,A9FAAA,K8FAK,A9FAA,C8FAC8T,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIG1D,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAEkC,A9FAAA,I8FAI,A9FAA,C8FAC1a,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,E8FAEkb,A9FAAA,U8FAU,A9FAA,C8FAC,A9FAA;AoIGvC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGb,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFAzG,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACQ,A9FAAA,E8FAE,A9FAA,G8FAG,A9FAA,U8FAUoc,A9FAAA,E8FAE,A9FAA,E8FAExD,A9FAAA,E8FAE,A9FAA,E8FAE,A9FAA;AoIG1C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI5P,A9FAAA,G8FAG,A9FAA,G8FAGgH,A9FAAA,M8FAM,A9FAA,C8FACxQ,A9FAAA,S8FAS,A9FAA,C8FACQ,A9FAAA,E8FAE,A9FAA,C8FAC7B,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,E8FAEie,A9FAAA,E8FAE,A9FAA,E8FAExD,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA;AoIGlD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI5T,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA,C8FACoG,A9FAAA,c8FAc,A9FAA;AoIGjC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIgR,A9FAAA,E8FAE,A9FAA,K8FAK,A9FAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIGrB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAIpX,A9FAAA,K8FAK,A9FAA,C8FACmU,A9FAAA,iB8FAiB,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA,C8FACpT,A9FAAA,a8FAa,A9FAA,C8FAC,A9FAA,U8FAU,A9FAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA;AoIGhE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIf,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,K8FAK,A9FAA,K8FAK,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FACgD,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIG9C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,I8FAII,A9FAAA,E8FAE,A9FAA,K8FAK,A9FAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGhC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI,A9FAA,C8FACpX,A9FAAA,K8FAK,A9FAA,C8FACkH,A9FAAA,U8FAU,A9FAA,I8FAI,A9FAA,C8FAClH,A9FAAA,K8FAK,A9FAA,C8FACmU,A9FAAA,iB8FAiB,A9FAA,E8FAE,A9FAA;AoIGvD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAMnU,A9FAAA,K8FAK,A9FAA,C8FACmU,A9FAAA,iB8FAiB,A9FAA,G8FAGnU,A9FAAA,K8FAK,A9FAA,C8FACiU,A9FAAA,Y8FAY,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGzD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAMjU,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIG3B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAMhU,A9FAAA,K8FAK,A9FAA,C8FACkU,A9FAAA,e8FAe,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIGnC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAMb,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,a8FAa,A9FAA,E8FAErT,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,E8FAE2M,A9FAAA,K8FAK,A9FAA,C8FACgH,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGvD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,I8FAIhH,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,QqEAQ4hB,A9FAAA,Y8FAY,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIG1B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,I8FAI,A9FAA,C8FACjV,A9FAAA,K8FAK,A9FAA,C8FACgH,A9FAAA,O8FAO,A9FAA,E8FAE,A9FAA;AoIGjC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,QqEAQvO,A9FAAA,O8FAO,A9FAA,C8FACuB,A9FAAA,Q8FAQ,A9FAA,C8FACqd,A9FAAA,gB8FAgB,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGhD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA;AoIGN,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAOrT,A9FAAA,G8FAG,A9FAA;AoIGZ,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,ALFA+L,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACS,A9FAAA,W8FAW,A9FAA,G8FAG8U,A9FAAA,Q8FAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACQ,A9FAAA,E8FAE,A9FAA;AoIGtD,AjCAA,ALFA+U,ApHCA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACY,A9FAAA,c8FAc,A9FAA,G8FAG,A9FAA,U8FAUgc,A9FAAA,E8FAE,A9FAA,E8FAExD,A9FAAA,E8FAE,A9FAA,E8FAE,A9FAA;AoIGtD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI5P,A9FAAA,G8FAG,A9FAA,G8FAGgH,A9FAAA,M8FAM,A9FAA,C8FACxQ,A9FAAA,S8FAS,A9FAA,C8FACY,A9FAAA,c8FAc,A9FAA,C8FACjC,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,E8FAEie,A9FAAA,E8FAE,A9FAA,E8FAExD,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA;AoIG9D,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIwD,A9FAAA,E8FAE,A9FAA,K8FAK,A9FAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGzB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AgBAA,ApBDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI3e,A9FAAA,O8FAO,A9FAA,C8FACuB,A9FAAA,Q8FAQ,A9FAA,C8FACsd,A9FAAA,uB8FAuB,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGnD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAOtT,A9FAAA,G8FAG,A9FAA;AoIGZ,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,ALFA+L,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACa,A9FAAA,kB8FAkB,A9FAA,G8FAG,A9FAA,U8FAU+b,A9FAAA,E8FAE,A9FAA,E8FAE,A9FAA;AoIGtD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIpT,A9FAAA,G8FAG,A9FAA,G8FAGgH,A9FAAA,M8FAM,A9FAA,C8FACxQ,A9FAAA,S8FAS,A9FAA,C8FACa,A9FAAA,kB8FAkB,A9FAA,C8FACZ,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,E8FAEN,A9FAAA,S8FAS,A9FAA,C8FAC,A9FAA;AoIGtE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIid,A9FAAA,E8FAE,A9FAA,K8FAK,A9FAA,U8FAU,A9FAA,I8FAIA,A9FAAA,E8FAE,A9FAA,K8FAKhkB,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA;AoIG7C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIqF,A9FAAA,O8FAO,A9FAA,C8FACuB,A9FAAA,Q8FAQ,A9FAA,C8FACsd,A9FAAA,uB8FAuB,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGnD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAOtT,A9FAAA,G8FAG,A9FAA;AoIGZ,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASsT,A9FAAA,uB8FAuBA,A9FAAA,C8FACzQ,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA;AoIGvC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI7G,A9FAAA,K8FAK,A9FAA,G8FAG6G,A9FAAA,I8FAI,A9FAA,C8FACT,A9FAAA,c8FAc,A9FAA;AoIGjC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEpG,A9FAAA,K8FAK,A9FAA,C8FACmU,A9FAAA,iB8FAiB,A9FAA,G8FAGtN,A9FAAA,I8FAI,A9FAA,C8FAC9F,A9FAAA,a8FAa,A9FAA,C8FAC,A9FAA,U8FAU,A9FAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA;AoIG9D,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIf,A9FAAA,K8FAK,A9FAA,C8FACoU,A9FAAA,e8FAe,A9FAA,I8FAI,A9FAA,C8FACpU,A9FAAA,K8FAK,A9FAA,C8FACqU,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIG9C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIrU,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,I8FAInN,A9FAAA,I8FAI,A9FAA,C8FAC9F,A9FAAA,a8FAa,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AoIG7C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI8F,A9FAAA,I8FAI,A9FAA,C8FACmQ,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGjB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASK,A9FAAA,gB8FAgBA,A9FAAA,C8FACxQ,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA;AoIGhC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEwM,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,0B8FA0B,A9FAA,C8FAC,A9FAA;AoIGnC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAExM,A9FAAA,I8FAI,A9FAA,C8FACqL,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGd,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFAnC,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACwc,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,Y8FAY,A9FAA;AoIGxC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIhX,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA,C8FACoG,A9FAAA,c8FAc,A9FAA;AoIGjC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FACpG,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,E8FAE,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIX,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,C8FAC,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIrT,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,G8FAG,A9FAA,C8FAChU,A9FAAA,K8FAK,A9FAA,C8FACmU,A9FAAA,iB8FAiB,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI6C,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,E8FAEhX,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AoIGvB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEA,A9FAAA,K8FAK,A9FAA,C8FACqU,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGb,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,SqEAS2C,A9FAAA,M8FAMA,A9FAAA,C8FACxP,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AoIG/B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FACA,A9FAAA,K8FAK,A9FAA,C8FACoU,A9FAAA,e8FAe,A9FAA,E8FAE,A9FAA;AoIG9B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIpU,A9FAAA,K8FAK,A9FAA,C8FACoU,A9FAAA,e8FAe,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGhC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI3b,A9FAAA,O8FAO,A9FAA,C8FACuB,A9FAAA,Q8FAQ,A9FAA,C8FACud,A9FAAA,O8FAO,A9FAA,E8FAE/P,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASuX,A9FAAA,O8FAOA,A9FAAA,C8FAC/P,A9FAAA,M8FAM,A9FAA,E8FAExH,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AoIGhC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEqT,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,E8FAErT,A9FAAA,K8FAK,A9FAA,C8FACgH,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGhC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FAChH,A9FAAA,K8FAK,A9FAA,C8FACgH,A9FAAA,O8FAO,A9FAA,E8FAE,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIQ,A9FAAA,M8FAM,A9FAA,C8FAC0K,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGlB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAElS,A9FAAA,K8FAK,A9FAA,C8FACoU,A9FAAA,e8FAe,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIG/B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE5M,A9FAAA,M8FAM,A9FAA,C8FAClM,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,Q8FAQ,A9FAA,C8FAC,A9FAA;AoIGvB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEwa,A9FAAA,I8FAI,A9FAA,C8FACtO,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AoIGd,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIxH,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,I8FAI,A9FAA,C8FAChU,A9FAAA,K8FAK,A9FAA,C8FACgH,A9FAAA,O8FAO,A9FAA,E8FAEQ,A9FAAA,M8FAM,A9FAA,C8FAC0K,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGrD,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFAnC,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACuc,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,Y8FAY,A9FAA;AoIGvC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE1D,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,uB8FAuB,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FACjN,A9FAAA,c8FAc,A9FAA,C8FAC4N,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIG7D,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,I8FAI,A9FAA,C8FAC5N,A9FAAA,c8FAc,A9FAA,C8FAC4N,A9FAAA,O8FAO,A9FAA,K8FAK,A9FAA,K8FAK,A9FAA,E8FAE,A9FAA;AoIG7C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIX,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGlB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI,A9FAA,C8FACjN,A9FAAA,c8FAc,A9FAA,C8FAC4N,A9FAAA,O8FAO,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIGvC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI,A9FAA,C8FAC1Y,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FAC8K,A9FAAA,c8FAc,A9FAA,C8FACiO,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGnC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGb,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASyB,A9FAAA,I8FAIA,A9FAAA,C8FACtO,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIxH,A9FAAA,K8FAK,A9FAA,G8FAGwH,A9FAAA,M8FAM,A9FAA,C8FACpB,A9FAAA,c8FAc,A9FAA;AoIGnC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEiN,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,E8FAErT,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIG9B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAOhU,A9FAAA,K8FAK,A9FAA,C8FACgU,A9FAAA,O8FAO,A9FAA,I8FAIxM,A9FAAA,M8FAM,A9FAA,C8FAC0K,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGjD,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFAnC,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACgd,A9FAAA,I8FAI,A9FAA,G8FAG,A9FAA,U8FAUhQ,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAItB,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGlB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIlG,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA,C8FACoG,A9FAAA,c8FAc,A9FAA;AoIGjC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIiO,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIGpB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE7M,A9FAAA,M8FAM,A9FAA,C8FACxM,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,E8FAE,A9FAA,Y8FAY,A9FAA;AoIG/B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIqY,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,a8FAa,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIrT,A9FAAA,K8FAK,A9FAA,C8FACwU,A9FAAA,O8FAO,A9FAA,I8FAI,A9FAA,C8FACxU,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AoIGvC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,I8FAIqD,A9FAAA,K8FAK,A9FAA,G8FAGtK,A9FAAA,K8FAK,A9FAA,C8FACwU,A9FAAA,O8FAO,A9FAA,C8FACjF,A9FAAA,G8FAG,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGrC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,I8FAIjF,A9FAAA,K8FAK,A9FAA,I8FAIA,A9FAAA,K8FAK,A9FAA,C8FACjX,A9FAAA,M8FAM,A9FAA,E8FAE6S,A9FAAA,K8FAK,A9FAA,C8FAC7L,A9FAAA,I8FAI,A9FAA,C8FACiQ,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AoIGlD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIpE,A9FAAA,K8FAK,A9FAA,C8FAC7L,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGpB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEmN,A9FAAA,M8FAM,A9FAA,C8FACxM,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA,E8FAE,A9FAA,U8FAUsP,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AoIGrC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI+I,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,c8FAc,A9FAA,C8FAC,A9FAA;AoIGzB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIrT,A9FAAA,K8FAK,A9FAA,C8FACwU,A9FAAA,O8FAO,A9FAA,E8FAElK,A9FAAA,K8FAK,A9FAA,G8FAGtK,A9FAAA,K8FAK,A9FAA,C8FACwU,A9FAAA,O8FAO,A9FAA,C8FAC9G,A9FAAA,K8FAK,A9FAA,C8FACpD,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AoIGzD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAItK,A9FAAA,K8FAK,A9FAA,C8FACmK,A9FAAA,U8FAU,A9FAA,K8FAKG,A9FAAA,K8FAK,A9FAA,K8FAK,A9FAA,I8FAI,A9FAA,I8FAIA,A9FAAA,K8FAK,A9FAA,K8FAKlX,A9FAAA,S8FAS,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,K8FAK,A9FAA,I8FAI,A9FAA,C8FAC4M,A9FAAA,K8FAK,A9FAA,C8FACmK,A9FAAA,U8FAU,A9FAA,K8FAK,A9FAA,C8FACG,A9FAAA,K8FAK,A9FAA,I8FAI,A9FAA,C8FACA,A9FAAA,K8FAK,A9FAA,C8FACjX,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AoIGrI,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIgO,A9FAAA,G8FAG,A9FAA,G8FAG6E,A9FAAA,K8FAK,A9FAA,C8FAC7L,A9FAAA,I8FAI,A9FAA,C8FACiQ,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA;AoIG/B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI,A9FAA,C8FACjJ,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA;AoIGd,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAMgT,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAM7M,A9FAAA,M8FAM,A9FAA,C8FACuP,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGpB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,K8FAK,A9FAA,I8FAI3c,A9FAAA,C8FAC,A9FAA,I8FAIoN,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI,A9FAA,I8FAI,A9FAA,C8FACpN,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAKhH,A9FAAA,S8FAS,A9FAA,I8FAI,A9FAA,O8FAOoU,A9FAAA,M8FAM,A9FAA,C8FACpN,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGlE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,I8FAI,A9FAA,C8FACA,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA,G8FAG,A9FAA,S8FASqd,A9FAAA,U8FAUA,A9FAAA,C8FACzH,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,QqEAQ,A9FAA,O8FAO,A9FAA,S8FAS0H,A9FAAA,wB8FAwBA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGnD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,UqEAU,A9FAA,O8FAOlQ,A9FAAA,M8FAM,A9FAA,C8FACwI,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FACvV,A9FAAA,K8FAK,A9FAA,C8FAC+M,A9FAAA,M8FAM,A9FAA,E8FAErN,A9FAAA,S8FAS,A9FAA,C8FAC,A9FAA;AoIGxD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FAC,A9FAA;AoIGT,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,C8FAC,A9FAA,C8FACC,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGV,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,K8FAK,A9FAA,I8FAIgE,A9FAAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,E8FAEA,A9FAAA,C8FAC,A9FAA,G8FAGsV,A9FAAA,Y8FAY,A9FAA,C8FACrgB,A9FAAA,M8FAM,A9FAA,E8FAE+K,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA,E8FAE,A9FAA;AoIGhD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIoJ,A9FAAA,M8FAM,A9FAA,C8FACxM,A9FAAA,E8FAE,A9FAA,C8FAC0Y,A9FAAA,Y8FAY,A9FAA,C8FACtV,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA,I8FAI,A9FAA,C8FAC9C,A9FAAA,I8FAI,A9FAA,C8FAC4E,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,E8FAEwT,A9FAAA,Y8FAY,A9FAA,C8FACtV,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGrE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FACqW,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,U8FAUrW,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA;AoIG5B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAIiV,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,e8FAe,A9FAA,E8FAEjV,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIG7B,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIiW,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIGhB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAMA,A9FAAA,M8FAM,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIGpB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAM7M,A9FAAA,M8FAM,A9FAA,C8FACwP,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGrB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA;AoIGH,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGb,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA;AoIGD,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAOlT,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGlC,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEiM,A9FAAA,Q8FAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,C8FACsJ,A9FAAA,M8FAM,A9FAA,C8FAC6O,A9FAAA,a8FAa,A9FAA,C8FAC,A9FAA,G8FAG,A9FAA,Y8FAY,A9FAA;AoIGzD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAIG,A9FAAA,iC8FAiC,A9FAA,K8FAK1f,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA;AoIGzD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,MqEAM0f,A9FAAA,iC8FAiC,A9FAA,G8FAG7Q,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA,mC8FAmC,A9FAA,C8FAC,A9FAA;AoIGtF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAO6Q,A9FAAA,iC8FAiC,A9FAA,C8FAC,A9FAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGlD,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA;AoIGH,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFAtW,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFAA,A6EEA,AoFAA,AxIFA,MqEAM,A9FAA,C8FACmB,A9FAAA,c8FAc,A9FAA,C8FACoS,A9FAAA,Q8FAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA,uB8FAuB,A9FAA,E8FAE,A9FAA;AoIGnE,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEoD,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA,K8FAK,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAEC,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,S8FASA,A9FAAA,G8FAGA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA,C8FACuI,A9FAAA,c8FAc,A9FAA,C8FAC0D,A9FAAA,a8FAa,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA,C8FAC,A9FAA;AoIGF,AjCAA,ALFAtN,ApHCA,AmLCA,AjFAA,A8BCA,AJDA,AtGFAA,A6EEA,AoFAA,AxIFA,MqEAM,A9FAA,C8FACmB,A9FAAA,c8FAc,A9FAA,C8FACoS,A9FAAA,Q8FAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA,gB8FAgB,A9FAA,E8FAE,A9FAA;AoIG5D,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A8BCA,AJDA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEoD,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA,K8FAK,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEC,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,S8FASA,A9FAAA,G8FAGA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA,C8FACuI,A9FAAA,c8FAc,A9FAA,I8FAI,A9FAA,I8FAI,A9FAA,C8FACA,A9FAAA,c8FAc,A9FAA,C8FACgJ,A9FAAA,M8FAM,A9FAA;AoIG5D,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA,C8FAC,A9FAA;AoIGF,AjCAA,ALFA5S,ApHCA,AmLCA,AjFAA,A0BAA,AtGFAA,A6EEA,AoFAA,AxIFA,MqEAM,A9FAA,C8FACmB,A9FAAA,c8FAc,A9FAA,C8FACoS,A9FAAA,Q8FAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA,iB8FAiB,A9FAA,E8FAE,A9FAA;AoIG7D,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEoD,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA,K8FAK,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEC,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,S8FASA,A9FAAA,G8FAGA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA,C8FACuI,A9FAAA,c8FAc,A9FAA,C8FAC4N,A9FAAA,O8FAO,A9FAA;AoIGtC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA;AoIGH,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAElW,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,S8FASA,A9FAAA,G8FAGA,A9FAAA,C8FACkC,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AoIG3B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI,A9FAA,I8FAI,A9FAA,C8FACoG,A9FAAA,c8FAc,A9FAA,E8FAE,A9FAA;AoIG7B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,I8FAI,A9FAA,C8FACA,A9FAAA,c8FAc,A9FAA,C8FAC4N,A9FAAA,O8FAO,A9FAA,G8FAGhU,A9FAAA,K8FAK,A9FAA;AoIGzC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA,C8FAC,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA+P,ApHCA,AmLCA,AjFAA,A0BAA,AtGFAA,A6EEA,AoFAA,AxIFA,QqEAQ,A9FAA,C8FAC4H,A9FAAA,S8FAS,A9FAA,G8FAG/B,A9FAAA,Q8FAQ,A9FAA;AoIG7B,AjCAA,ALFApZ,ApHCA,AmLCA,AjFAA,A0BAA,AtGFAA,A6EEA,AoFAA,AxIFA,MqEAM,A9FAA,C8FACmB,A9FAAA,c8FAc,A9FAA,C8FACoS,A9FAAA,Q8FAQ,A9FAA,C8FACvV,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA,gB8FAgB,A9FAA,E8FAE,A9FAA;AoIG5D,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEoD,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA,K8FAK,A9FAA;AoIGnB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEC,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,S8FASA,A9FAAA,G8FAGA,A9FAAA,C8FAA,A9FAA,E8FAG,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA,C8FACuI,A9FAAA,c8FAc,A9FAA,C8FAC/S,A9FAAA,M8FAM,A9FAA;AoIGrC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA,CqEAC,A9FAA,C8FAC,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASuiB,A9FAAA,Q8FAQA,A9FAAA,C8FACxX,A9FAAA,C8FAC,A9FAA,E8FAE4B,A9FAAA,K8FAK,A9FAA,E8FAE,A9FAA;AoIG5B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIA,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA,O8FAO,A9FAA,I8FAI,A9FAA;AoIGrC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIgO,A9FAAA,G8FAG,A9FAA;AoIGT,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIrB,A9FAAA,K8FAK,A9FAA,C8FACmK,A9FAAA,U8FAU,A9FAA,E8FAE9I,A9FAAA,G8FAG,A9FAA,G8FAGrB,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FAC9O,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,I8FAI,A9FAA,C8FAClC,A9FAAA,C8FAC,A9FAA,I8FAIA,A9FAAA,C8FAC,A9FAA,I8FAI4B,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIGrF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI2M,A9FAAA,K8FAK,A9FAA,C8FACwU,A9FAAA,O8FAO,A9FAA,E8FAEnT,A9FAAA,G8FAG,A9FAA,G8FAGrB,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FACpK,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,I8FAIhF,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FAC/b,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAEgO,A9FAAA,G8FAG,A9FAA,G8FAGrB,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FAC7J,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAKlE,A9FAAA,G8FAG,A9FAA,G8FAGrB,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FACzV,A9FAAA,M8FAM,A9FAA,C8FACqG,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AoIG9J,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI2M,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FACrK,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,C8FAC,A9FAA,M8FAM,A9FAA;AoIGT,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI1D,A9FAAA,G8FAG,A9FAA,G8FAGrB,A9FAAA,K8FAK,A9FAA,C8FACoP,A9FAAA,M8FAM,A9FAA,C8FACjK,A9FAAA,O8FAO,A9FAA,C8FAC/G,A9FAAA,C8FAC,A9FAA,E8FAE4B,A9FAAA,K8FAK,A9FAA,C8FACwU,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA;AoIGhD,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,O8FAOnT,A9FAAA,G8FAG,A9FAA;AoIGZ,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASqU,A9FAAA,W8FAWA,A9FAAA,C8FAClO,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIG7B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAIxH,A9FAAA,K8FAK,A9FAA,G8FAGwH,A9FAAA,M8FAM,A9FAA,C8FACpB,A9FAAA,c8FAc,A9FAA;AoIGnC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEiN,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,a8FAa,A9FAA,E8FAErT,A9FAAA,K8FAK,A9FAA,C8FACkH,A9FAAA,U8FAU,A9FAA,C8FAC,A9FAA;AoIGxC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FAClH,A9FAAA,K8FAK,A9FAA,C8FACkH,A9FAAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGzB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAIlH,A9FAAA,K8FAK,A9FAA,C8FACiH,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAIxO,A9FAAA,O8FAO,A9FAA,C8FACuB,A9FAAA,Q8FAQ,A9FAA,C8FAC4d,A9FAAA,a8FAa,A9FAA,E8FAE5X,A9FAAA,K8FAK,A9FAA,E8FAEwH,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AoIGlD,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA,SqEASoQ,A9FAAA,a8FAaA,A9FAAA,C8FAC5X,A9FAAA,K8FAK,A9FAA,E8FAEwH,A9FAAA,M8FAM,A9FAA,E8FAE,A9FAA;AoIGtC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE6L,A9FAAA,K8FAK,A9FAA,C8FAC,A9FAA,e8FAe,A9FAA,E8FAErT,A9FAAA,K8FAK,A9FAA,C8FACkH,A9FAAA,U8FAU,A9FAA,E8FAElH,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,C8FAC,A9FAA;AoIGxD,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA;A2GGA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA,I8FAI,A9FAA,C8FAC2M,A9FAAA,K8FAK,A9FAA,C8FACkH,A9FAAA,U8FAU,A9FAA,I8FAIlH,A9FAAA,K8FAK,A9FAA,C8FAC3M,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA,E8FAE,A9FAA;AoIG/C,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI2M,A9FAAA,K8FAK,A9FAA,C8FACkH,A9FAAA,U8FAU,A9FAA,G8FAG,A9FAA,I8FAI,A9FAA;AoIG3B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAIM,A9FAAA,M8FAM,A9FAA,C8FAC0I,A9FAAA,Q8FAQ,A9FAA,G8FAG,A9FAA,K8FAK,A9FAA;AoIG3B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI1I,A9FAAA,M8FAM,A9FAA,C8FAClM,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA,K8FAK,A9FAA,C8FAC,A9FAA;AoIGtB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI0E,A9FAAA,K8FAK,A9FAA,C8FAC2H,A9FAAA,W8FAW,A9FAA,E8FAE,A9FAA;AoIG3B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA;AoIGN,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA;AoIGN,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,I8FAID,A9FAAA,M8FAM,A9FAA,G8FAGF,A9FAAA,M8FAM,A9FAA,C8FACjB,A9FAAA,c8FAc,A9FAA;AoIGxC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA,I8FAI,A9FAA,C8FACmB,A9FAAA,M8FAM,A9FAA,I8FAIA,A9FAAA,M8FAM,A9FAA,C8FACC,A9FAAA,W8FAW,A9FAA,I8FAID,A9FAAA,M8FAM,A9FAA,C8FACJ,A9FAAA,Q8FAQ,A9FAA,E8FAE,A9FAA;AoIG5D,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,QqEAQE,A9FAAA,M8FAM,A9FAA,C8FACxB,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,MqEAM,A9FAA;AoIGN,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAE,A9FAA;AoIGF,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA;A2GGA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAOlC,A9FAAA,M8FAM,A9FAA,K8FAK,A9FAA,U8FAU,A9FAA,E8FAE,A9FAA;AoIGlC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,EqEAEiM,A9FAAA,Q8FAQ,A9FAA,C8FAChd,A9FAAA,I8FAI,A9FAA,G8FAG,A9FAA,U8FAU8kB,A9FAAA,Q8FAQ,A9FAA,E8FAEhH,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA;AoIG5C,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,I8FAI9d,A9FAAA,I8FAI,A9FAA,K8FAKK,A9FAAA,S8FAS,A9FAA,E8FAE,A9FAA;AoIG5B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,MqEAML,A9FAAA,I8FAI,A9FAA,G8FAGkP,A9FAAA,O8FAO,A9FAA,C8FAC,A9FAA,yB8FAyB,A9FAA,C8FAC,A9FAA;AoIG/C,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA;AoIGJ,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,AxIFA,IqEAI,A9FAA,O8FAOlP,A9FAAA,I8FAI,A9FAA,C8FACgd,A9FAAA,Q8FAQ,A9FAA,E8FAE8H,A9FAAA,Q8FAQ,A9FAA,E8FAEhH,A9FAAA,I8FAI,A9FAA,C8FAC,A9FAA;AoIGzC,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,EnEFE,A9FAA,C8FAC,A9FAA;AoIGH,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA;A7BCA,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA,SnEFSvH,A9FAAA,O8FAOA,A9FAAA,C8FACwO,A9FAAA,E8FAE,A9FAA,E8FAEpgB,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA;AoIGxB,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,EnEFE,A9FAA,K8FAK,A9FAA,I8FAI0C,A9FAAA,C8FAC,A9FAA,G8FAG,A9FAA,C8FAC,A9FAA,E8FAErD,A9FAAA,C8FAC,A9FAA,G8FAG+gB,A9FAAA,E8FAE,A9FAA,C8FACzkB,A9FAAA,M8FAM,A9FAA,E8FAE+G,A9FAAA,C8FAC,A9FAA,G8FAGrD,A9FAAA,C8FAC,A9FAA,E8FAEqD,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA,E8FAE,A9FAA;AoIG7C,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,InEFI,A9FAA,I8FAI0d,A9FAAA,E8FAE,A9FAA,C8FAC1d,A9FAAA,C8FAC,A9FAA,C8FAC,A9FAA,K8FAK1C,A9FAAA,C8FAC,A9FAA,E8FAE,A9FAA,O8FAO0C,A9FAAA,C8FAC,A9FAA;AoIG7B,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,EnEFE,A9FAA;AoIGF,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA,EnEFE,A9FAA,O8FAO,A9FAA,C8FAC,A9FAA,C8FAC,A9FAA;AoIGX,AjCAA,ALFA,ApHCA,AmLCA,AjFAA,A0BAA,AtGFA,A6EEA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,AzHDA,AmLCA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A7BCA,AjCAA,A0DAA,AjFAA,A0BAA,AzBAA,AoFAA;A9DCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"engine.17ba81d4.js","sourceRoot":"..\\src","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","class Hexy {\r\n    constructor() {\r\n       this.input = \"\";\r\n       this.hex=\"\";\r\n       this.arr_1 = [];\r\n       this.arr_2 = [];\r\n       this.color_1 = \"\";\r\n       this.color_2 = \"\";\r\n       this.count = 0;\r\n       this.color_array = []\r\n       this.output = {\"foreground\": this.color_1,\r\n       \"background\": this.color_2,\r\n       \"original_hex\": this.hex,\r\n       \"original_string\": ''}\r\n       this.category = {\r\n        \"normal-aa\": false,\r\n        \"normal-aaa\": false,\r\n        \"large-aa\": false,\r\n        \"large-aaa\": false,\r\n        \"contrast-ratio\": \"1.06:1\"\r\n       }\r\n    }\r\n    //------------------------------------------------------------\r\n    stringToHex (_input) {  \r\n        const encoded = Buffer.from(_input).toString('hex');\r\n        this.hex=encoded;\r\n        this.output.original_hex = encoded;\r\n        this.input = _input;\r\n        return encoded;\r\n      }\r\n    \r\n    //------------------------------------------------------------\r\n   splitHex (_hex) {\r\n      if (_hex == undefined || _hex == null || _hex == \"\") {\r\n          return \"Please input a valid hex.\"\r\n      }\r\n      if (_hex.length < 6) {\r\n          _hex = _hex.padEnd(6, '0');\r\n      }\r\n      if (_hex.length < 12) {\r\n          _hex = _hex.padEnd(12, _hex.slice(-1));\r\n      }\r\n      this.color_1 = '#' + _hex.slice(0, 6);\r\n      this.color_2 = '#' + _hex.slice(-6);\r\n      this.output = {\r\n        \"foreground\": this.color_1,\r\n        \"background\": this.color_2,\r\n        \"original_hex\": _hex,\r\n        \"original_string\": this.input\r\n    }\r\n    \r\n      return this.output\r\n\r\n   }\r\n    //------------------------------------------------------------\r\n   getData(){\r\n    return this.output;\r\n   }\r\n    //------------------------------------------------------------\r\n   reset() {\r\n    this.input = \"\";\r\n       this.hex=\"\";\r\n       this.arr_1 = [];\r\n       this.arr_2 = [];\r\n       this.color_1 = \"\";\r\n       this.color_2 = \"\";\r\n       this.count = 0;\r\n       this.color_array = []\r\n   // Reset more instance variables here\r\n  }\r\n   //------------------------------------------------------------\r\n   getforeGround() {\r\n    var foreground = this.output.foreground;\r\n       return foreground;\r\n     }\r\n    //------------------------------------------------------------\r\n   getBackGround() {\r\n    var background = this.output.background;\r\n       return background;\r\n     }\r\n   //------------------------------------------------------------\r\n   getOriginalText(_input) {\r\n      this.output.original_string=_input\r\n       return this.output.original_string;\r\n     }\r\n     setOriginalHex() {\r\n        var original_hex = this.output.original_hex;\r\n           return original_hex;\r\n         }\r\n   //------------------------------------------------------------\r\n   getRelativeLuminance(color) {\r\n    try{\r\n    let red = parseInt(color.substring(1, 3), 16);\r\n    let green = parseInt(color.substring(3, 5), 16);\r\n    let blue = parseInt(color.substring(5, 7), 16);\r\n\r\n    let percentRed = red / 225;\r\n    let percentGreen = green / 225;\r\n    let percentBlue = blue / 225;\r\n\r\n    let redLum = percentRed <= 0.04045 ? percentRed / 12.92 : Math.pow((percentRed + 0.055) / 1.055, 2.4);\r\n    let greenLum = percentGreen <= 0.04045 ? percentGreen / 12.92 : Math.pow((percentGreen + 0.055) / 1.055, 2.4);\r\n    let blueLum = percentBlue <= 0.04045 ? percentBlue / 12.92 : Math.pow((percentBlue + 0.055) / 1.055, 2.4);\r\n\r\n    return 0.2126 * redLum + 0.7152 * greenLum + 0.0722 * blueLum;\r\n    }\r\n    catch (e){\r\n        console.log(e)\r\n    }\r\n}\r\n   //------------------------------------------------------------\r\n    getContrastRatio(foreground, background) {\r\n    let lumFore = this.getRelativeLuminance(foreground);\r\n    let lumBack = this.getRelativeLuminance(background);\r\n    return (Math.max(lumFore, lumBack) + 0.05) / (Math.min(lumFore, lumBack) + 0.05);\r\n}\r\n    //------------------------------------------------------------\r\n    getRatioCategory (_ratio) {\r\n        if(_ratio) {\r\n        var cRatio = _ratio;\r\n        var l_AAA;\r\n        var n_AAA;\r\n        var l_AA;\r\n        var n_AA;\r\n\r\n\r\n        if (cRatio >= 7) {\r\n            this.category['normal-aa']=false;\r\n            this.category['normal-aaa']=false;\r\n            this.category['large-aa']=false;\r\n            this.category['large-aaa']=true;\r\n            this.category['contrast-ratio']=cRatio;\r\n            \r\n        } else if (cRatio >= 4.5) {\r\n            this.category['normal-aa']=false;\r\n            this.category['normal-aaa']=true;\r\n            this.category['large-aa']=false;\r\n            this.category['large-aaa']=false;\r\n            this.category['contrast-ratio']=cRatio;\r\n        } else if (cRatio >= 3) {\r\n            this.category['normal-aa']=false;\r\n            this.category['normal-aaa']=false;\r\n            this.category['large-aa']=true;\r\n            this.category['large-aaa']=false;\r\n            this.category['contrast-ratio']=cRatio;\r\n        } else {\r\n            this.category['normal-aa']=true;\r\n            this.category['normal-aaa']=false;\r\n            this.category['large-aa']=false;\r\n            this.category['large-aaa']=false;\r\n            this.category['contrast-ratio']=cRatio;\r\n        }\r\n    return this.category;\r\n        }\r\n   }\r\n}\r\n\r\nmodule.exports = Hexy;\r\n\r\n","class Contrast_V2 {\r\n\r\nconstructor () {\r\n  this.contrastRatio;\r\n  this.foreground\r\n  this.background\r\n  this.hexColor=\"#ffffff\";\r\n}\r\n//----------------------------------------------------------------------   \r\n    increaseBrightness(_color, _factor) {\r\n  // Convert the color to HSL\r\n  var hslColor = this.hexToHSL(_color);\r\n\r\n  // Increment the lightness value\r\n  hslColor[2] += _factor;\r\n\r\n  // Ensure the lightness value is within the valid range (0 to 100)\r\n  hslColor[2] = Math.min(99, hslColor[2]);\r\n\r\n  // Convert back to hex color\r\n  return this.hslToHex(hslColor);\r\n  }\r\n//----------------------------------------------------------------------\r\n    decreaseBrightness(_color, _factor) {\r\n    // Convert the color to HSL\r\n    const hslColor = this.hexToHSL(_color);\r\n  \r\n    // Decrement the lightness value\r\n  \r\n    hslColor[2] -= _factor;\r\n    // Ensure the lightness value is within the valid range (1 to 99)\r\n    hslColor[2] = Math.max(1, hslColor[2]);\r\n  \r\n    // Convert back to hex color\r\n    return this.hslToHex(hslColor);\r\n  }\r\n//---------------------------------------------------------------------- \r\n// Helper function to convert HEX to HSL\r\n   hexToHSL(_hex) {\r\n    var hex = _hex\r\n    // console.log(\"hex: \"+ hex)\r\n    hex = hex.replace(/^#/, \"\");\r\n    const r = parseInt(hex.slice(0, 2), 16) / 255;\r\n    const g = parseInt(hex.slice(2, 4), 16) / 255;\r\n    const b = parseInt(hex.slice(4, 6), 16) / 255;\r\n  \r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    \r\n    const l = (max + min) / 2;\r\n  \r\n    let h, s;\r\n    if (max === min) {\r\n      h = s = 0; // achromatic\r\n    } else {\r\n      const d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n  \r\n    return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100)];\r\n  }\r\n//---------------------------------------------------------------------- \r\n// Helper function to convert HSL to HEX\r\n  hslToHex([h, s, l]) {\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n  \r\n    let r, g, b;\r\n  \r\n    if (s === 0) {\r\n      r = g = b = l; // achromatic\r\n    } else {\r\n      const hue2rgb = (p, q, t) => {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      };\r\n  \r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      const p = 2 * l - q;\r\n  \r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n  \r\n    const toHex = (x) => {\r\n      const hex = Math.round(x * 255).toString(16);\r\n      return hex.length === 1 ? \"0\" + hex : hex;\r\n    };\r\n  \r\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n  }\r\n//----------------------------------------------------------------------\r\n//Color Compliance\r\n  calculateCompliantColors(_foreground, _background) {\r\n  this.foreground = _foreground;\r\n  this.background = _background;\r\n  this.contrastRatio = this.getContrastRatio(_foreground, _background);\r\n  const result = {\r\n    \"original-foreground\": _foreground,\r\n    \"original-background\": _background,\r\n    \"original-contrast-ratio\": `${this.contrastRatio.toFixed(2)}:1`,\r\n    \"normal-aa\": this.checkCompliance(4.5),\r\n    \"normal-aaa\": this.checkCompliance(7),\r\n    \"large-aa\": this.checkCompliance(3),\r\n    \"large-aaa\": this.checkCompliance(4.5),\r\n  };\r\n\r\n  return result;\r\n  }\r\n  checkCompliance(_level) {\r\n  if (this.contrastRatio >= _level) {\r\n    return [\r\n      {\r\n        \"foreground\":this.foreground,\r\n        \"background\":this.background,\r\n        \"contrast-ratio\": `${this.contrastRatio.toFixed(2)}:1`,\r\n      },\r\n    ];\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n  getContrastRatio(_foreground, _background) {\r\n  this.foreground = _foreground;\r\n  this.background = _background;\r\n  const L1 = this.getLuminance(this.foreground);\r\n  const L2 = this.getLuminance(this.background);\r\n  this.contrastRatio =\r\n    L1 >= L2\r\n      ? (L1 + 0.05) / (L2 + 0.05)\r\n      : (L2 + 0.05) / (L1 + 0.05);\r\n\r\n  return this.contrastRatio;\r\n}\r\n  getLuminance(_hexColor) {\r\n  this.hexColor = _hexColor;\r\n  const r = parseInt(this.hexColor.slice(1, 3), 16) / 255;\r\n  const g = parseInt(this.hexColor.slice(3, 5), 16) / 255;\r\n  const b = parseInt(this.hexColor.slice(5, 7), 16) / 255;\r\n\r\n  const sRGB = [r, g, b].map((channel) => {\r\n    if (channel <= 0.03928) {\r\n      return channel / 12.92;\r\n    }\r\n    return Math.pow((channel + 0.055) / 1.055, 2.4);\r\n  });\r\n\r\n  return 0.2126 * sRGB[0] + 0.7152 * sRGB[1] + 0.0722 * sRGB[2];\r\n}\r\n}\r\n\r\n// Contrast = new Contrast_V2()\r\n// const result = Contrast.calculateCompliantColors(\"#000000\", \"#FCFCFC\");\r\n// console.log(JSON.stringify(result, null, 2));\r\nmodule.exports = Contrast_V2;\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","module.exports = require('events').EventEmitter;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        pna.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        pna.nextTick(emitErrorNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, _this, err);\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","module.exports = {\n  \"sha224WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"302d300d06096086480165030402040500041c\"\n  },\n  \"RSA-SHA224\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"302d300d06096086480165030402040500041c\"\n  },\n  \"sha256WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"3031300d060960864801650304020105000420\"\n  },\n  \"RSA-SHA256\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"3031300d060960864801650304020105000420\"\n  },\n  \"sha384WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"3041300d060960864801650304020205000430\"\n  },\n  \"RSA-SHA384\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"3041300d060960864801650304020205000430\"\n  },\n  \"sha512WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"3051300d060960864801650304020305000440\"\n  },\n  \"RSA-SHA512\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"3051300d060960864801650304020305000440\"\n  },\n  \"RSA-SHA1\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"3021300906052b0e03021a05000414\"\n  },\n  \"ecdsa-with-SHA1\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"sha256\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"sha224\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"sha384\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"sha512\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA1\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA224\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA224\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA256\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA256\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA384\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA384\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA512\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA512\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-RIPEMD160\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"\"\n  },\n  \"ripemd160WithRSA\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"3021300906052b2403020105000414\"\n  },\n  \"RSA-RIPEMD160\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"3021300906052b2403020105000414\"\n  },\n  \"md5WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"md5\",\n    \"id\": \"3020300c06082a864886f70d020505000410\"\n  },\n  \"RSA-MD5\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"md5\",\n    \"id\": \"3020300c06082a864886f70d020505000410\"\n  }\n}\n;","'use strict';\n\nmodule.exports = require('./browser/algorithms.json');\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (global.process && global.process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (global.process && global.process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\nvar nextTick\nfunction getNextTick () {\n  if (nextTick) {\n    return nextTick\n  }\n  if (global.process && global.process.nextTick) {\n    nextTick = global.process.nextTick\n  } else if (global.queueMicrotask) {\n    nextTick = global.queueMicrotask\n  } else if (global.setImmediate) {\n    nextTick = global.setImmediate\n  } else {\n    nextTick = global.setTimeout\n  }\n  return nextTick\n}\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    getNextTick()(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    getNextTick()(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    getNextTick()(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n    return\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n  this.padding = options.padding !== false\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar utils = require('./utils');\nvar Cipher = require('./cipher');\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  if (this.padding === false) {\n    return false;\n  }\n\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  if (this.padding === false) {\n    return buffer;\n  }\n\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","module.exports = {\n  \"aes-128-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-192-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-256-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-128-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-192-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-256-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes128\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes192\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes256\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-128-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  },\n  \"aes-192-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  },\n  \"aes-256-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  }\n}\n;","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","module.exports = {\n    \"modp1\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"\n    },\n    \"modp2\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"\n    },\n    \"modp5\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"\n    },\n    \"modp14\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"\n    },\n    \"modp15\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"\n    },\n    \"modp16\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"\n    },\n    \"modp17\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"\n    },\n    \"modp18\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"\n    }\n};","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar randomBytes = require('randombytes')\n\nfunction blind (priv) {\n  var r = getr(priv)\n  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()\n  return { blinder: blinder, unblinder: r.invm(priv.modulus) }\n}\n\nfunction getr (priv) {\n  var len = priv.modulus.byteLength()\n  var r\n  do {\n    r = new BN(randomBytes(len))\n  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))\n  return r\n}\n\nfunction crt (msg, priv) {\n  var blinds = blind(priv)\n  var len = priv.modulus.byteLength()\n  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)\n  var c1 = blinded.toRed(BN.mont(priv.prime1))\n  var c2 = blinded.toRed(BN.mont(priv.prime2))\n  var qinv = priv.coefficient\n  var p = priv.prime1\n  var q = priv.prime2\n  var m1 = c1.redPow(priv.exponent1).fromRed()\n  var m2 = c2.redPow(priv.exponent2).fromRed()\n  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)\n  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)\n}\ncrt.getr = getr\n\nmodule.exports = crt\n","module.exports = {\n  \"name\": \"elliptic\",\n  \"version\": \"6.5.4\",\n  \"description\": \"EC cryptography\",\n  \"main\": \"lib/elliptic.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint lib test\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:indutny/elliptic\"\n  },\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"author\": \"Fedor Indutny <fedor@indutny.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"devDependencies\": {\n    \"brfs\": \"^2.0.2\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^7.6.0\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-browserify\": \"^5.3.0\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-connect\": \"^3.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^5.0.0\",\n    \"grunt-mocha-istanbul\": \"^5.0.2\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^8.0.1\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.9\",\n    \"brorand\": \"^1.1.0\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.1\",\n    \"inherits\": \"^2.0.4\",\n    \"minimalistic-assert\": \"^1.0.1\",\n    \"minimalistic-crypto-utils\": \"^1.0.1\"\n  }\n}\n;","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","'use strict';\n\nconst inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n\n  const inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n","'use strict';\n\n// Helper\nfunction reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0)\n      size++;\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null)\n    return false;\n\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","'use strict';\n\nconst encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst bignum = require('bn.js');\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  const state = buffer.save();\n  const res = this._skipUntilEnd(\n    buffer,\n    'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    let res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len);\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n  options) {\n  const result = [];\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    let str = '';\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  const first = (identifiers[0] / 40) | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  const tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  const num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","'use strict';\n\nconst decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","'use strict';\n\nconst encoders = require('./encoders');\nconst decoders = require('./decoders');\nconst inherits = require('inherits');\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n  inherits(Generated, Base);\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","'use strict';\n\nconst base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","'use strict';\n\nconst constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","'use strict';\n\nconst asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","module.exports = {\"2.16.840.1.101.3.4.1.1\": \"aes-128-ecb\",\n\"2.16.840.1.101.3.4.1.2\": \"aes-128-cbc\",\n\"2.16.840.1.101.3.4.1.3\": \"aes-128-ofb\",\n\"2.16.840.1.101.3.4.1.4\": \"aes-128-cfb\",\n\"2.16.840.1.101.3.4.1.21\": \"aes-192-ecb\",\n\"2.16.840.1.101.3.4.1.22\": \"aes-192-cbc\",\n\"2.16.840.1.101.3.4.1.23\": \"aes-192-ofb\",\n\"2.16.840.1.101.3.4.1.24\": \"aes-192-cfb\",\n\"2.16.840.1.101.3.4.1.41\": \"aes-256-ecb\",\n\"2.16.840.1.101.3.4.1.42\": \"aes-256-cbc\",\n\"2.16.840.1.101.3.4.1.43\": \"aes-256-ofb\",\n\"2.16.840.1.101.3.4.1.44\": \"aes-256-cfb\"\n};","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = Buffer.from(match[2], 'hex')\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","module.exports = {\n  \"1.3.132.0.10\": \"secp256k1\",\n  \"1.3.132.0.33\": \"p224\",\n  \"1.2.840.10045.3.1.1\": \"p192\",\n  \"1.2.840.10045.3.1.7\": \"p256\",\n  \"1.3.132.0.34\": \"p384\",\n  \"1.3.132.0.35\": \"p521\"\n}\n;","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar createHmac = require('create-hmac');\nvar crt = require('browserify-rsa');\nvar EC = require('elliptic').ec;\nvar BN = require('bn.js');\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nvar RSA_PKCS1_PADDING = 1;\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong private key type'); }\n    return dsaSign(hash, priv, hashType);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) { throw new Error('illegal or unsupported padding mode'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n  while (hash.length + pad.length + 1 < len) { pad.push(0xff); }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) { pad.push(hash[i]); }\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + priv.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n\n  return Buffer.from(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) { r = [0].concat(r); }\n  if (s[0] & 0x80) { s = [0].concat(s); }\n\n  var total = r.length + s.length + 4;\n  var res = [\n    0x30, total, 0x02, r.length\n  ];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return { k: k, v: v };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) { bits.ishrn(shift); }\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = Buffer.alloc(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;\n","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nfunction verify(sig, hash, key, signType, tag) {\n  var pub = parseKeys(key);\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n    return ecVerify(sig, hash, pub);\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong public key type'); }\n    return dsaVerify(sig, hash, pub);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = pub.modulus.byteLength();\n  var pad = [1];\n  var padNum = 0;\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff);\n    padNum += 1;\n  }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n  pad = Buffer.from(pad);\n  var red = BN.mont(pub.modulus);\n  sig = new BN(sig).toRed(red);\n\n  sig = sig.redPow(new BN(pub.publicExponent));\n  sig = Buffer.from(sig.fromRed().toArray());\n  var out = padNum < 8 ? 1 : 0;\n  len = Math.min(sig.length, pad.length);\n  if (sig.length !== pad.length) { out = 1; }\n\n  i = -1;\n  while (++i < len) { out |= sig[i] ^ pad[i]; }\n  return out === 0;\n}\n\nfunction ecVerify(sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var pubkey = pub.data.subjectPrivateKey.data;\n\n  return curve.verify(hash, sig, pubkey);\n}\n\nfunction dsaVerify(sig, hash, pub) {\n  var p = pub.data.p;\n  var q = pub.data.q;\n  var g = pub.data.g;\n  var y = pub.data.pub_key;\n  var unpacked = parseKeys.signature.decode(sig, 'der');\n  var s = unpacked.s;\n  var r = unpacked.r;\n  checkValue(s, q);\n  checkValue(r, q);\n  var montp = BN.mont(p);\n  var w = s.invm(q);\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q);\n  return v.cmp(r) === 0;\n}\n\nfunction checkValue(b, q) {\n  if (b.cmpn(0) <= 0) { throw new Error('invalid sig'); }\n  if (b.cmp(q) >= 0) { throw new Error('invalid sig'); }\n}\n\nmodule.exports = verify;\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar createHash = require('create-hash');\nvar stream = require('readable-stream');\nvar inherits = require('inherits');\nvar sign = require('./sign');\nvar verify = require('./verify');\n\nvar algorithms = require('./algorithms.json');\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n  var hash = this._hash.digest();\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;\n\n  this.end();\n  var hash = this._hash.digest();\n  return verify(sigBuffer, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","module.exports = {\n  \"name\": \"dotenv\",\n  \"version\": \"16.3.1\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/main.d.ts\",\n      \"require\": \"./lib/main.js\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"lint-readme\": \"standard-markdown\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap tests/*.js --100 -Rspec\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"funding\": \"https://github.com/motdotla/dotenv?sponsor=1\",\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@definitelytyped/dtslint\": \"^0.0.133\",\n    \"@types/node\": \"^18.11.3\",\n    \"decache\": \"^4.6.1\",\n    \"sinon\": \"^14.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"standard-markdown\": \"^7.1.0\",\n    \"standard-version\": \"^9.5.0\",\n    \"tap\": \"^16.3.0\",\n    \"tar\": \"^6.1.11\",\n    \"typescript\": \"^4.8.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"browser\": {\n    \"fs\": false\n  }\n}\n;","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    throw new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenv.org/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      throw new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development')\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    throw new Error('INVALID_DOTENV_KEY: Missing key part')\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    throw new Error('INVALID_DOTENV_KEY: Missing environment part')\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n\n  if (options && options.path && options.path.length > 0) {\n    dotenvPath = options.path\n  }\n\n  // Locate .env.vault\n  return dotenvPath.endsWith('.vault') ? dotenvPath : `${dotenvPath}.vault`\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    let processEnv = process.env\n    if (options && options.processEnv != null) {\n      processEnv = options.processEnv\n    }\n\n    DotenvModule.populate(processEnv, parsed, options)\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _debug(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  const vaultPath = _vaultPath(options)\n\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!fs.existsSync(vaultPath)) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.slice(0, 12)\n  const authTag = ciphertext.slice(-16)\n  ciphertext = ciphertext.slice(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const msg = 'INVALID_DOTENV_KEY: It must be 64 characters long (or more)'\n      throw new Error(msg)\n    } else if (decryptionFailed) {\n      const msg = 'DECRYPTION_FAILED: Please check your DOTENV_KEY'\n      throw new Error(msg)\n    } else {\n      console.error('Error: ', error.code)\n      console.error('Error: ', error.message)\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    throw new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","var Hexy = require('./hexy');\r\nvar Contrast_V2 = require('./contrastV2');\r\n// require('./htmlUtils');\r\n// var { io } = require('socket.io-client');\r\n// require(\"regenerator-runtime/runtime\");\r\nrequire('dotenv').config();\r\n//============================================================\r\nvar input = document.getElementById('user-input');\r\nvar treeLevels = document.querySelectorAll('.tree-level');\r\nvar treeMain = document.getElementById('tree-main');\r\nvar div1 = document.getElementById('original-text');\r\nvar div2 = document.getElementById('original-hex');\r\nvar div3 = document.getElementById('original-output');\r\nvar div4 = document.getElementById('c-ratio');\r\nvar btn1 = document.getElementById('down-button');\r\nvar btn2 = document.getElementById('up-button');\r\nvar btn3 = document.getElementById('down-button2');\r\nvar btn4 = document.getElementById('up-button2');\r\nvar container = document.getElementById(\"data-container\");\r\n//============================================================\r\n//Setup and configure Socket IO\r\nconst socket = io(process.env.WEBPAGE_URL);\r\nsocket.on('connect', () =>{\r\n    console.log('you connected with id: ' + socket.id);\r\n})\r\n//============================================================\r\n//Misc Functions\r\nfunction sendData() {\r\n    input.addEventListener('input', function(event) {\r\n        socket.emit('event', event.target.value);\r\n      });\r\n}\r\n//============================================================\r\n//Input Listners\r\nHexy = new Hexy();\r\nContrast = new Contrast_V2();\r\nvar foreground;\r\nvar background;\r\nvar contrast; \r\nvar category;\r\nvar hex;\r\nvar out;\r\n   input.addEventListener('input', function(event) {\r\n    \r\n    hex = Hexy.stringToHex(event.target.value);\r\n    out = Hexy.splitHex(hex);\r\n    for (let i = 0; i < treeLevels.length; i++) {\r\n        treeLevels[i].style.borderBottomColor = Hexy.getforeGround();\r\n      }\r\n    treeMain.style.background = Hexy.getBackGround();\r\n    // div3.innerText=JSON.stringify(out);\r\n  \r\n    foreground = Hexy.getforeGround();\r\n    background = Hexy.getBackGround();\r\n\r\n    if (foreground&&background){\r\n        // contrast = Hexy.getContrastRatio(foreground, background);\r\n        contrast = Contrast.calculateCompliantColors(foreground, background);\r\n        category = Hexy.getRatioCategory(contrast);\r\n        // div4.innerText=JSON.stringify(category);    \r\n        insertTextIntoDivs(category, container);  \r\n    }      \r\n   });\r\n//============================================================\r\n//Click Listners\r\n\r\n    //Decrease Tree Brightness\r\n    btn1.addEventListener('click', (event) =>{\r\n    if(foreground&&background) {\r\n        foreground=Contrast.decreaseBrightness(foreground, 10)\r\n        contrast = Contrast.calculateCompliantColors(foreground, background);\r\n        category = Hexy.getRatioCategory(contrast);\r\n        insertTextIntoDivs(category, container);  \r\n        }\r\n        for (let i = 0; i < treeLevels.length; i++) {\r\n            treeLevels[i].style.borderBottomColor = foreground\r\n          }\r\n    })\r\n\r\n    //Increase Tree Brightness\r\n    btn2.addEventListener('click', (event) =>{\r\n        if(foreground&&background) {\r\n            foreground=Contrast.increaseBrightness(foreground, 10)\r\n            contrast = Contrast.calculateCompliantColors(foreground, background);\r\n            category = Hexy.getRatioCategory(contrast);\r\n            insertTextIntoDivs(category, container); \r\n            }\r\n            for (let i = 0; i < treeLevels.length; i++) {\r\n                treeLevels[i].style.borderBottomColor = foreground\r\n              }\r\n            })\r\n//-----------------------------------------------------------------------------\r\n    //Decrease Tree Background Brightness\r\n    btn3.addEventListener('click', (event) =>{\r\n        if(foreground&&background) {\r\n            background=Contrast.decreaseBrightness(background, 10);\r\n            treeMain.style.background = background;\r\n            contrast = Contrast.calculateCompliantColors(foreground, background);\r\n            category = Hexy.getRatioCategory(contrast);\r\n            insertTextIntoDivs(category, container);  \r\n            } \r\n        })\r\n\r\n    //Increase Tree Background Brightness\r\n    btn4.addEventListener('click', (event) =>{\r\n        if(foreground&&background) { \r\n            background=Contrast.increaseBrightness(background, 10)\r\n            treeMain.style.background = background;\r\n            contrast = Contrast.calculateCompliantColors(foreground, background);\r\n            category = Hexy.getRatioCategory(contrast);\r\n            insertTextIntoDivs(category, container);\r\n\r\n            }\r\n            })\r\n//======================================================================\r\nfunction insertTextIntoDivs(data, container) {\r\n    // Clear the existing content in the container\r\n    container.innerHTML = '';\r\n  \r\n    for (const key in data) {\r\n      if (data.hasOwnProperty(key)) {\r\n        const value = data[key];\r\n        const div = document.createElement(\"div\");\r\n        div.innerText = key;\r\n  \r\n        // Append the div to the container\r\n        container.appendChild(div);\r\n  \r\n        if (typeof value === \"object\") {\r\n          if (Array.isArray(value)) {\r\n            // If it's an array, create divs for each element\r\n            for (let i = 0; i < value.length; i++) {\r\n              const arrayItem = value[i];\r\n              const arrayItemDiv = document.createElement(\"div\");\r\n              arrayItemDiv.innerText = JSON.stringify(arrayItem);\r\n              div.appendChild(arrayItemDiv);\r\n            }\r\n          } else {\r\n            // If it's an object, recursively insert its contents\r\n            insertTextIntoDivs(value, div);\r\n          }\r\n        } else {\r\n          // If it's a primitive value, insert it as text\r\n          const textDiv = document.createElement(\"div\");\r\n          textDiv.innerText = value.toString();\r\n          div.appendChild(textDiv);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n"]}